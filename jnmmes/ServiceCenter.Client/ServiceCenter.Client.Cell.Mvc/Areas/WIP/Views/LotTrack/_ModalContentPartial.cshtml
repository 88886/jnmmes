@model ServiceCenter.Client.Mvc.Areas.WIP.Models.LotTrackViewModel
@using ServiceCenter.MES.Model.FMM;
@using ServiceCenter.MES.Model.WIP;
@using ServiceCenter.Model;
@using ServiceCenter.Common;
@using WIPRsources = ServiceCenter.Client.Mvc.Resources.WIP;
@{
    Lot obj = ViewBag.Lot;
    IList<RouteStepParameter> lstParameter = ViewBag.ParameterList;
    IList<ReasonCodeCategoryDetail> lstDefectReasonCodes = ViewBag.DefectReasonCodeList;
    IList<ReasonCodeCategoryDetail> lstScrapReasonCodes = ViewBag.ScrapReasonCodeList;
    string colmd = "col-md-6";
    if (lstDefectReasonCodes==null || lstDefectReasonCodes.Count==0)
    {
        colmd = "col-md-12";
    }
    
    if (lstScrapReasonCodes == null || lstScrapReasonCodes.Count == 0)
    {
        colmd = "col-md-12";
    }
    
    bool isInputColor=false;
    if(ViewBag.IsInputColor!=null){
        isInputColor=ViewBag.IsInputColor;
    }
    
    bool isInputGrade=false;
    if(ViewBag.IsInputGrade!=null){
        isInputGrade = ViewBag.IsInputGrade;
    }
}

<div class="panel panel-default">
    <div class="panel-body">
        <div class="form-group">
            <div class="col-md-1">
                @WIPRsources.StringResource.LotNumber：
            </div>
            <div class="col-md-2">
                @obj.Key
            </div>
            <div class="col-md-1">
                @WIPRsources.StringResource.LotViewModel_OrderNumber：
            </div>
            <div class="col-md-2">
                @obj.OrderNumber
            </div>
            <div class="col-md-1">
                @WIPRsources.StringResource.LotViewModel_MaterialCode：
            </div>
            <div class="col-md-2">
                @obj.MaterialCode
            </div>
            <div class="col-md-1">
                @WIPRsources.StringResource.LotViewModel_StateFlag：
            </div>
            <div class="col-md-2">
                @obj.StateFlag.GetDisplayName()
            </div>
        </div>
        @if (isInputGrade || isInputColor)
        {
            <div class="form-group">
                @if (isInputGrade)
                {
                        <div class="col-md-1">
                            @Html.LabelFor(m => m.Grade, new { @class = "control-label" })
                        </div>
                        <div class="col-md-2">
                            @Html.DropDownListFor(m => m.Grade, @Model.GetGradeList(), new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Grade)
                        </div>
                }
                @if (isInputColor)
                {
                        <div class="col-md-1">
                            @Html.LabelFor(m => m.Color, new { @class = "control-label" })
                        </div>
                        <div class="col-md-2">
                            @Html.DropDownListFor(m => m.Color, @Model.GetColorList(),  new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Color)
                        </div>
                }
            </div>
        }
        <div class="form-group">
            <div class="col-md-1">
                @Html.LabelFor(m => m.Description, new { @class = "control-label" })
            </div>
            <div class="col-md-11">
                @Html.TextBoxFor(m => m.Description,  new { @class = "form-control" })
            </div>
        </div>
    </div>
</div>

@if (lstParameter != null && lstParameter.Count > 0)
{
    <div class="panel panel-default">
        <div class="panel-heading">
            参数
        </div>
        <div class="panel-body">
            @foreach (RouteStepParameter item in lstParameter)
            {
                string required = string.Empty;
                string defaultValue = string.Empty;
                string hashcode = string.Format("{0}{1}{2}", item.Key.RouteName, item.Key.RouteStepName, item.Key.ParameterName)
                                        .GetHashCode()
                                        .ToString()
                                        .Replace('-', '_');
                string paramName = string.Format("PARAM_{0}", hashcode);

                if (item.IsUsePreValue && Request.Cookies.Get(paramName) != null)
                {
                    defaultValue = Request.Cookies.Get(paramName).Value;
                }

                if (item.IsMustInput)
                {
                    required = "data-val-required= 字段" + item.Key.ParameterName + "是必需的。";
                }
                <div class="form-group">
                    <div class="col-md-2">
                        @item.Key.ParameterName
                    </div>
                    <div class="col-md-10">
                        @if (item.DataType == EnumDataType.Boolean)
                        {
                            string isChecked = defaultValue == "on" ? "checked" : string.Empty;

                            <input type="checkbox"
                                    name="@paramName"
                                    class="form-control"
                                    @isChecked />
                        }
                        else if (item.DataType == EnumDataType.Date)
                        {

                            <input type="text"
                                    name="@paramName"
                                    value="@defaultValue"
                                    data-val="true"
                                    data-val-date="字段  @item.Key.ParameterName 必须是日期。"
                                    style="ime-mode:disabled"
                                    @required
                                    class="form-control datepicker" />
                        }
                        else if (item.DataType == EnumDataType.DateTime)
                        {
                            <input type="text"
                                    name="@paramName"
                                    value="@defaultValue"
                                    data-val="true"
                                    data-val-date="字段  @item.Key.ParameterName 必须是日期。"
                                    style="ime-mode:disabled"
                                    @required
                                    class="form-control datetimepicker" />
                        }
                        else if (item.DataType == EnumDataType.Float)
                        {
                            <input type="text"
                                   name="@paramName"
                                   value="@defaultValue"
                                   style="ime-mode:disabled"
                                   data-val="true"
                                   data-val-number="字段  @item.Key.ParameterName 必须是数字。"
                                   @required
                                   maxlength="18"
                                   class="form-control" />
                        }
                        else if (item.DataType == EnumDataType.Integer)
                        {
                            <input type="text"
                                   name="@paramName"
                                   value="@defaultValue"
                                   style="ime-mode:disabled"
                                   data-val="true"
                                   data-val-number="字段  @item.Key.ParameterName 必须是数字。"
                                   data-val-regex="字段  @item.Key.ParameterName 需要是整数。"
                                   data-val-regex-pattern="[0-9]+"
                                   @required
                                   maxlength="10"
                                   class="form-control" />
                        }
                        else
                        {
                            <input type="text"
                                   name="@paramName"
                                   value="@defaultValue"
                                   style="ime-mode:inactive"
                                   data-val="true"
                                   @required
                                   maxlength="50"
                                   class="form-control" />
                        }
                        <span class="field-validation-valid" data-valmsg-for="@paramName" data-valmsg-replace="true"></span>
                    </div>
                </div>
            }
        </div>
    </div>
}

<div class="form-group">
    @if (lstDefectReasonCodes != null && lstDefectReasonCodes.Count > 0)
    {
        var lnq = from item in lstDefectReasonCodes orderby item.ItemNo select item;
        <div class="@colmd">
            <div class="panel panel-default">
                <div class="panel-heading">
                    不良
                </div>
                <div class="panel-body">
                    @foreach (ReasonCodeCategoryDetail item in lnq)
                    {
                        string hashcode = string.Format("{0}{1}", item.Key.ReasonCodeCategoryName, item.Key.ReasonCodeName)
                                            .GetHashCode()
                                            .ToString()
                                            .Replace('-', '_');
                        string inputControlName = string.Format("DefectReasonCode_{0}", hashcode);
                        <div class="form-group">
                            <div class="col-md-2">
                                @item.Key.ReasonCodeName
                            </div>
                            <div class="col-md-10">
                                <input type="text"
                                       name="@inputControlName"
                                       value=""
                                       style="ime-mode:disabled"
                                       data-val="true"
                                       data-val-number="字段  @item.Key.ReasonCodeName 必须是数字。"
                                       data-val-regex="字段  @item.Key.ReasonCodeName 需要是整数。"
                                       data-val-regex-pattern="[0-9]+"
                                       maxlength="10"
                                       class="form-control" />
                                <span class="field-validation-valid" data-valmsg-for="@inputControlName" data-valmsg-replace="true"></span>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    }

    @if (lstScrapReasonCodes != null && lstScrapReasonCodes.Count > 0)
    {
        var lnq = from item in lstScrapReasonCodes
                    orderby item.ItemNo
                    select item;
        <div class="@colmd">
            <div class="panel panel-default">
                <div class="panel-heading">
                    报废
                </div>
                <div class="panel-body">
                    @foreach (ReasonCodeCategoryDetail item in lnq)
                    {
                        string hashcode = string.Format("{0}{1}", item.Key.ReasonCodeCategoryName, item.Key.ReasonCodeName)
                                            .GetHashCode()
                                            .ToString()
                                            .Replace('-', '_');
                        string inputControlName = string.Format("ScrapReasonCode_{0}", hashcode);
                        <div class="form-group">
                            <div class="col-md-2">
                                @item.Key.ReasonCodeName
                            </div>
                            <div class="col-md-10">
                                <input type="text"
                                       name="@inputControlName"
                                       value=""
                                       style="ime-mode:disabled"
                                       data-val="true"
                                       data-val-number="字段  @item.Key.ReasonCodeName 必须是数字。"
                                       data-val-regex="字段  @item.Key.ReasonCodeName 需要是整数。"
                                       data-val-regex-pattern="[0-9]+"
                                       maxlength="10"
                                       class="form-control" />
                                <span class="field-validation-valid" data-valmsg-for="@inputControlName" data-valmsg-replace="true"></span>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    }
</div>
