@model ServiceCenter.Client.Mvc.Areas.FMM.Models.ScheduleDayViewModel
@using ServiceCenter.Client.Mvc.Areas.FMM.Models;
@using ServiceCenter.Client.Mvc.Resources;
@using FMM = ServiceCenter.Client.Mvc.Resources.FMM;
@using ServiceCenter.MES.Model.FMM;
@using ServiceCenter.Common;
@using ServiceCenter.Model;
@{
    ScheduleMonth scheduleMonth = ViewBag.ScheduleMonth;
    string sStartDate = string.Format("{0}-{1}-01",scheduleMonth.Key.Year,scheduleMonth.Key.Month);
    DateTime startDate = DateTime.Parse(sStartDate);
    DateTime endDate = startDate.AddMonths(1).AddDays(-1);
    
    IList<ScheduleDetail> lstScheduleDetail = new List<ScheduleDetail>();
    if (ViewBag.ScheduleDetailList != null)
    {
        lstScheduleDetail = ViewBag.ScheduleDetailList;
    }

    IList<ScheduleDay> lstScheduleDay = new List<ScheduleDay>();
    if (ViewBag.ScheduleDayList != null)
    {
        lstScheduleDay = ViewBag.ScheduleDayList;
    }
    IList<SelectListItem> lstShiftValue = Model.GetShiftValue();
    string defaultShiftValue = string.Empty;
    if (lstShiftValue.Count > 0)
    {
        defaultShiftValue = lstShiftValue[0].Value;
    }

    string defaultSecondShiftValue = defaultShiftValue;
    if (lstShiftValue.Count > 1)
    {
        defaultSecondShiftValue = lstShiftValue[1].Value;
    }
}
<p></p>
@Html.ValidationSummary(true)
@Html.Hidden("LocationName", scheduleMonth.Key.LocationName)
@Html.Hidden("RouteOperationName", scheduleMonth.Key.RouteOperationName)
<table class="table table-hover table-bordered table-condensed">
    <thead>
        <tr class="active">
            <td>@Html.DisplayNameFor(m => m.SeqNo)</td>
            <td>@Html.DisplayNameFor(m => m.Day)</td>
            <td>@Html.DisplayNameFor(m => m.ShiftName)</td>
            <td>@Html.DisplayNameFor(m => m.StartTime)</td>
            <td>@Html.DisplayNameFor(m => m.EndTime)</td>
            <td>@Html.DisplayNameFor(m => m.ShiftValue)</td>
        </tr>
    </thead>
    <tbody>
    @{
        var  itemNo = 1;
        for (DateTime d = startDate; d <= endDate; d=d.AddDays(1) )
        {
            foreach(ScheduleDetail detail in lstScheduleDetail)
            {
                Shift shift = @Model.GetShift(detail.Key.ShiftName);
                string day=d.ToString("yyyy-MM-dd");
                string startTime = string.Format("{0} {1}", day, shift.StartTime);
                string endTime =  shift.IsOverDay
                                    ? string.Format("{0} {1}", d.AddDays(1).ToString("yyyy-MM-dd"), shift.EndTime)
                                    :string.Format("{0} {1}", day, shift.EndTime);
                var shiftValue = (from item in lstScheduleDay
                                  where item.Key.Day == d && item.Key.ShiftName==detail.Key.ShiftName
                                  select item.ShiftValue).SingleOrDefault();
                <tr>
                    <td>
                        @itemNo
                        @Html.Hidden("SeqNo", itemNo)
                    </td>
                    <td>
                        @day
                        @Html.Hidden("Day",day)
                    </td>
                    <td>
                        @detail.Key.ShiftName
                        @Html.Hidden("ShiftName", detail.Key.ShiftName)
                    </td>
                    <td>
                        @startTime
                        @Html.Hidden("StartTime", startTime)
                    </td>
                    <td>
                        @endTime
                        @Html.Hidden("EndTime", endTime)
                    </td>
                    <td>
                        @Html.DropDownList("ShiftValue"
                                         , (from item in lstShiftValue
                                           select new SelectListItem()
                                           {
                                               Selected = item.Value == shiftValue 
                                                           ? true 
                                                           : (itemNo%2==0 && item.Value==defaultSecondShiftValue
                                                              ?true
                                                              : item.Value == defaultShiftValue),
                                               Text=item.Text,
                                               Value=item.Value 
                                           })
                                         , new { @class = "form-control input-sm"})
                    </td>
                </tr>
                itemNo = itemNo + 1;
            }
        }
    }
    </tbody>
</table>


