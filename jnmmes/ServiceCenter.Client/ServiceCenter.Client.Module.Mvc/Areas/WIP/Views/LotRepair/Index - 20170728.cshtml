@model ServiceCenter.Client.Mvc.Areas.WIP.Models.LotRepairViewModel
@using ServiceCenter.MES.Model.WIP;
@using ServiceCenter.Model;
@using ServiceCenter.Common;
@using ServiceCenter.Client.Mvc.Areas.WIP.Models;
@using WIPRsources = ServiceCenter.Client.Mvc.Resources.WIP;
@using ServiceCenter.Client.Mvc.Resources;

@{
    ViewBag.Title = WIPRsources.StringResource.LotRepair_ManagePageTitle;
}
<h2>@ViewBag.Title</h2>
@using (Ajax.BeginForm("Save", "LotRepair", null
                    , new AjaxOptions()
                    {
                        HttpMethod = "Post",
                        OnSuccess = "completeSave",
                        OnBegin = "beginSave"
                    }
                    , new { @class = "form-horizontal", resource = "form", id = "frmRepair", autocomplete = "off" }))
{
<div class="panel panel-default">
    <div class="panel-heading">
        <input type="button" value="@StringResource.Save" class="btn btn-primary" id="btnSave" />
    </div>
    <div class="panel-body">
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        <div class="alert fade in hide" resource="alert" id="statusMessage" style="margin:0px">
            <button type="button" class="close" onclick="hideStatusMessage()">
                <span aria-hidden="true">×</span><span class="sr-only">Close</span>
            </button>
            <p></p>
        </div>
        <div class="form-group has-success">
            <div class="col-md-12">
                @Html.LabelFor(m => m.LotNumber, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.LotNumber, new { @class = "form-control", @style = "height:50px;font-size:20px;text-transform:uppercase;" })
                @Html.ValidationMessageFor(m => m.LotNumber)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(m => m.RouteEnterpriseName, new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Html.DropDownListFor(m => m.RouteEnterpriseName, new List<SelectListItem>(), new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.RouteEnterpriseName)
            </div>
            <div class="col-md-2">
                @Html.LabelFor(m => m.RouteName, new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Html.DropDownListFor(m => m.RouteName, new List<SelectListItem>(), new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.RouteName)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(m => m.RouteStepName, new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Html.DropDownListFor(m => m.RouteStepName, new List<SelectListItem>(), new { @class = "form-control"})
                @Html.ValidationMessageFor(m => m.RouteStepName)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(m => m.Description, new { @class = "control-label" })
            </div>
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Description)
            </div>
        </div>
    </div>
</div>
}
@section Scripts {
    <script type="text/javascript" language="javascript">
        var preOrderNumber = "";
        $(function () {
            $("#LotNumber:first").focus();
            var isChanging = false;
            $("#LotNumber").keypress(function (args) {
                if (args.ctrlKey == false && args.keyCode == 13) {
                    $(this).change();
                }
            }).change(function () {

                if (isChanging == true){
                    return;
                }
                isChanging = true;
                hideStatusMessage();
                preOrderNumber = "";
                $("#RouteEnterpriseName").get(0).options.length = 0;
                $("#RouteName").get(0).options.length = 0; //清空
                $("#RouteName").get(0).options.length = 0; //清空

                var url = "@Url.Action("GetLotInfo", "LotRepair", new { area = "WIP" })";
                var lotNumber = $(this).val().toUpperCase();
                var reqdata = { LotNumber: lotNumber };
                $.getJSON(url, reqdata, function (result) {
                    if (result.Code > 0) {
                        showErrorInfo(result);
                        $("#LotNumber:first").select();
                    }
                    else {
                        if (preOrderNumber != result.Data.OrderNumber) {
                            preOrderNumber = result.Data.OrderNumber;
                            changeRouteEnterpriseName(preOrderNumber);
                        }
                    }
                    isChanging = false;
                });

            });

            $("#btnSave").click(function () {
                hideStatusMessage();
                if (isChanging) {
                    return;
                }
                $("#frmRepair").submit();
            });

            $("body").keypress(function (args) {
                if (args.ctrlKey == true && args.keyCode == 13) {
                    $("#btnSave").click();
                }
            });

            $("input,textarea,select")
                .focus(function () {
                    $(this).select();
                })
                .keypress(function (args) {
                if (args.ctrlKey == false && args.keyCode == 13) {
                    var texts = $("input[type='text'],textarea,select");
                    var index = texts.index(this)+1;
                    if (index < texts.length) {
                        texts.eq(index).focus();
                    }
                    else {
                        $("#btnSave").click();
                    }
                }
            });

            $("#RouteEnterpriseName").change(function () {
                changeRouteName($(this).val());
            });

            $("#RouteName").change(function () {
                changeRouteStepName($(this).val());
            });

        });

        function changeRouteEnterpriseName(orderNumber) {

            $("#RouteEnterpriseName").get(0).options.length = 0; //清空

            if (orderNumber == null || orderNumber == "") {
                return;
            }

            var url = "@Url.Action("GetRouteEnterpriseNames", "LotRepair", new { area = "WIP" })";
            var reqdata = { OrderNumber: orderNumber };

            $.getJSON(url, reqdata, function (data) {
                $.each(data, function (i, item) {
                    $("<option></option>").val(item.Value).text(item.Text).appendTo($("#RouteEnterpriseName"));
                });
                changeRouteName($("#RouteEnterpriseName").val());
            });
        }

        function changeRouteName(routeEnterpriseName) {

            $("#RouteName").get(0).options.length = 0; //清空
            var url = "@Url.Action("GetRouteNames", "LotRepair", new { area = "WIP" })";
            var reqdata = { RouteEnterpriseName: routeEnterpriseName};

            $.getJSON(url, reqdata, function (data) {
                $.each(data, function (i, item) {
                    $("<option></option>").val(item.Value).text(item.Text).appendTo($("#RouteName"));
                });
                changeRouteStepName($("#RouteName").val());
            });
        }

        function changeRouteStepName(routeName) {

            $("#RouteStepName").get(0).options.length = 0; //清空
            var url = "@Url.Action("GetRouteStepNames", "LotRepair", new { area = "WIP" })";
            var reqdata = { RouteName: routeName };

            $.getJSON(url, reqdata, function (data) {
                $.each(data, function (i, item) {
                    $("<option></option>").val(item.Value).text(item.Text).appendTo($("#RouteStepName"));
                });
            });
        }

        //隐藏状态消息
        function hideStatusMessage() {
            $("#statusMessage").addClass("hide");
        }

        function beginSave() {
            $("#btnSave").attr("disabled", "disabled");
            hideStatusMessage();
        }

        function completeSave(result) {
            $("#btnSave").removeAttr("disabled");
            showErrorInfo(result);
            $("#LotNumber:first").select();
        }


        function showErrorInfo(result) {
            $("#statusMessage").find("p").html(result.Message);
            $("#statusMessage").removeClass("hide");
            if (result.Code > 0) {
                $("#statusMessage").removeClass("alert-success");
                $("#statusMessage").addClass("alert-danger");
            }
            else {
                $("#statusMessage").removeClass("alert-danger");
                $("#statusMessage").addClass("alert-success");
            }
        }
    </script>

}