@model ServiceCenter.Client.Mvc.Areas.WIP.Models.LotTrackMaterialViewModel
@using ServiceCenter.MES.Model.FMM;
@*@using ServiceCenter.MES.Model.WIP;
@using ServiceCenter.MES.Model.ZPVM;
@using ServiceCenter.Model;
@using ServiceCenter.Common;
@using WIPRsources = ServiceCenter.Client.Mvc.Resources.WIP;
@using ServiceCenter.Client.Mvc.Areas.LSM.Models;*@

@{
    IList<RouteStepParameter> lstRouteStepParameter = ViewBag.lstRouteStepParameter;
}

<table class="table table-hover table-bordered table-condensed" id="tblDetail">
    <thead>
        <tr class="active">            
            <td>
                @Html.DisplayNameFor(m => m.MaterialName)
                <p>@Html.ValidationMessageFor(m => m.MaterialName)</p>
            </td>
            <td>
                @Html.DisplayNameFor(m => m.MaterialLot)
                <p>@Html.ValidationMessageFor(m => m.MaterialLot)</p>
            </td>
            <td>
                @Html.DisplayNameFor(m => m.LoadingQty)
                <p>@Html.ValidationMessageFor(m => m.LoadingQty)</p>
            </td>            
            <td>删除</td>
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < lstRouteStepParameter.Count; i++)
        {            
            Model.MaterialCode = lstRouteStepParameter[i].MaterialType;         //物料代码
            Model.MaterialName = lstRouteStepParameter[i].Key.ParameterName;    //物料名称            
            string sDefaultValue = string.Empty;

            if (Request.Cookies.Get(Model.MaterialCode) != null)
            {
                sDefaultValue = Request.Cookies.Get(Model.MaterialCode).Value;

                Model.MaterialLot = sDefaultValue;        
            }
            
            <tr>            
                <td>
                    @Html.DropDownListFor(m => m.MaterialCode, @Model.GetMaterialName(Model.RouteName, Model.RouteOperationName), new { @class = "form-control" })
                </td>
                <td>
                    @*@Html.TextBoxFor(m => m.MaterialLot, new { @class = "form-control", @style = "text-transform:uppercase" })*@
                    @Html.TextBoxFor(m => m.MaterialLot, new { @class = "form-control" })                
                </td>
                <td>
                    @Html.TextBoxFor(m => m.LoadingQty, @Model.GetMaterialBOMUseLevel(Model.MaterialCode, Model.OrderNumber).ToString(), new { @class = "form-control" })
               
                </td>            
                <td>
                    <input type="button" class="btn btn-default" value="删除" id="btnDeleteDetailRow" onclick="removeDetailRow($(this))" />
                </td>
            </tr>
        }
        
    </tbody>
</table>

@section Scripts {
    @*定义事件*@
    <script type="text/javascript" language="javascript">
        //年度控件事件
        $("#MaterialCode").change(function ()
        {
            alert('ok');
            //changeMaterialCode($(this).val(), Model.OrderNumber);
            changeMaterialCode($(this).val(), "");
        });
    </script>

    @*事件函数*@
    <script type="text/javascript" language="javascript">
        function changeMaterialCode(smaterialcode, sorderNumber)
        {
            alert('ok');
            //$("#LoadingQty").get(0).options.length = 0; //清空

            if (smaterialcode == null || smaterialcode == "") {
                return;
            }
            if (sorderNumber == null || sorderNumber == "") {
                return;
            }

            @*var reqdata = @Model.GetMaterialBOMUseLevel(materialcode: smaterialcode, orderNumber: sorderNumber);*@

            @*var url = "@Url.Action("GetDays", "PlanDay", new { area = "WIP" })";

            var reqdata = { Year: year, Month: month };

            $.getJSON(url, reqdata, function (data)
            {
                $("#LoadingQty").get(0).options.length = 0; //清空
                $.each(data, function (i, item) {
                    $("<option></option>").val(item.Text).text(item.Value).appendTo($("#Day"));
                });
            });*@
        }
    </script>
}