@model ServiceCenter.Client.Mvc.Areas.ZPVM.Models.ChestViewModel
@using ServiceCenter.MES.Model.ZPVM;
@using ServiceCenter.Model;
@using ServiceCenter.Common;
@using ServiceCenter.Client.Mvc.Areas.ZPVM.Models;
@using ZPVMRsources = ServiceCenter.Client.Mvc.Resources.ZPVM;
@using ServiceCenter.Client.Mvc.Resources;

@{
    ViewBag.Title = ZPVMRsources.StringResource.PackageInChest_ManagePageTitle;
}
<h2>@ViewBag.Title</h2>
@using (Ajax.BeginForm("Save", "PackageInChest", null
                    , new AjaxOptions()
                    {
                        HttpMethod = "Post",
                        OnSuccess = "completeSave",
                        OnBegin = "beginSave"
                    }
                    , new { @class = "form-horizontal", resource = "form", id = "frmPackage", autocomplete = "off" }))
{
<div class="panel panel-default">
    <div class="panel-heading">
        <input type="submit" value="入柜" class="btn btn-primary" id="btnSave" />     
        @Ajax.ActionLink("手动完成入柜", "Finish", null,
                         new AjaxOptions()
                         {
                             HttpMethod = "Post",
                             OnBegin = "beginFinish",
                             OnSuccess = "completeFinish"
                         }
                         , new { @class = "btn btn-default", @id = "btnFinish" })   
    </div>    
    <div class="panel-body">
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)       
        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(m => m.StoreLocation, new { @class = "control-label" })
            </div>
            <div class="col-md-2">
                @Html.DropDownListFor(m => m.StoreLocation, @Model.GetStoreLocationList(), new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.StoreLocation)
            </div>                        
            <div class="col-md-2">
                @Html.LabelFor(m => m.FullQuantity, new { @class = "control-label" })
            </div>
            <div class="col-md-2">
                @Html.TextBoxFor(m => m.FullQuantity, new { @class = "form-control", @readonly = "readonly", @id = "txtFullQuantity" })
                @Html.ValidationMessageFor(m => m.FullQuantity)
            </div>
            <div class="col-md-2">
                @Html.LabelFor(m => m.IsManual, new { @class = "control-label" })
            </div>
            <div class="col-md-2">
                @Html.CheckBoxFor(m => m.IsManual, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.IsManual)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(m => m.ChestNo, new { @class = "control-label" })
            </div>
            <div class="col-md-2">
                @Html.TextBoxFor(m => m.ChestNo, new { @class = "form-control", style = "text-transform:ime-mode:disabled" })
                @Html.ValidationMessageFor(m => m.ChestNo)
            </div>
            <div class="col-md-2">
                @Html.LabelFor(m => m.CurrentQuantity, new { @class = "control-label" })
            </div>
            <div class="col-md-2">
                @Html.TextBoxFor(m => m.CurrentQuantity, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(m => m.CurrentQuantity)
            </div>
            <div class="col-md-2">
                @Html.LabelFor(m => m.IsLastestPackageInChest, new { @class = "control-label" })
            </div>
            <div class="col-md-2">
                @Html.CheckBoxFor(m => m.IsLastestPackageInChest, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.IsLastestPackageInChest)
            </div>
        </div>

        <div class="form-group has-success">
            <div class="col-md-12">
                @Html.LabelFor(m => m.PackageNo, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.PackageNo, new { @class = "form-control", @style = "height:50px;font-size:20px;text-transform:uppercase;ime-mode:disabled" })
                @Html.ValidationMessageFor(m => m.PackageNo)
            </div>
        </div>
        <div class="alert fade in hide" resource="alert" id="statusMessage" style="margin:0px">
            <button type="button" class="close" onclick="hideStatusMessage()">
                <span aria-hidden="true">×</span><span class="sr-only">Close</span>
            </button>
            <p></p>
        </div>

        </div>
    @Ajax.ActionLink(StringResource.Refresh, "Query",null,
                    new AjaxOptions()
                    {
                        HttpMethod="POST",
                        UpdateTargetId = "list",
                        OnBegin="beginRefresh",
                        OnSuccess="completeRefresh"
                    }, new { @class = "btn btn-default", @id = "btnRefresh" })
    <div id="list">
    </div>
</div>
}

@section Scripts {
    <script type="text/javascript" language="javascript">
        $(function () {
            $("#PackageNo").focus();
            
            $("#btnSave").click(function () {
                hideStatusMessage();

                if ($("#PackageNo").val() == "") {
                    return false;
                }
            });           

            $("#PackageNo").keypress(function (args) {
                if (args.keyCode == 13) {
                    $("#btnSave").click();
                }
            });

            $("#ChestNo").keypress(function (args) {
                if (args.keyCode == 13) {
                    changeChestNo($(this));
                }
            });

            var texts = $("#frmPackage").find(":text:visible:enabled,:checkbox:visible:enabled,textarea:visible:enabled,select:visible:enabled");
            texts.focus(function () {
                    $(this).select();
                })
                .keypress(function (args) {
                    if (args.ctrlKey == false && args.keyCode == 13) {
                        var index = texts.index(this)+1;
                        if (index < texts.length) {
                            var c = texts.eq(index);
                            while (c.attr("readonly") == true || c.attr("readonly") == "readonly") {
                                index = index + 1;
                                c = texts.eq(index);
                            }
                            c.focus();
                            return false;
                        }
                        else {
                            return true;
                        }
                    }
                });

            $("#btnRefresh").click();
        });

        function changeChestNo(element) {
            $("#CurrentQuantity").val(0);
            $("#txtFullQuantity").val(0);
            $("#IsLastestPackageInChest").removeAttr("checked");
            var url = "@Url.Action("GetChestInfo", "PackageInChest", new { area = "ZPVM" })";
            var reqdata = { ChestNo: $(element).val() };

            $.getJSON(url, reqdata, function (data) {
                $("#CurrentQuantity").val(0);
                $("#txtFullQuantity").val(0);
                $("#IsLastestPackageInChest").removeAttr("checked");
                if (data.Code > 0) {
                    showErrorInfo(data);
                }
                else {
                    $("#CurrentQuantity").val(data.CurrentQuantity);
                    $("#txtFullQuantity").val(data.FullQuantity);
                    $("#IsLastestPackageInChest").prop("checked", data.IsLastestPackage);
                    $("#StoreLocation").val(data.StoreLocation);
                }               
                
                $("#btnRefresh").click();
            });
        }

        function changeUI(element) {
            $("#CurrentQuantity").val(0);
            $("#txtFullQuantity").val(0);
            $("#IsLastestPackageInChest").removeAttr("checked");
            var url = "@Url.Action("GetChestInfo", "PackageInChest", new { area = "ZPVM" })";
            var reqdata = { ChestNo: $(element).val() };

            $.getJSON(url, reqdata, function (data) {
                $("#CurrentQuantity").val(0);
                $("#txtFullQuantity").val(0);
                $("#IsLastestPackageInChest").removeAttr("checked");
                if (data.Code > 0) {
                    showErrorInfo(data);
                }
                else {
                    $("#CurrentQuantity").val(data.CurrentQuantity);
                    $("#txtFullQuantity").val(data.FullQuantity);
                    $("#IsLastestPackageInChest").prop("checked", data.IsLastestPackage);
                    $("#StoreLocation").val(data.StoreLocation);
                }               
            });
        }        

        //隐藏状态消息
        function hideStatusMessage() {
            $("#statusMessage").addClass("hide");
        }

        function beginSave() {
            $("input,select").attr("disabled", "disabled");
            $(".btn").attr("disabled", "disabled");
            hideStatusMessage();
        }

        function completeSave(result, status, xhr) {
            $("input,select").removeAttr("disabled");
            $(".btn").removeAttr("disabled");
            if (xhr.status == 200) {
                showErrorInfo(result);
                
                if (result.Code == 0) {
                    $("#ChestNo").val(result.Data.ChestNo);
                }

                changeChestNo($("#ChestNo"));
            }
            else {
                var rst = { Code: xhr.statusCode, Message: status + ":" + response };
                showErrorInfo(rst);
            }
            $("#PackageNo").focus().select();
        }

        function beginFinish(obj, req) {
            req.data += "&" + $("#frmPackage").serialize();
            $("input,select").attr("disabled", "disabled");
            $(".btn").attr("disabled", "disabled");
            hideStatusMessage();
        }

        function completeFinish(result, status, xhr) {

            $("input,select").removeAttr("disabled");
            $(".btn").removeAttr("disabled");
            if (xhr.status == 200) {
                showErrorInfo(result);
                if (result.Code == 0) {
                    $("#ChestNo").val(result.Data.ChestNo);
                }

                changeChestNo($("#ChestNo"));
            }
            else {
                var rst = { Code: xhr.statusCode, Message: status + ":" + response };
                showErrorInfo(rst);
            }
            $("#PackageNo").focus().select();
        }

        function showErrorInfo(result) {
            $("#statusMessage").find("p").html(result.Message);
            $("#statusMessage").removeClass("hide");
            if (result.Code > 0) {
                $("#statusMessage").removeClass("alert-success");
                $("#statusMessage").addClass("alert-danger");
            }
            else {
                $("#statusMessage").removeClass("alert-danger");
                $("#statusMessage").addClass("alert-success");
            }
        }
    </script>

    @* 刷新柜明细 *@
    <script type="text/javascript" language="javascript">
        function beginRefresh(obj,req) {
            $("#btnRefresh").attr("disabled", "disabled");
            req.data += "&ChestNo=" + $("#ChestNo").val();
        }

        function completeRefresh(result, status, xhr) {
            $("#btnRefresh").removeAttr("disabled");
            changeUI($("#ChestNo"));
            
        }
    </script>
    @* 完成删除 *@
    <script type="text/javascript" language="javascript">

        function beginDelete(obj, req) {
            $("input,select").attr("disabled", "disabled");
            $(".btn").attr("disabled", "disabled");
        }

        function completeDelete(result, status, xhr) {
            $("input,select").removeAttr("disabled");
            $(".btn").removeAttr("disabled");
            showErrorInfo(result);
            if (xhr.status == 200) {
                showErrorInfo(result);
                if (result.Code == 0) {
                    changeChestNo($("#ChestNo"));
                }
                $("#PackageNo:first").select();
            }
            else {
                var rst = { Code: xhr.statusCode, Message: status + ":" + response };
                showErrorInfo(rst);
            }
        }

    </script>

}