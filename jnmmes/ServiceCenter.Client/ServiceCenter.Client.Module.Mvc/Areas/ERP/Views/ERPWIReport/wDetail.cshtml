@model ServiceCenter.Client.Mvc.Areas.ERP.Models.WOReportDetailQueryViewModel
@using ServiceCenter.Model;
@using ServiceCenter.Common;
@using ServiceCenter.Client.Mvc.Areas.ERP.Models;
@using ERP = ServiceCenter.Client.Mvc.Resources.ERP;
@using ServiceCenter.Client.Mvc.Resources;

@{
    ViewBag.Title = ERP.StringResource.ERPWIPStockInTitle;
    var StoreList = (IEnumerable<SelectListItem>)ViewBag.Store;
    string IsRepair = System.Configuration.ConfigurationSettings.AppSettings["IsRepair"];
}

<h2>@ViewBag.Title</h2>

<div class="panel panel-default">
    <div class="panel-heading">
        @* 明细查询按钮（隐藏） *@
        @Ajax.ActionLink(StringResource.Query, actionName: null
                                    , routeValues: null
                                    , ajaxOptions: new AjaxOptions()
                                    {
                                        HttpMethod = "Post",
                                        UpdateTargetId = "list",
                                        Url = Url.Action("Detail", new { BillCode = @Model.BillCode }),

                                    }
                                    , htmlAttributes: new { @class = "btn btn-default hidden", @id = "btnQuery" })

        @* 入库接收按钮 *@
        @if (Model.BillState == ServiceCenter.MES.Model.ERP.EnumBillState.Apply)
        {
            <a href="javascript:beginStockIn()" class="btn btn-default" id="btnStockIn">@ERP.StringResource.StockIn</a>
        }

        @* 取消入库按钮 *@
        @if (Model.BillState == ServiceCenter.MES.Model.ERP.EnumBillState.Receive)
        {
            <a href="javascript:beginRevokeStockIn()" class="btn btn-default" id="btnRevokeStockIn">@ERP.StringResource.RevokeStockIn</a>

            @*@Ajax.ActionLink(ERP.StringResource.AntiState, actionName: null
                , routeValues: null
                , ajaxOptions: new AjaxOptions()
                {
                    HttpMethod = "Post",
                    OnBegin = "beginRevokeStockIn",
                    OnComplete = "completeRevokeStockIn",
                    UpdateTargetId = "list",
                    Url = Url.Action("RevokeStockIn", new { BillCode = @Model.BillCode}),

                }
                , htmlAttributes: new
                {
                    @class = "btn btn-default",
                    @onclick = "return confirm('确定要撤销吗？')",
                    @id = "btnRevokeStockIn",
                    @value = "入库撤销"
                })*@
        }
        @* 入库修复按钮 *@
        @if (IsRepair == "是")
        {
            <a href="javascript:beginStockInRepair()" class="btn btn-default" id="btnStockInTest">入库修复</a>
        }
    </div>

    <div class="panel-body">
        @Html.AntiForgeryToken()
        <div class="row">

            @* 入库日期 *@
            <div class="col-md-1">
                @Html.LabelFor(m => m.BillDate, new { @class = "control-label" })
            </div>
            <div class="col-md-2">
                @Html.TextBoxFor(m => m.BillDate, "{0:yyyy-MM-dd}", new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(m => m.BillDate)
            </div>

            @* 入库单号 *@
            <div class="col-md-1">
                @Html.LabelFor(m => m.BillCode, new { @class = "control-label" })
            </div>
            <div class="col-md-2">
                @Html.TextBoxFor(m => m.BillCode, new { @class = "form-control", @id = "txtBillCode", @readonly = "readonly" })
                @Html.ValidationMessageFor(m => m.BillCode)
            </div>

            @* 制单日期 *@
            <div class="col-md-1">
                @Html.LabelFor(m => m.BillMakedDate, new { @class = "control-label" })
            </div>
            <div class="col-md-2">
                @Html.TextBoxFor(m => m.BillMakedDate, "{0:yyyy-MM-dd}", new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(m => m.BillMakedDate)
            </div>

            @* 入库类型 *@
            <div class="col-md-1">
                @Html.LabelFor(m => m.BillType, new { @class = "control-label" })
            </div>
            <div class="col-md-2">
                @Html.DropDownListFor(m => m.BillType, @Model.GetBillType(0), new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(m => m.BillType)
            </div>
        </div>

        <div class="form-group"></div>

        <div class="form-group">
            <div class="row">
                <div class="form-group">
                    @* 仓库 *@
                    <div class="col-md-1">
                        @Html.LabelFor(m => m.Store, new { @class = "control-label" })
                    </div>
                    <div class="col-md-2">
                        @Html.DropDownListFor(m => m.Store, StoreList, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Store)
                    </div>

                    @* 备注 *@
                    <div class="col-md-1">
                        @Html.LabelFor(m => m.Note, new { @class = "control-label" })
                    </div>
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.Note, new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(m => m.Note)
                    </div>
                </div>
            </div>
        </div>

    </div>

    <div class="row"></div>

    <div class="alert fade in hide" resource="alert" id="statusMessage" style="margin:0px">
        <button type="button" class="close" onclick="hideStatusMessage()">
            <span aria-hidden="true">×</span><span class="sr-only">Close</span>
        </button>
        <p></p>
    </div>

    <div id="list">
        @Html.Partial("_DetailListPartial", new WOReportDetailViewModel() { BillCode = Model.BillCode })
    </div>
</div>
</div>

@section Scripts {
    <script type="text/javascript" language="javascript">

        function refreshList() {
            $('#btnQuery').click();
        }

        function hideStatusMessage() {
            $("#statusMessage").addClass("hide");
        }

        function completeDelete(result) {
            ShowMessage(result)
        }

        //入库操作
        function beginStockIn() {
            $("#btnStockIn").attr("disabled", "disabled");
            $("#statusMessage").find("p").html("开始入库操作，请稍等...");
            $("#statusMessage").removeClass("alert-danger");
            $("#statusMessage").addClass("alert-success");
            $("#statusMessage").removeClass("hide");

            var Store = $('#Store').val()
            $.ajax({
                type: "post",
                url: "@Url.Action("StockInReceive", "ERPWIReport")",
                data: { BillCode: '@Model.BillCode', Store: Store, ScrapType: '@Model.ScrapType' },
                dataType: "json",
                success: function (result) { completeStockIn(result) }
            });
        }

        function completeStockIn(result) {
            //显示处理信息
            ShowMessage(result)

            //当过程错误时，变更接收按钮为可用状态
            if (result.Code > 0) {
                $("#btnStockIn").removeAttr("disabled");
            }
        }

        //入库修复操作
        function beginStockInRepair() {
            $("#btnStockInTest").attr("disabled", "disabled");
            $("#statusMessage").find("p").html("开始入库修复操作，请稍等...");
            $("#statusMessage").removeClass("alert-danger");
            $("#statusMessage").addClass("alert-success");
            $("#statusMessage").removeClass("hide");

            var Store = $('#Store').val()
            $.ajax({
                type: "post",
                url: "@Url.Action("StockInReceiveTest", "ERPWIReport")",
                data: { BillCode: '@Model.BillCode', Store: Store,ScrapType:'@Model.ScrapType'},
            dataType: "json",
            success: function (result) { completeStockInRepair(result) }
        });
        }

        function completeStockInRepair(result) {
            //显示处理信息
            ShowMessage(result)
            
            //当过程错误时，变更接收按钮为可用状态
            if (result.Code > 0) {
                $("#btnStockInTest").removeAttr("disabled");
            }
        }

        //取消入库
        function beginRevokeStockIn() {
            if (window.confirm('确定撤销入库？')) {
                $("#btnRevokeStockIn").attr("disabled", "disabled");
                $("#statusMessage").find("p").html("正在撤销入库，请稍等...");
                $("#statusMessage").removeClass("alert-danger");
                $("#statusMessage").addClass("alert-success");
                $("#statusMessage").removeClass("hide");

                $.ajax({
                    type: "post",
                    url: "@Url.Action("RevokeStockIn", "ERPWIReport")",
                    data: { BillCode: '@Model.BillCode' },
                    dataType: "json",
                    success: function (result) { completeRevokeStockIn(result) }
                });
            }
        }

        function completeRevokeStockIn(result) {
            //显示处理信息
            ShowMessage(result)

            //当过程错误时，变更接收按钮为可用状态
            if (result.Code > 0) {
                $("#btnRevokeStockIn").removeAttr("disabled");
            }
        }

        function ShowMessage(result) {
            $("#statusMessage").find("p").html(result.Message);
            $("#statusMessage").removeClass("hide");
            if (result.Code > 0) {
                $("#statusMessage").removeClass("alert-success");
                $("#statusMessage").addClass("alert-danger");
            }
            else {
                $("#statusMessage").removeClass("alert-danger");
                $("#statusMessage").addClass("alert-success");
            }

            refreshList();
        }
    </script>
}

