@model ServiceCenter.Client.Mvc.Areas.RPT.Models.LotMaterialList1ViewModel
@using ServiceCenter.Client.Mvc.Resources;
@using RPTResources = ServiceCenter.Client.Mvc.Resources.RPT;
@using ServiceCenter.Common;
@using ServiceCenter.Model;
@using System.Data;
@using ServiceCenter.MES.Service.Client.FMM;
@using ServiceCenter.MES.Service.Client.WIP;
@using ServiceCenter.MES.Service.Client.ZPVM;
@using ServiceCenter.MES.Model.FMM;
@using ServiceCenter.MES.Model.ZPVM;
@{
    PagingConfig cfg = ViewBag.PagingConfig;
    MethodReturnResult<DataSet> ds = new MethodReturnResult<DataSet>();
    DataTable dtList = ViewBag.ListData;
    ds = ViewBag.dtList;
}
@if (dtList != null)
{
<div id="_list" style="overflow:auto">
    <table class="table table-hover table-bordered table-condensed table-responsive table-striped">
        <thead>
            <tr class="active">
                <td nowrap>序号</td>
                <td nowrap>组件批次号</td>
                <td nowrap>物料编码</td>
                <td nowrap>物料名称</td>
                <td nowrap>物料批次号</td>
                <td nowrap>数量</td>
                <td nowrap>供应商名称</td>
                <td nowrap>工艺流程组</td>
                <td nowrap>工艺流程</td>
                <td nowrap>工步</td>
                <td nowrap>线边仓</td>
                <td nowrap>线别</td>
                <td nowrap>设备</td>
                <td nowrap>编辑人</td>
                <td nowrap>编辑时间</td>
            </tr>
        </thead>
        <tbody>
           @if (dtList != null)
                {
                    for (int i = 0; i < dtList.Rows.Count; i++)
                    {
                        System.Data.DataRow obj = dtList.Rows[i];
                        Manufacturer mf = null;
                        using (SupplierToManufacturerServiceClient clients = new SupplierToManufacturerServiceClient())
                        {
                            PagingConfig cfg0 = new PagingConfig()
                            {
                                Where = string.Format(@"Key.MaterialCode='{0}' AND Key.SupplierCode='{1}'"
                                                        , obj["MATERIAL_CODE"]
                                                        , obj["SUPPLIER_CODE"])
                            };
                            MethodReturnResult<IList<SupplierToManufacturer>> result = clients.Gets(ref cfg0);
                            if (result.Code <= 0 && result.Data.Count > 0)
                            {
                                if (result.Data[0].Key.OrderNumber == "*")
                                {
                                    using (ManufacturerServiceClient clientss = new ManufacturerServiceClient())
                                    {
                                        MethodReturnResult<Manufacturer> rsts = clientss.Get(result.Data[0].ManufacturerCode);
                                        if (rsts.Data != null)
                                        {
                                            mf = rsts.Data;
                                        }
                                    }
                                }
                                else
                                {
                                    PagingConfig cfg1 = new PagingConfig()
                                    {
                                        Where = string.Format(@"Key.MaterialCode='{0}' AND Key.OrderNumber='{1}' AND Key.SupplierCode='{2}'"
                                                                , obj["MATERIAL_CODE"]
                                                                , obj["ORDER_NUMBER"]
                                                                , obj["SUPPLIER_CODE"])
                                    };
                                    MethodReturnResult<IList<SupplierToManufacturer>> results = clients.Gets(ref cfg1);
                                    if (results.Code <= 0 && results.Data.Count > 0)
                                    {
                                        using (ManufacturerServiceClient clientss = new ManufacturerServiceClient())
                                        {
                                            MethodReturnResult<Manufacturer> rsts = clientss.Get(results.Data[0].ManufacturerCode);
                                            if (rsts.Data != null)
                                            {
                                                mf = rsts.Data;
                                            }
                                        }
                                    }
                                }
                            }
                        }         
                    <tr>
                        <td nowrap>@obj["RowNumber"] </td>
                        <td nowrap>@obj["LOT_NUMBER"] </td>
                        <td nowrap>@obj["MATERIAL_CODE"] </td>
                        <td nowrap>@obj["MATERIAL_NAME"]</td>
                        <td nowrap>@obj["MATERIAL_LOT"]</td>
                        <td nowrap>@obj["MATERIAL_QTY"]</td>
                        @*<td nowrap>@obj["SUPPLIER_NAME"]</td>*@
                        <td nowrap>
                            @(mf == null ? obj["SUPPLIER_NAME"] : mf.Name)
                        </td>
                        <td nowrap>@obj["ROUTE_ENTERPRISE_NAME"]</td>
                        <td nowrap>@obj["ROUTE_NAME"]</td>
                        <td nowrap>@obj["ROUTE_STEP_NAME"]</td>
                        <td nowrap>@obj["LINE_STORE_NAME"]</td>
                        <td nowrap>@obj["LINE_CODE"]</td>
                        <td nowrap>@obj["EQUIPMENT_CODE"]</td>
                        <td nowrap>@obj["EDITOR"]</td>
                        <td nowrap>@obj["EDIT_TIME"]</td>

                       
                    </tr>
                   
                }

            }
        </tbody>
        
    </table>
    <div style="margin-top:-18px">
        @if (cfg != null)
        {
            using (Ajax.BeginForm("QueryWl", "LotMaterialList"
                            , null
                            , new AjaxOptions()
                            {
                                HttpMethod = "Post",
                                UpdateTargetId = "_list"
                            }
                            , new { @class = "form-horizontal", resource = "form", id = "frmPagingQuery" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.LotNumber)     
                @Html.HiddenFor(m => m.PageSize)
                <div>@Html.Partial("_PaginationPartial")</div>
            }
        }

    </div>

</div>

}
else
{

}
<p>@ViewBag.Message</p>




