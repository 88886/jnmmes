@model ServiceCenter.Client.Mvc.Areas.RPT.Models.RPTDailyDataViewModel
@using ServiceCenter.Model;
@using ServiceCenter.Common;
@using ServiceCenter.Client.Mvc.Areas.RPT.Models;
@using RPTResources = ServiceCenter.Client.Mvc.Resources.RPT;
@using ServiceCenter.Client.Mvc.Resources;

@{
    //需要初始化信息
}
@*<h2>@ViewBag.Title</h2>*@
<h2>@Model.ReportName</h2>
@using (Ajax.BeginForm("ExpertToExcel", "RPTDailyData", null
        , new AjaxOptions()
        {
            HttpMethod = "Post",
            OnBegin = "beginQuery",
            UpdateTargetId = "list",
            OnSuccess = "completeQuery"
        }
        , new { @class = "form-horizontal", resource = "form", id = "frmQuery" }))
{
<div class="panel panel-default">
    <div class="panel-heading">
        <button type="button" class="btn btn-primary" onclick="Query();" id="btnQuery">查询</button>
    </div>
    <div class="panel-body">
        @Html.AntiForgeryToken()
        <div class="form-group">
            @*开始日期*@
            <div class="col-md-1">
                @Html.LabelFor(m => m.StartDate, new { @class = "control-label" })
            </div>
            <div class="col-md-2">
                @*@Html.TextBoxFor(m => m.StartDate, "{0:yyyy-MM-dd}", new { @class = "form-control" })*@
                @Html.TextBoxFor(m => m.StartDate, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.StartDate)
            </div>
            @*结束日期*@
            <div class="col-md-1">
                @Html.LabelFor(m => m.EndDate, new { @class = "control-label" })
            </div>
            <div class="col-md-2">
                @*@Html.TextBoxFor(m => m.EndDate, "{0:yyyy-MM-dd 1:HH:mm:ss}", new { @class = "form-control" })*@
                @Html.TextBoxFor(m => m.EndDate, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.EndDate)
            </div>
            @*车间*@
            <div class="col-md-1">
                @Html.LabelFor(m => m.LocationName, new { @class = "control-label" })
            </div>
            <div class="col-md-2">
                @Html.DropDownListFor(m => m.LocationName, @Model.GetLocations(), string.Empty, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @*线别*@
            <div class="col-md-1">
                @Html.LabelFor(m => m.LineCode, new { @class = "control-label" })
            </div>
            <div class="col-md-2">
                @Html.DropDownListFor(m => m.LineCode, @Model.GetProductionLineList(), string.Empty, new { @class = "form-control" })
            </div>
            @*工单*@
            <div class="col-md-1">
                @Html.LabelFor(m => m.OrderNumber, new { @class = "control-label" })
            </div>
            <div class="col-md-2">
                @Html.TextBoxFor(m => m.OrderNumber, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.OrderNumber)
            </div>
            @*产品类型*@
            @*<div class="col-md-1">
                @Html.LabelFor(m => m.ProductID, new { @class = "control-label" })
            </div>
            <div class="col-md-2">
                @Html.TextBoxFor(m => m.ProductID, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ProductID)
            </div>*@

            @*<div class="alert fade in hide" resource="alert" id="statusMessage" style="margin:0px">
                <button type="button" class="close" onclick="hideStatusMessage()">
                    <span aria-hidden="true">×</span><span class="sr-only">Close</span>
                </button>
                <p></p>
            </div>*@
            @*报表代码*@
            @Html.HiddenFor(m => m.ReportCode)
            @*报表名称*@
            @Html.HiddenFor(m => m.ReportName)
        </div>
        <div class="form-group">
            @*错误信息显示*@
            <div class="alert fade in hide" resource="alert" id="statusMessage" style="margin:0px">
                <button type="button" class="close" onclick="hideStatusMessage()">
                    <span aria-hidden="true">×</span><span class="sr-only">Close</span>
                </button>
            <p></p>
            </div>
        </div>
    </div> 
    @*图形控件*@
    <div id="container" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
    @Ajax.ActionLink("刷新", "QueryModuleHour", null, new AjaxOptions()
            {
                HttpMethod = "Post",
                OnBegin = "beginRefresh",
                UpdateTargetId = "list"
            }, new { @id = "btnRefresh", @class = "btn btn-default hidden" })
    <div id="list" style="overflow:auto">
        @Html.Partial("_HourDetailListPartial", Model)
    </div>
</div>
}
@section Scripts {
    @*<script src="~/Scripts/Highstock-2.1.5/highstock.js"></script>
    <script src="~/Scripts/Highcharts-4.0.3/modules/exporting.js"></script>*@
    <script src="~/Scripts/Highstock-5.0.12/code/highstock.js"></script>
    <script src="~/Scripts/Highcharts-5.0.12/code/modules/exporting.js"></script>
    @*初始化*@
    <script type="text/javascript" language="javascript">
        @*初始化函数*@
        $(function ()
        {
            //开始日期
            $("#StartDate,#EndDate").datetimepicker({
                changeMonth: true,
                changeYear: true,
                hour: 08,
                dateFormat: "yy-mm-dd",
                timeFormat: "HH:mm:ss"
            });
            
            //查询数据
            Query();
        });
               

        @*查询事件*@
        function Query()
        {
            var StartDate = $('#StartDate').val();          //开始日期
            var EndDate = $('#EndDate').val();              //结束日期
            var LocationName = $("#LocationName").val();    //车间代码
            var LineCode = $("#LineCode").val();            //线别代码
            var OrderNumber = $("#OrderNumber").val();      //工单代码
            var ReportCode = $("#ReportCode").val();        //报表代码
            var ReportName = $("#ReportName").val();        //报表名称
            $.ajax(
                {
                    type: "post",
                    url: "@Url.Action("QueryModuleHourForCharts", "RPTDailyData")",
                    data: {
                        StartDate: StartDate,
                        EndDate: EndDate,
                        LocationName: LocationName,
                        LineCode: LineCode,
                        OrderNumber: OrderNumber,
                        ReportCode: ReportCode,
                        ReportName: ReportName
                    },
                    async: false,
                    dataType: "json",
                    success: function (result)
                    {
                        if (result != null)
                        {
                            //alert(result.ReportName);
                            
                            var title = result.ReportName;
                            var ColumnText = result.ColumnText;
                            var SplineText = result.SplineText;
                            var ColumnFormat = result.ColumnFormat;
                            var SplineFormat = result.SplineFormat;
                            var ShowColumnLabels = result.ShowColumnLabels;
                            var ShowSplineLabels = result.ShowSplineLabels;
                            var ColumnLabelsFormat = result.ColumnLabelsFormat;
                            var SplineLabelsFormat = result.SplineLabelsFormat;
                            var mAxis = eval("(" + result.mAxis + ")");
                            var nAxis = eval("(" + result.nAxis + ")");
                            var ColumnStacking = result.ColumnStacking;

                            if (result.ShowSplineLabels == "true")
                                ShowSplineLabels = true;
                            else
                                ShowSplineLabels = false;

                            //highchartsInit(result);

                            //图形装载
                            highchartsInit(title, mAxis, nAxis, ColumnText, SplineText, ColumnFormat, SplineFormat, ShowColumnLabels, ShowSplineLabels, ColumnLabelsFormat, SplineLabelsFormat, ColumnStacking);

                            //列表数据刷新
                            refreshList();
                        }
                    }
                });
        }

        function beginRefresh(obj, req)
        {
            var StartDate = $('#StartDate').val();
            var EndDate = $('#EndDate').val();
            var LocationName = $("#LocationName").val();
            var LineCode = $("#LineCode").val();
            var OrderNumber = $("#OrderNumber").val();
            var ReportCode = $("#ReportCode").val();
            req.data += "&StartDate=" + StartDate;
            req.data += "&EndDate=" + EndDate;
            req.data += "&LocationName=" + LocationName;
            req.data += "&LineCode=" + LineCode;
            req.data += "&OrderNumber=" + OrderNumber;
            req.data += "&ReportCode=" + ReportCode;
        }

        function completeRefresh(result)
        {
            if (result.Code > 0)
            {
                //显示错误信息
                showErrorInfo(result);
                return;
            }                              
        }
        
        //数据刷新
        function refreshList() {
            //$('#list').ViewBag.ListData
            //PartialView("_DetailListPartial", model)

            if ($("#btnRefresh").length > 0) {
                $("#btnRefresh").click();
            }
        }

        //显示错误信息
        function showErrorInfo(result)
        {
            $("#statusMessage").find("p").html(result.Message);
            $("#statusMessage").removeClass("hide");
            if (result.Code > 0)
            {
                $("#statusMessage").removeClass("alert-success");
                $("#statusMessage").addClass("alert-danger");
            }
            else
            {
                $("#statusMessage").removeClass("alert-danger");
                $("#statusMessage").addClass("alert-success");
            }
        }

        //图形装载
        function highchartsInit(TitleValue, xAxisData, yAxisData, ColumnText, SplineText, ColumnFormat, SplineFormat, ShowColumnLabels, ShowSplineLabels, ColumnLabelsFormat, SplineLabelsFormat, ColumnStacking)
        {                       
                $('#container').highcharts({
                    title:
                        {
                            text: TitleValue
                        },
                    xAxis: {
                        categories: xAxisData
                    },
                    yAxis: [{
                        lineWidth: 1,
                        title: {
                            text: ColumnText,
                        },
                        labels: {
                            format: ColumnFormat,
                        },
                        tooltip: {
                            enabled: true,
                        },
                    },
                    {
                        lineWidth: 1,
                        labels: {
                            format: SplineFormat,
                        },
                        title: {
                            text: SplineText,
                        },
                        tooltip: {
                            enabled: true,
                        },
                        opposite: true
                    }],
                    plotOptions: {
                        line: {
                            dataLabels: {
                                enabled: ShowSplineLabels, //是否显示数据标签
                                format: SplineLabelsFormat,
                            }
                        },
                        column: {
                                stacking: ColumnStacking,
                                dataLabels: {
                                    enabled: ShowColumnLabels, //是否显示数据标签
                                    format: ColumnLabelsFormat,
                                }
                        }
                    },
                    series: yAxisData
                });            
            
        }
    </script>

}