@model ServiceCenter.Client.Mvc.Areas.LSM.Models.MaterialReturnDetailQueryViewModel
@using ServiceCenter.MES.Model.LSM;
@using ServiceCenter.Model;
@using ServiceCenter.Common;
@using ServiceCenter.Client.Mvc.Areas.LSM.Models;
@using LSMRsources = ServiceCenter.Client.Mvc.Resources.LSM;
@using ServiceCenter.Client.Mvc.Resources;

@{
    ViewBag.Title = LSMRsources.StringResource.MaterialReturnDetail_ManagePageTitle;
    var StoreList = (IEnumerable<SelectListItem>)ViewBag.Store;
}
<h2>@ViewBag.Title</h2>
@using (Html.BeginForm("Print", "MaterialReturn", FormMethod.Post
            , new { @class = "form-horizontal", resource = "form", id = "frmQuery" }))
{
    <div class="panel panel-default">
        <div class="panel-heading">
            @Ajax.ActionLink("申报"
                      , "CreateXML"
                         , null
                         , new AjaxOptions()
                         {
                             HttpMethod = "Post",
                             OnBegin = "beginQuery",
                             UpdateTargetId = "list",
                             OnComplete = "completeQuery",
                             OnSuccess = "completeSave",
                         }
                         , new { @class = "btn btn-primary", @id = "btnQuery" })

            @*@Ajax.ActionLink("打印"
                      , "Print"
                         , null
                         , new AjaxOptions()
                         {
                             HttpMethod = "Post",
                             OnBegin = "beginQuery",
                             UpdateTargetId = "list",
                             //OnComplete = "completeQuery",
                             //OnSuccess = "completeSave",
                         }
                         , new { @class = "btn btn-primary", @id = "btnQuery" })*@

            @Html.ActionLink(linkText: StringResource.Print
                        , actionName: "Print"
                        , controllerName: null
                  , routeValues: new { ReturnNo = @Model.ReturnNo }
                        , htmlAttributes: new { @class = "btn btn-default", @target = "blank" })

            @*<input type="button"
                   value="打印"
                   onclick="Print()"
                   class="btn btn-default"
                   id="btnExportToExcel" />*@
        </div>
        <div class="panel-body">
            @Html.AntiForgeryToken()
            <div class="form-group">
                <div class="col-md-2">
                    @Html.LabelFor(m => m.ReturnNo, new { @class = "control-label" })
                </div>
                <div class="col-md-2">
                    @Html.TextBoxFor(m => m.ReturnNo, new { @class = "form-control",@readonly = "readonly" })
                </div>
                <div class="col-md-2">
                    @Html.LabelFor(m => m.OrderNumber, new { @class = "control-label" })
                </div>
                <div class="col-md-2">
                    @Html.TextBoxFor(m => m.OrderNumber, new { @class = "form-control", @readonly = "readonly" })
                </div>
                <div class="col-md-2">
                    @Html.LabelFor(m => m.ReturnDate, new { @class = "control-label" })
                </div>
                <div class="col-md-2">
                    @Html.TextBoxFor(m => m.ReturnDate, new { @class = "form-control", @readonly = "readonly" })
                </div>
                @*<div class="col-md-2">
                    @Html.LabelFor(m => m.MaterialCode, new { @class = "control-label" })
                </div>
                <div class="col-md-2">
                    @Html.TextBoxFor(m => m.MaterialCode, new { @class = "form-control" })
                </div>*@
            </div>
            <div class="form-group">
                <div class="col-md-2">
                    @Html.LabelFor(m => m.Store, new { @class = "control-label" })
                </div>
                <div class="col-md-2">
                    @Html.DropDownListFor(m => m.Store, StoreList, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Store)
                </div>
                @*<div class="col-md-2">
                    @Html.LabelFor(m => m.MaterialLot, new { @class = "control-label" })
                </div>
                <div class="col-md-2">
                    @Html.TextBoxFor(m => m.MaterialLot, new { @class = "form-control" })
                </div>*@
                
            </div>
        </div>
    </div>
}

<div class="alert fade in hide" resource="alert" id="statusMessage" style="margin:0px">
    <button type="button" class="close" onclick="hideStatusMessage()">
        <span aria-hidden="true">×</span><span class="sr-only">Close</span>
    </button>
    <p></p>
</div>

<div id="list" style="overflow:auto">
    @Html.Partial("_DetailListPartialForERP", new MaterialReturnDetailViewModel())
</div>

@section Scripts {
    @*查询*@
    <script type="text/javascript" language="javascript">

        $(function () {

            $('#ObjectNumber').keypress(function () {
                $('#btnSave').click();
            });
        })
        function refreshList() {
            $('#btnQuery').click();
        }

        function hideStatusMessage() {
            $("#statusMessage").addClass("hide");
        }

        function beginSave() {
            $("#btnSave").attr("disabled", "disabled");
            hideStatusMessage();

        }

        //刷新列表
        function beginQuery(obj, req) {
            var data = $("#frmQuery").serialize();
            req.data += "&" + data;
            $("#btnQuery").attr("disabled", "disabled");
            $("#btnExportToExcel").attr("disabled", "disabled");
        }

        function completeQuery() {
            $("#btnQuery").removeAttr("disabled");
            $("#btnExportToExcel").removeAttr("disabled");
        }

        function completeSave(result) {
            $("#btnSave").removeAttr("disabled");
            ShowMessage(result);
            $("#ObjectNumber").focus().select();
        }

        function completeDelete(result) {
            ShowMessage(result)
        }

        function completeCreateXml(result) {
            $("#btnQuery").removeAttr("disabled");
            $("#btnExportToExcel").removeAttr("disabled");
            var json = JSON.parse(result.responseText);
            ShowMessage(json)


        }

        function ShowMessage(result) {
            $("#statusMessage").find("p").html(result.Message);
            $("#statusMessage").removeClass("hide");
            if (result.Code > 0) {
                $("#statusMessage").removeClass("alert-success");
                $("#statusMessage").addClass("alert-danger");
            }
            else {
                $("#statusMessage").removeClass("alert-danger");
                $("#statusMessage").addClass("alert-success");
            }
            //refreshList();
        }

        function ExportToExcel() {
            $("#frmQuery").submit();
        }

        $(function () {
            $("#ReturnDate").datepicker({
                changeMonth: true,
                changeYear: true,
                dateFormat: "yy-mm-dd"
            });
        });
    </script>
}