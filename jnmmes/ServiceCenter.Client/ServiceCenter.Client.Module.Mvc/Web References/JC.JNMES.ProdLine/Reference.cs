//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34209
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.34209 版自动生成。
// 
#pragma warning disable 1591

namespace ServiceCenter.Client.Mvc.JC.JNMES.ProdLine {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TradLevelSoap", Namespace="http://www.jinchensolar.com/")]
    public partial class TradLevel : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SetTradLevelOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearhModulePositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetLineStateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TradLevel() {
            this.Url = global::ServiceCenter.Client.Mvc.Properties.Settings.Default.ServiceCenter_Client_Mvc_JC_JNMES_ProdLine_TradLevel;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SetTradLevelCompletedEventHandler SetTradLevelCompleted;
        
        /// <remarks/>
        public event SearhModulePositionCompletedEventHandler SearhModulePositionCompleted;
        
        /// <remarks/>
        public event SetLineStateCompletedEventHandler SetLineStateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.jinchensolar.com/SetTradLevel", RequestNamespace="http://www.jinchensolar.com/", ResponseNamespace="http://www.jinchensolar.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetTradLevel(int m_workShopId, int m_flowId, string m_tradId, int m_Level) {
            object[] results = this.Invoke("SetTradLevel", new object[] {
                        m_workShopId,
                        m_flowId,
                        m_tradId,
                        m_Level});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetTradLevelAsync(int m_workShopId, int m_flowId, string m_tradId, int m_Level) {
            this.SetTradLevelAsync(m_workShopId, m_flowId, m_tradId, m_Level, null);
        }
        
        /// <remarks/>
        public void SetTradLevelAsync(int m_workShopId, int m_flowId, string m_tradId, int m_Level, object userState) {
            if ((this.SetTradLevelOperationCompleted == null)) {
                this.SetTradLevelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetTradLevelOperationCompleted);
            }
            this.InvokeAsync("SetTradLevel", new object[] {
                        m_workShopId,
                        m_flowId,
                        m_tradId,
                        m_Level}, this.SetTradLevelOperationCompleted, userState);
        }
        
        private void OnSetTradLevelOperationCompleted(object arg) {
            if ((this.SetTradLevelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetTradLevelCompleted(this, new SetTradLevelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.jinchensolar.com/SearhModulePosition", RequestNamespace="http://www.jinchensolar.com/", ResponseNamespace="http://www.jinchensolar.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SearhModulePosition(string m_tradId) {
            object[] results = this.Invoke("SearhModulePosition", new object[] {
                        m_tradId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SearhModulePositionAsync(string m_tradId) {
            this.SearhModulePositionAsync(m_tradId, null);
        }
        
        /// <remarks/>
        public void SearhModulePositionAsync(string m_tradId, object userState) {
            if ((this.SearhModulePositionOperationCompleted == null)) {
                this.SearhModulePositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearhModulePositionOperationCompleted);
            }
            this.InvokeAsync("SearhModulePosition", new object[] {
                        m_tradId}, this.SearhModulePositionOperationCompleted, userState);
        }
        
        private void OnSearhModulePositionOperationCompleted(object arg) {
            if ((this.SearhModulePositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearhModulePositionCompleted(this, new SearhModulePositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.jinchensolar.com/SetLineState", RequestNamespace="http://www.jinchensolar.com/", ResponseNamespace="http://www.jinchensolar.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetLineState(int m_workShopId, int m_flowId, int m_flowSubId, int m_State) {
            object[] results = this.Invoke("SetLineState", new object[] {
                        m_workShopId,
                        m_flowId,
                        m_flowSubId,
                        m_State});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetLineStateAsync(int m_workShopId, int m_flowId, int m_flowSubId, int m_State) {
            this.SetLineStateAsync(m_workShopId, m_flowId, m_flowSubId, m_State, null);
        }
        
        /// <remarks/>
        public void SetLineStateAsync(int m_workShopId, int m_flowId, int m_flowSubId, int m_State, object userState) {
            if ((this.SetLineStateOperationCompleted == null)) {
                this.SetLineStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetLineStateOperationCompleted);
            }
            this.InvokeAsync("SetLineState", new object[] {
                        m_workShopId,
                        m_flowId,
                        m_flowSubId,
                        m_State}, this.SetLineStateOperationCompleted, userState);
        }
        
        private void OnSetLineStateOperationCompleted(object arg) {
            if ((this.SetLineStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetLineStateCompleted(this, new SetLineStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SetTradLevelCompletedEventHandler(object sender, SetTradLevelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetTradLevelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetTradLevelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SearhModulePositionCompletedEventHandler(object sender, SearhModulePositionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearhModulePositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearhModulePositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SetLineStateCompletedEventHandler(object sender, SetLineStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetLineStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetLineStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591