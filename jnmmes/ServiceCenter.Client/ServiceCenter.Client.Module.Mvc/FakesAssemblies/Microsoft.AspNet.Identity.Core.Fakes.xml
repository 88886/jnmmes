<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.AspNet.Identity.Core.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`1">
            <summary>Microsoft.AspNet.Identity.ClaimsIdentityFactory`1 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`1.#ctor(Microsoft.AspNet.Identity.ClaimsIdentityFactory{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`1.Bind(Microsoft.AspNet.Identity.IClaimsIdentityFactory{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`1.Constructor">
            <summary>设置 ClaimsIdentityFactory`1.ClaimsIdentityFactory`1() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`1.CreateAsyncUserManagerOfT0T0String">
            <summary>设置 ClaimsIdentityFactory`1.CreateAsync(UserManager`1&lt;!0&gt; manager, !0 user, String authenticationType) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`1.RoleClaimTypeGet">
            <summary>设置 ClaimsIdentityFactory`1.get_RoleClaimType() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`1.RoleClaimTypeSetString">
            <summary>设置 ClaimsIdentityFactory`1.set_RoleClaimType(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`1.UserIdClaimTypeGet">
            <summary>设置 ClaimsIdentityFactory`1.get_UserIdClaimType() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`1.UserIdClaimTypeSetString">
            <summary>设置 ClaimsIdentityFactory`1.set_UserIdClaimType(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`1.UserNameClaimTypeGet">
            <summary>设置 ClaimsIdentityFactory`1.get_UserNameClaimType() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`1.UserNameClaimTypeSetString">
            <summary>设置 ClaimsIdentityFactory`1.set_UserNameClaimType(String value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`1.AllInstances.CreateAsyncUserManagerOfT0T0String">
            <summary>设置 ClaimsIdentityFactory`1.CreateAsync(UserManager`1&lt;!0&gt; manager, !0 user, String authenticationType) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`1.AllInstances.RoleClaimTypeGet">
            <summary>设置 ClaimsIdentityFactory`1.get_RoleClaimType() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`1.AllInstances.RoleClaimTypeSetString">
            <summary>设置 ClaimsIdentityFactory`1.set_RoleClaimType(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`1.AllInstances.UserIdClaimTypeGet">
            <summary>设置 ClaimsIdentityFactory`1.get_UserIdClaimType() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`1.AllInstances.UserIdClaimTypeSetString">
            <summary>设置 ClaimsIdentityFactory`1.set_UserIdClaimType(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`1.AllInstances.UserNameClaimTypeGet">
            <summary>设置 ClaimsIdentityFactory`1.get_UserNameClaimType() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimClaimsIdentityFactory`1.AllInstances.UserNameClaimTypeSetString">
            <summary>设置 ClaimsIdentityFactory`1.set_UserNameClaimType(String value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimDefaultAuthenticationTypes">
            <summary>Microsoft.AspNet.Identity.DefaultAuthenticationTypes 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimDefaultAuthenticationTypes.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimDefaultAuthenticationTypes.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimDefaultAuthenticationTypes.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimDefaultAuthenticationTypes.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimIdentityExtensions">
            <summary>Microsoft.AspNet.Identity.IdentityExtensions 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimIdentityExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimIdentityExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimIdentityExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityExtensions.FindFirstValueClaimsIdentityString">
            <summary>设置 IdentityExtensions.FindFirstValue(ClaimsIdentity identity, String claimType) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityExtensions.GetUserIdIIdentity">
            <summary>设置 IdentityExtensions.GetUserId(IIdentity identity) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityExtensions.GetUserNameIIdentity">
            <summary>设置 IdentityExtensions.GetUserName(IIdentity identity) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult">
            <summary>Microsoft.AspNet.Identity.IdentityResult 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.#ctor(Microsoft.AspNet.Identity.IdentityResult)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.ConstructorBoolean">
            <summary>设置 IdentityResult.IdentityResult(Boolean success) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.ConstructorIEnumerableOfString">
            <summary>设置 IdentityResult.IdentityResult(IEnumerable`1&lt;String&gt; errors) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.ConstructorStringArray">
            <summary>设置 IdentityResult.IdentityResult(String[] errors) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.ErrorsGet">
            <summary>设置 IdentityResult.get_Errors() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.ErrorsSetIEnumerableOfString">
            <summary>设置 IdentityResult.set_Errors(IEnumerable`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.FailedStringArray">
            <summary>设置 IdentityResult.Failed(String[] errors) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.StaticConstructor">
            <summary>设置 IdentityResult.IdentityResult() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.SucceededGet">
            <summary>设置 IdentityResult.get_Succeeded() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.SucceededSetBoolean">
            <summary>设置 IdentityResult.set_Succeeded(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.SuccessGet">
            <summary>设置 IdentityResult.get_Success() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.AllInstances.ErrorsGet">
            <summary>设置 IdentityResult.get_Errors() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.AllInstances.ErrorsSetIEnumerableOfString">
            <summary>设置 IdentityResult.set_Errors(IEnumerable`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.AllInstances.SucceededGet">
            <summary>设置 IdentityResult.get_Succeeded() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimIdentityResult.AllInstances.SucceededSetBoolean">
            <summary>设置 IdentityResult.set_Succeeded(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimMinimumLengthValidator">
            <summary>Microsoft.AspNet.Identity.MinimumLengthValidator 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimMinimumLengthValidator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimMinimumLengthValidator.#ctor(Microsoft.AspNet.Identity.MinimumLengthValidator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimMinimumLengthValidator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimMinimumLengthValidator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimMinimumLengthValidator.Bind(Microsoft.AspNet.Identity.IIdentityValidator{System.String})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimMinimumLengthValidator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimMinimumLengthValidator.ConstructorInt32">
            <summary>设置 MinimumLengthValidator.MinimumLengthValidator(Int32 requiredLength) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimMinimumLengthValidator.RequiredLengthGet">
            <summary>设置 MinimumLengthValidator.get_RequiredLength() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimMinimumLengthValidator.RequiredLengthSetInt32">
            <summary>设置 MinimumLengthValidator.set_RequiredLength(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimMinimumLengthValidator.ValidateAsyncString">
            <summary>设置 MinimumLengthValidator.ValidateAsync(String item) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimMinimumLengthValidator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimMinimumLengthValidator.AllInstances.RequiredLengthGet">
            <summary>设置 MinimumLengthValidator.get_RequiredLength() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimMinimumLengthValidator.AllInstances.RequiredLengthSetInt32">
            <summary>设置 MinimumLengthValidator.set_RequiredLength(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimMinimumLengthValidator.AllInstances.ValidateAsyncString">
            <summary>设置 MinimumLengthValidator.ValidateAsync(String item) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimPasswordHasher">
            <summary>Microsoft.AspNet.Identity.PasswordHasher 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimPasswordHasher.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimPasswordHasher.#ctor(Microsoft.AspNet.Identity.PasswordHasher)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimPasswordHasher.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimPasswordHasher.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimPasswordHasher.Bind(Microsoft.AspNet.Identity.IPasswordHasher)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordHasher.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordHasher.Constructor">
            <summary>设置 PasswordHasher.PasswordHasher() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordHasher.HashPasswordString">
            <summary>设置 PasswordHasher.HashPassword(String password) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordHasher.VerifyHashedPasswordStringString">
            <summary>设置 PasswordHasher.VerifyHashedPassword(String hashedPassword, String providedPassword) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimPasswordHasher.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordHasher.AllInstances.HashPasswordString">
            <summary>设置 PasswordHasher.HashPassword(String password) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimPasswordHasher.AllInstances.VerifyHashedPasswordStringString">
            <summary>设置 PasswordHasher.VerifyHashedPassword(String hashedPassword, String providedPassword) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1">
            <summary>Microsoft.AspNet.Identity.RoleManager`1 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.#ctor(Microsoft.AspNet.Identity.RoleManager{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.ConstructorIRoleStoreOfT0">
            <summary>设置 RoleManager`1.RoleManager`1(IRoleStore`1&lt;!0&gt; store) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.CreateAsyncT0">
            <summary>设置 RoleManager`1.CreateAsync(!0 role) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.Dispose">
            <summary>设置 RoleManager`1.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.DisposeBoolean">
            <summary>设置 RoleManager`1.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.FindByIdAsyncString">
            <summary>设置 RoleManager`1.FindByIdAsync(String roleId) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.FindByNameAsyncString">
            <summary>设置 RoleManager`1.FindByNameAsync(String roleName) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.RoleExistsAsyncString">
            <summary>设置 RoleManager`1.RoleExistsAsync(String roleName) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.RoleValidatorGet">
            <summary>设置 RoleManager`1.get_RoleValidator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.RoleValidatorSetIIdentityValidatorOfT0">
            <summary>设置 RoleManager`1.set_RoleValidator(IIdentityValidator`1&lt;!0&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.StoreGet">
            <summary>设置 RoleManager`1.get_Store() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.StoreSetIRoleStoreOfT0">
            <summary>设置 RoleManager`1.set_Store(IRoleStore`1&lt;!0&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.ThrowIfDisposed">
            <summary>设置 RoleManager`1.ThrowIfDisposed() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.UpdateAsyncT0">
            <summary>设置 RoleManager`1.UpdateAsync(!0 role) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.AllInstances.CreateAsyncT0">
            <summary>设置 RoleManager`1.CreateAsync(!0 role) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.AllInstances.Dispose">
            <summary>设置 RoleManager`1.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.AllInstances.DisposeBoolean">
            <summary>设置 RoleManager`1.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.AllInstances.FindByIdAsyncString">
            <summary>设置 RoleManager`1.FindByIdAsync(String roleId) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.AllInstances.FindByNameAsyncString">
            <summary>设置 RoleManager`1.FindByNameAsync(String roleName) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.AllInstances.RoleExistsAsyncString">
            <summary>设置 RoleManager`1.RoleExistsAsync(String roleName) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.AllInstances.RoleValidatorGet">
            <summary>设置 RoleManager`1.get_RoleValidator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.AllInstances.RoleValidatorSetIIdentityValidatorOfT0">
            <summary>设置 RoleManager`1.set_RoleValidator(IIdentityValidator`1&lt;!0&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.AllInstances.StoreGet">
            <summary>设置 RoleManager`1.get_Store() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.AllInstances.StoreSetIRoleStoreOfT0">
            <summary>设置 RoleManager`1.set_Store(IRoleStore`1&lt;!0&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.AllInstances.ThrowIfDisposed">
            <summary>设置 RoleManager`1.ThrowIfDisposed() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManager`1.AllInstances.UpdateAsyncT0">
            <summary>设置 RoleManager`1.UpdateAsync(!0 role) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimRoleManagerExtensions">
            <summary>Microsoft.AspNet.Identity.RoleManagerExtensions 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleManagerExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleManagerExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleManagerExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleManagerExtensions.CreateOf1RoleManagerOfM0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.RoleManager{``0},``0,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>设置 RoleManagerExtensions.Create(RoleManager`1&lt;!!0&gt; manager, !!0 role) 的 填充码</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleManagerExtensions.FindByIdOf1RoleManagerOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.RoleManager{``0},System.String,``0})">
            <summary>设置 RoleManagerExtensions.FindById(RoleManager`1&lt;!!0&gt; manager, String roleId) 的 填充码</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleManagerExtensions.FindByNameOf1RoleManagerOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.RoleManager{``0},System.String,``0})">
            <summary>设置 RoleManagerExtensions.FindByName(RoleManager`1&lt;!!0&gt; manager, String roleName) 的 填充码</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleManagerExtensions.RoleExistsOf1RoleManagerOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.RoleManager{``0},System.String,System.Boolean})">
            <summary>设置 RoleManagerExtensions.RoleExists(RoleManager`1&lt;!!0&gt; manager, String roleName) 的 填充码</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleManagerExtensions.UpdateOf1RoleManagerOfM0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.RoleManager{``0},``0,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>设置 RoleManagerExtensions.Update(RoleManager`1&lt;!!0&gt; manager, !!0 role) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleManagerExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`1">
            <summary>Microsoft.AspNet.Identity.RoleValidator`1 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`1.#ctor(Microsoft.AspNet.Identity.RoleValidator{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`1.Bind(Microsoft.AspNet.Identity.IIdentityValidator{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`1.ConstructorRoleManagerOfT0">
            <summary>设置 RoleValidator`1.RoleValidator`1(RoleManager`1&lt;!0&gt; manager) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`1.ManagerGet">
            <summary>设置 RoleValidator`1.get_Manager() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`1.ManagerSetRoleManagerOfT0">
            <summary>设置 RoleValidator`1.set_Manager(RoleManager`1&lt;!0&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`1.ValidateAsyncT0">
            <summary>设置 RoleValidator`1.ValidateAsync(!0 item) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`1.ValidateRoleNameT0ListOfString">
            <summary>设置 RoleValidator`1.ValidateRoleName(!0 role, List`1&lt;String&gt; errors) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`1.AllInstances.ManagerGet">
            <summary>设置 RoleValidator`1.get_Manager() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`1.AllInstances.ManagerSetRoleManagerOfT0">
            <summary>设置 RoleValidator`1.set_Manager(RoleManager`1&lt;!0&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`1.AllInstances.ValidateAsyncT0">
            <summary>设置 RoleValidator`1.ValidateAsync(!0 item) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimRoleValidator`1.AllInstances.ValidateRoleNameT0ListOfString">
            <summary>设置 RoleValidator`1.ValidateRoleName(!0 role, List`1&lt;String&gt; errors) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimUserLoginInfo">
            <summary>Microsoft.AspNet.Identity.UserLoginInfo 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserLoginInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserLoginInfo.#ctor(Microsoft.AspNet.Identity.UserLoginInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserLoginInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserLoginInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserLoginInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserLoginInfo.ConstructorStringString">
            <summary>设置 UserLoginInfo.UserLoginInfo(String loginProvider, String providerKey) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserLoginInfo.LoginProviderGet">
            <summary>设置 UserLoginInfo.get_LoginProvider() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserLoginInfo.LoginProviderSetString">
            <summary>设置 UserLoginInfo.set_LoginProvider(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserLoginInfo.ProviderKeyGet">
            <summary>设置 UserLoginInfo.get_ProviderKey() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserLoginInfo.ProviderKeySetString">
            <summary>设置 UserLoginInfo.set_ProviderKey(String value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimUserLoginInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserLoginInfo.AllInstances.LoginProviderGet">
            <summary>设置 UserLoginInfo.get_LoginProvider() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserLoginInfo.AllInstances.LoginProviderSetString">
            <summary>设置 UserLoginInfo.set_LoginProvider(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserLoginInfo.AllInstances.ProviderKeyGet">
            <summary>设置 UserLoginInfo.get_ProviderKey() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserLoginInfo.AllInstances.ProviderKeySetString">
            <summary>设置 UserLoginInfo.set_ProviderKey(String value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1">
            <summary>Microsoft.AspNet.Identity.UserManager`1 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.#ctor(Microsoft.AspNet.Identity.UserManager{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AddClaimAsyncStringClaim">
            <summary>设置 UserManager`1.AddClaimAsync(String userId, Claim claim) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AddLoginAsyncStringUserLoginInfo">
            <summary>设置 UserManager`1.AddLoginAsync(String userId, UserLoginInfo login) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AddPasswordAsyncStringString">
            <summary>设置 UserManager`1.AddPasswordAsync(String userId, String password) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AddToRoleAsyncStringString">
            <summary>设置 UserManager`1.AddToRoleAsync(String userId, String role) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.ChangePasswordAsyncStringStringString">
            <summary>设置 UserManager`1.ChangePasswordAsync(String userId, String currentPassword, String newPassword) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.ClaimsIdentityFactoryGet">
            <summary>设置 UserManager`1.get_ClaimsIdentityFactory() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.ClaimsIdentityFactorySetClaimsIdentityFactoryOfT0">
            <summary>设置 UserManager`1.set_ClaimsIdentityFactory(ClaimsIdentityFactory`1&lt;!0&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.ConstructorIUserStoreOfT0">
            <summary>设置 UserManager`1.UserManager`1(IUserStore`1&lt;!0&gt; store) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.CreateAsyncT0">
            <summary>设置 UserManager`1.CreateAsync(!0 user) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.CreateAsyncT0String">
            <summary>设置 UserManager`1.CreateAsync(!0 user, String password) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.CreateIdentityAsyncT0String">
            <summary>设置 UserManager`1.CreateIdentityAsync(!0 user, String authenticationType) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.Dispose">
            <summary>设置 UserManager`1.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.DisposeBoolean">
            <summary>设置 UserManager`1.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.FindAsyncStringString">
            <summary>设置 UserManager`1.FindAsync(String userName, String password) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.FindAsyncUserLoginInfo">
            <summary>设置 UserManager`1.FindAsync(UserLoginInfo login) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.FindByIdAsyncString">
            <summary>设置 UserManager`1.FindByIdAsync(String userId) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.FindByNameAsyncString">
            <summary>设置 UserManager`1.FindByNameAsync(String userName) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.GetClaimStore">
            <summary>设置 UserManager`1.GetClaimStore() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.GetClaimsAsyncString">
            <summary>设置 UserManager`1.GetClaimsAsync(String userId) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.GetLoginStore">
            <summary>设置 UserManager`1.GetLoginStore() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.GetLoginsAsyncString">
            <summary>设置 UserManager`1.GetLoginsAsync(String userId) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.GetPasswordStore">
            <summary>设置 UserManager`1.GetPasswordStore() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.GetRolesAsyncString">
            <summary>设置 UserManager`1.GetRolesAsync(String userId) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.GetSecurityStore">
            <summary>设置 UserManager`1.GetSecurityStore() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.GetUserRoleStore">
            <summary>设置 UserManager`1.GetUserRoleStore() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.HasPasswordAsyncString">
            <summary>设置 UserManager`1.HasPasswordAsync(String userId) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.IsInRoleAsyncStringString">
            <summary>设置 UserManager`1.IsInRoleAsync(String userId, String role) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.NewSecurityStamp">
            <summary>设置 UserManager`1.NewSecurityStamp() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.PasswordHasherGet">
            <summary>设置 UserManager`1.get_PasswordHasher() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.PasswordHasherSetIPasswordHasher">
            <summary>设置 UserManager`1.set_PasswordHasher(IPasswordHasher value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.PasswordValidatorGet">
            <summary>设置 UserManager`1.get_PasswordValidator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.PasswordValidatorSetIIdentityValidatorOfString">
            <summary>设置 UserManager`1.set_PasswordValidator(IIdentityValidator`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.RemoveClaimAsyncStringClaim">
            <summary>设置 UserManager`1.RemoveClaimAsync(String userId, Claim claim) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.RemoveFromRoleAsyncStringString">
            <summary>设置 UserManager`1.RemoveFromRoleAsync(String userId, String role) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.RemoveLoginAsyncStringUserLoginInfo">
            <summary>设置 UserManager`1.RemoveLoginAsync(String userId, UserLoginInfo login) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.RemovePasswordAsyncString">
            <summary>设置 UserManager`1.RemovePasswordAsync(String userId) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.StoreGet">
            <summary>设置 UserManager`1.get_Store() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.StoreSetIUserStoreOfT0">
            <summary>设置 UserManager`1.set_Store(IUserStore`1&lt;!0&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.SupportsUserClaimGet">
            <summary>设置 UserManager`1.get_SupportsUserClaim() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.SupportsUserLoginGet">
            <summary>设置 UserManager`1.get_SupportsUserLogin() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.SupportsUserPasswordGet">
            <summary>设置 UserManager`1.get_SupportsUserPassword() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.SupportsUserRoleGet">
            <summary>设置 UserManager`1.get_SupportsUserRole() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.SupportsUserSecurityStampGet">
            <summary>设置 UserManager`1.get_SupportsUserSecurityStamp() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.ThrowIfDisposed">
            <summary>设置 UserManager`1.ThrowIfDisposed() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.UpdateAsyncT0">
            <summary>设置 UserManager`1.UpdateAsync(!0 user) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.UpdatePasswordInternalIUserPasswordStoreOfT0T0String">
            <summary>设置 UserManager`1.UpdatePasswordInternal(IUserPasswordStore`1&lt;!0&gt; passwordStore, !0 user, String newPassword) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.UpdateSecurityStampAsyncString">
            <summary>设置 UserManager`1.UpdateSecurityStampAsync(String userId) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.UpdateSecurityStampInternalT0">
            <summary>设置 UserManager`1.UpdateSecurityStampInternal(!0 user) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.UserValidatorGet">
            <summary>设置 UserManager`1.get_UserValidator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.UserValidatorSetIIdentityValidatorOfT0">
            <summary>设置 UserManager`1.set_UserValidator(IIdentityValidator`1&lt;!0&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.VerifyPasswordIUserPasswordStoreOfT0T0String">
            <summary>设置 UserManager`1.VerifyPassword(IUserPasswordStore`1&lt;!0&gt; store, !0 user, String password) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.AddClaimAsyncStringClaim">
            <summary>设置 UserManager`1.AddClaimAsync(String userId, Claim claim) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.AddLoginAsyncStringUserLoginInfo">
            <summary>设置 UserManager`1.AddLoginAsync(String userId, UserLoginInfo login) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.AddPasswordAsyncStringString">
            <summary>设置 UserManager`1.AddPasswordAsync(String userId, String password) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.AddToRoleAsyncStringString">
            <summary>设置 UserManager`1.AddToRoleAsync(String userId, String role) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.ChangePasswordAsyncStringStringString">
            <summary>设置 UserManager`1.ChangePasswordAsync(String userId, String currentPassword, String newPassword) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.ClaimsIdentityFactoryGet">
            <summary>设置 UserManager`1.get_ClaimsIdentityFactory() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.ClaimsIdentityFactorySetClaimsIdentityFactoryOfT0">
            <summary>设置 UserManager`1.set_ClaimsIdentityFactory(ClaimsIdentityFactory`1&lt;!0&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.CreateAsyncT0">
            <summary>设置 UserManager`1.CreateAsync(!0 user) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.CreateAsyncT0String">
            <summary>设置 UserManager`1.CreateAsync(!0 user, String password) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.CreateIdentityAsyncT0String">
            <summary>设置 UserManager`1.CreateIdentityAsync(!0 user, String authenticationType) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.Dispose">
            <summary>设置 UserManager`1.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.DisposeBoolean">
            <summary>设置 UserManager`1.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.FindAsyncStringString">
            <summary>设置 UserManager`1.FindAsync(String userName, String password) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.FindAsyncUserLoginInfo">
            <summary>设置 UserManager`1.FindAsync(UserLoginInfo login) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.FindByIdAsyncString">
            <summary>设置 UserManager`1.FindByIdAsync(String userId) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.FindByNameAsyncString">
            <summary>设置 UserManager`1.FindByNameAsync(String userName) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.GetClaimStore">
            <summary>设置 UserManager`1.GetClaimStore() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.GetClaimsAsyncString">
            <summary>设置 UserManager`1.GetClaimsAsync(String userId) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.GetLoginStore">
            <summary>设置 UserManager`1.GetLoginStore() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.GetLoginsAsyncString">
            <summary>设置 UserManager`1.GetLoginsAsync(String userId) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.GetPasswordStore">
            <summary>设置 UserManager`1.GetPasswordStore() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.GetRolesAsyncString">
            <summary>设置 UserManager`1.GetRolesAsync(String userId) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.GetSecurityStore">
            <summary>设置 UserManager`1.GetSecurityStore() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.GetUserRoleStore">
            <summary>设置 UserManager`1.GetUserRoleStore() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.HasPasswordAsyncString">
            <summary>设置 UserManager`1.HasPasswordAsync(String userId) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.IsInRoleAsyncStringString">
            <summary>设置 UserManager`1.IsInRoleAsync(String userId, String role) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.PasswordHasherGet">
            <summary>设置 UserManager`1.get_PasswordHasher() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.PasswordHasherSetIPasswordHasher">
            <summary>设置 UserManager`1.set_PasswordHasher(IPasswordHasher value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.PasswordValidatorGet">
            <summary>设置 UserManager`1.get_PasswordValidator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.PasswordValidatorSetIIdentityValidatorOfString">
            <summary>设置 UserManager`1.set_PasswordValidator(IIdentityValidator`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.RemoveClaimAsyncStringClaim">
            <summary>设置 UserManager`1.RemoveClaimAsync(String userId, Claim claim) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.RemoveFromRoleAsyncStringString">
            <summary>设置 UserManager`1.RemoveFromRoleAsync(String userId, String role) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.RemoveLoginAsyncStringUserLoginInfo">
            <summary>设置 UserManager`1.RemoveLoginAsync(String userId, UserLoginInfo login) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.RemovePasswordAsyncString">
            <summary>设置 UserManager`1.RemovePasswordAsync(String userId) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.StoreGet">
            <summary>设置 UserManager`1.get_Store() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.StoreSetIUserStoreOfT0">
            <summary>设置 UserManager`1.set_Store(IUserStore`1&lt;!0&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.SupportsUserClaimGet">
            <summary>设置 UserManager`1.get_SupportsUserClaim() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.SupportsUserLoginGet">
            <summary>设置 UserManager`1.get_SupportsUserLogin() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.SupportsUserPasswordGet">
            <summary>设置 UserManager`1.get_SupportsUserPassword() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.SupportsUserRoleGet">
            <summary>设置 UserManager`1.get_SupportsUserRole() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.SupportsUserSecurityStampGet">
            <summary>设置 UserManager`1.get_SupportsUserSecurityStamp() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.ThrowIfDisposed">
            <summary>设置 UserManager`1.ThrowIfDisposed() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.UpdateAsyncT0">
            <summary>设置 UserManager`1.UpdateAsync(!0 user) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.UpdatePasswordInternalIUserPasswordStoreOfT0T0String">
            <summary>设置 UserManager`1.UpdatePasswordInternal(IUserPasswordStore`1&lt;!0&gt; passwordStore, !0 user, String newPassword) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.UpdateSecurityStampAsyncString">
            <summary>设置 UserManager`1.UpdateSecurityStampAsync(String userId) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.UpdateSecurityStampInternalT0">
            <summary>设置 UserManager`1.UpdateSecurityStampInternal(!0 user) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.UserValidatorGet">
            <summary>设置 UserManager`1.get_UserValidator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.UserValidatorSetIIdentityValidatorOfT0">
            <summary>设置 UserManager`1.set_UserValidator(IIdentityValidator`1&lt;!0&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManager`1.AllInstances.VerifyPasswordIUserPasswordStoreOfT0T0String">
            <summary>设置 UserManager`1.VerifyPassword(IUserPasswordStore`1&lt;!0&gt; store, !0 user, String password) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions">
            <summary>Microsoft.AspNet.Identity.UserManagerExtensions 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.AddClaimOf1UserManagerOfM0StringClaim``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0},System.String,System.Security.Claims.Claim,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>设置 UserManagerExtensions.AddClaim(UserManager`1&lt;!!0&gt; manager, String userId, Claim claim) 的 填充码</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.AddLoginOf1UserManagerOfM0StringUserLoginInfo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0},System.String,Microsoft.AspNet.Identity.UserLoginInfo,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>设置 UserManagerExtensions.AddLogin(UserManager`1&lt;!!0&gt; manager, String userId, UserLoginInfo login) 的 填充码</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.AddPasswordOf1UserManagerOfM0StringString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0},System.String,System.String,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>设置 UserManagerExtensions.AddPassword(UserManager`1&lt;!!0&gt; manager, String userId, String password) 的 填充码</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.AddToRoleOf1UserManagerOfM0StringString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0},System.String,System.String,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>设置 UserManagerExtensions.AddToRole(UserManager`1&lt;!!0&gt; manager, String userId, String role) 的 填充码</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.ChangePasswordOf1UserManagerOfM0StringStringString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0},System.String,System.String,System.String,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>设置 UserManagerExtensions.ChangePassword(UserManager`1&lt;!!0&gt; manager, String userId, String currentPassword, String newPassword) 的 填充码</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.CreateIdentityOf1UserManagerOfM0M0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0},``0,System.String,System.Security.Claims.ClaimsIdentity})">
            <summary>设置 UserManagerExtensions.CreateIdentity(UserManager`1&lt;!!0&gt; manager, !!0 user, String authenticationType) 的 填充码</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.CreateOf1UserManagerOfM0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0},``0,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>设置 UserManagerExtensions.Create(UserManager`1&lt;!!0&gt; manager, !!0 user) 的 填充码</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.CreateOf1UserManagerOfM0M0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0},``0,System.String,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>设置 UserManagerExtensions.Create(UserManager`1&lt;!!0&gt; manager, !!0 user, String password) 的 填充码</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.FindByIdOf1UserManagerOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0},System.String,``0})">
            <summary>设置 UserManagerExtensions.FindById(UserManager`1&lt;!!0&gt; manager, String userId) 的 填充码</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.FindByNameOf1UserManagerOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0},System.String,``0})">
            <summary>设置 UserManagerExtensions.FindByName(UserManager`1&lt;!!0&gt; manager, String userName) 的 填充码</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.FindOf1UserManagerOfM0StringString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0},System.String,System.String,``0})">
            <summary>设置 UserManagerExtensions.Find(UserManager`1&lt;!!0&gt; manager, String userName, String password) 的 填充码</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.FindOf1UserManagerOfM0UserLoginInfo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0},Microsoft.AspNet.Identity.UserLoginInfo,``0})">
            <summary>设置 UserManagerExtensions.Find(UserManager`1&lt;!!0&gt; manager, UserLoginInfo login) 的 填充码</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.GetClaimsOf1UserManagerOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0},System.String,System.Collections.Generic.IList{System.Security.Claims.Claim}})">
            <summary>设置 UserManagerExtensions.GetClaims(UserManager`1&lt;!!0&gt; manager, String userId) 的 填充码</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.GetLoginsOf1UserManagerOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0},System.String,System.Collections.Generic.IList{Microsoft.AspNet.Identity.UserLoginInfo}})">
            <summary>设置 UserManagerExtensions.GetLogins(UserManager`1&lt;!!0&gt; manager, String userId) 的 填充码</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.GetRolesOf1UserManagerOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0},System.String,System.Collections.Generic.IList{System.String}})">
            <summary>设置 UserManagerExtensions.GetRoles(UserManager`1&lt;!!0&gt; manager, String userId) 的 填充码</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.HasPasswordOf1UserManagerOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0},System.String,System.Boolean})">
            <summary>设置 UserManagerExtensions.HasPassword(UserManager`1&lt;!!0&gt; manager, String userId) 的 填充码</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.IsInRoleOf1UserManagerOfM0StringString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0},System.String,System.String,System.Boolean})">
            <summary>设置 UserManagerExtensions.IsInRole(UserManager`1&lt;!!0&gt; manager, String userId, String role) 的 填充码</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.RemoveClaimOf1UserManagerOfM0StringClaim``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0},System.String,System.Security.Claims.Claim,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>设置 UserManagerExtensions.RemoveClaim(UserManager`1&lt;!!0&gt; manager, String userId, Claim claim) 的 填充码</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.RemoveFromRoleOf1UserManagerOfM0StringString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0},System.String,System.String,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>设置 UserManagerExtensions.RemoveFromRole(UserManager`1&lt;!!0&gt; manager, String userId, String role) 的 填充码</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.RemoveLoginOf1UserManagerOfM0StringUserLoginInfo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0},System.String,Microsoft.AspNet.Identity.UserLoginInfo,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>设置 UserManagerExtensions.RemoveLogin(UserManager`1&lt;!!0&gt; manager, String userId, UserLoginInfo login) 的 填充码</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.RemovePasswordOf1UserManagerOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0},System.String,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>设置 UserManagerExtensions.RemovePassword(UserManager`1&lt;!!0&gt; manager, String userId) 的 填充码</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.UpdateOf1UserManagerOfM0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0},``0,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>设置 UserManagerExtensions.Update(UserManager`1&lt;!!0&gt; manager, !!0 user) 的 填充码</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.UpdateSecurityStampOf1UserManagerOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.Identity.UserManager{``0},System.String,Microsoft.AspNet.Identity.IdentityResult})">
            <summary>设置 UserManagerExtensions.UpdateSecurityStamp(UserManager`1&lt;!!0&gt; manager, String userId) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserManagerExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`1">
            <summary>Microsoft.AspNet.Identity.UserValidator`1 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`1.#ctor(Microsoft.AspNet.Identity.UserValidator{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`1.Bind(Microsoft.AspNet.Identity.IIdentityValidator{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`1.AllowOnlyAlphanumericUserNamesGet">
            <summary>设置 UserValidator`1.get_AllowOnlyAlphanumericUserNames() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`1.AllowOnlyAlphanumericUserNamesSetBoolean">
            <summary>设置 UserValidator`1.set_AllowOnlyAlphanumericUserNames(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`1.ConstructorUserManagerOfT0">
            <summary>设置 UserValidator`1.UserValidator`1(UserManager`1&lt;!0&gt; manager) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`1.ManagerGet">
            <summary>设置 UserValidator`1.get_Manager() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`1.ManagerSetUserManagerOfT0">
            <summary>设置 UserValidator`1.set_Manager(UserManager`1&lt;!0&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`1.ValidateAsyncT0">
            <summary>设置 UserValidator`1.ValidateAsync(!0 item) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`1.ValidateUserNameT0ListOfString">
            <summary>设置 UserValidator`1.ValidateUserName(!0 user, List`1&lt;String&gt; errors) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`1.AllInstances.AllowOnlyAlphanumericUserNamesGet">
            <summary>设置 UserValidator`1.get_AllowOnlyAlphanumericUserNames() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`1.AllInstances.AllowOnlyAlphanumericUserNamesSetBoolean">
            <summary>设置 UserValidator`1.set_AllowOnlyAlphanumericUserNames(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`1.AllInstances.ManagerGet">
            <summary>设置 UserValidator`1.get_Manager() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`1.AllInstances.ManagerSetUserManagerOfT0">
            <summary>设置 UserValidator`1.set_Manager(UserManager`1&lt;!0&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`1.AllInstances.ValidateAsyncT0">
            <summary>设置 UserValidator`1.ValidateAsync(!0 item) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.ShimUserValidator`1.AllInstances.ValidateUserNameT0ListOfString">
            <summary>设置 UserValidator`1.ValidateUserName(!0 user, List`1&lt;String&gt; errors) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubClaimsIdentityFactory`1">
            <summary>Microsoft.AspNet.Identity.ClaimsIdentityFactory`1 的存根类型</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubClaimsIdentityFactory`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubClaimsIdentityFactory`1.CreateAsync(Microsoft.AspNet.Identity.UserManager{`0},`0,System.String)">
            <summary>设置 ClaimsIdentityFactory`1.CreateAsync(UserManager`1&lt;!0&gt; manager, !0 user, String authenticationType) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubClaimsIdentityFactory`1.CreateAsyncUserManagerOfT0T0String">
            <summary>设置 ClaimsIdentityFactory`1.CreateAsync(UserManager`1&lt;!0&gt; manager, !0 user, String authenticationType) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubClaimsIdentityFactory`1.InitializeStub">
            <summary>初始化 type StubClaimsIdentityFactory 的新实例</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubClaimsIdentityFactory`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubClaimsIdentityFactory`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubClaimsIdentityFactory`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIClaimsIdentityFactory`1">
            <summary>Microsoft.AspNet.Identity.IClaimsIdentityFactory`1 的存根类型</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIClaimsIdentityFactory`1.#ctor">
            <summary>初始化 type StubIClaimsIdentityFactory 的新实例</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIClaimsIdentityFactory`1.CreateAsyncUserManagerOfT0T0String">
            <summary>设置 IClaimsIdentityFactory`1.CreateAsync(UserManager`1&lt;!0&gt; manager, !0 user, String authenticationType) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIClaimsIdentityFactory`1.manic::Microsoft#AspNet#Identity#IClaimsIdentityFactory{TUser}#CreateAsync(Microsoft.AspNet.Identity.UserManager{`0},`0,System.String)">
            <summary>设置 IClaimsIdentityFactory`1.CreateAsync(UserManager`1&lt;!0&gt; manager, !0 user, String authenticationType) 的 存根</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIIdentityValidator`1">
            <summary>Microsoft.AspNet.Identity.IIdentityValidator`1 的存根类型</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIIdentityValidator`1.#ctor">
            <summary>初始化 type StubIIdentityValidator 的新实例</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIIdentityValidator`1.manic::Microsoft#AspNet#Identity#IIdentityValidator{T}#ValidateAsync(`0)">
            <summary>设置 IIdentityValidator`1.ValidateAsync(!0 item) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIIdentityValidator`1.ValidateAsyncT0">
            <summary>设置 IIdentityValidator`1.ValidateAsync(!0 item) 的 stub</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIPasswordHasher">
            <summary>Microsoft.AspNet.Identity.IPasswordHasher 的存根类型</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIPasswordHasher.#ctor">
            <summary>初始化 type StubIPasswordHasher 的新实例</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIPasswordHasher.HashPasswordString">
            <summary>设置 IPasswordHasher.HashPassword(String password) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIPasswordHasher.manic::Microsoft#AspNet#Identity#IPasswordHasher#HashPassword(System.String)">
            <summary>设置 IPasswordHasher.HashPassword(String password) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIPasswordHasher.manic::Microsoft#AspNet#Identity#IPasswordHasher#VerifyHashedPassword(System.String,System.String)">
            <summary>设置 IPasswordHasher.VerifyHashedPassword(String hashedPassword, String providedPassword) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIPasswordHasher.VerifyHashedPasswordStringString">
            <summary>设置 IPasswordHasher.VerifyHashedPassword(String hashedPassword, String providedPassword) 的 stub</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIRole">
            <summary>Microsoft.AspNet.Identity.IRole 的存根类型</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIRole.#ctor">
            <summary>初始化 type StubIRole 的新实例</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIRole.AttachBackingFieldToName">
            <summary>附加委托以将 StubIRole.Name 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIRole.IdGet">
            <summary>设置 IRole.get_Id() 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIRole.NameGet">
            <summary>设置 IRole.get_Name() 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIRole.NameSetString">
            <summary>设置 IRole.set_Name(String value) 的 stub</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubIRole.manic::Microsoft#AspNet#Identity#IRole#Id">
            <summary>设置 IRole.get_Id() 的 stub</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubIRole.manic::Microsoft#AspNet#Identity#IRole#Name">
            <summary>设置 IRole.get_Name() 的 stub</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`1">
            <summary>Microsoft.AspNet.Identity.IRoleStore`1 的存根类型</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`1.#ctor">
            <summary>初始化 type StubIRoleStore 的新实例</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`1.CreateAsyncT0">
            <summary>设置 IRoleStore`1.CreateAsync(!0 role) 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`1.DeleteAsyncT0">
            <summary>设置 IRoleStore`1.DeleteAsync(!0 role) 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`1.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`1.FindByIdAsyncString">
            <summary>设置 IRoleStore`1.FindByIdAsync(String roleId) 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`1.FindByNameAsyncString">
            <summary>设置 IRoleStore`1.FindByNameAsync(String roleName) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`1.manic::Microsoft#AspNet#Identity#IRoleStore{TRole}#CreateAsync(`0)">
            <summary>设置 IRoleStore`1.CreateAsync(!0 role) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`1.manic::Microsoft#AspNet#Identity#IRoleStore{TRole}#DeleteAsync(`0)">
            <summary>设置 IRoleStore`1.DeleteAsync(!0 role) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`1.manic::Microsoft#AspNet#Identity#IRoleStore{TRole}#FindByIdAsync(System.String)">
            <summary>设置 IRoleStore`1.FindByIdAsync(String roleId) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`1.manic::Microsoft#AspNet#Identity#IRoleStore{TRole}#FindByNameAsync(System.String)">
            <summary>设置 IRoleStore`1.FindByNameAsync(String roleName) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`1.manic::Microsoft#AspNet#Identity#IRoleStore{TRole}#UpdateAsync(`0)">
            <summary>设置 IRoleStore`1.UpdateAsync(!0 role) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`1.global::System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIRoleStore`1.UpdateAsyncT0">
            <summary>设置 IRoleStore`1.UpdateAsync(!0 role) 的 stub</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIUser">
            <summary>Microsoft.AspNet.Identity.IUser 的存根类型</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUser.#ctor">
            <summary>初始化 type StubIUser 的新实例</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUser.AttachBackingFieldToUserName">
            <summary>附加委托以将 StubIUser.UserName 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUser.IdGet">
            <summary>设置 IUser.get_Id() 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUser.UserNameGet">
            <summary>设置 IUser.get_UserName() 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUser.UserNameSetString">
            <summary>设置 IUser.set_UserName(String value) 的 stub</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubIUser.manic::Microsoft#AspNet#Identity#IUser#Id">
            <summary>设置 IUser.get_Id() 的 stub</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubIUser.manic::Microsoft#AspNet#Identity#IUser#UserName">
            <summary>设置 IUser.get_UserName() 的 stub</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1">
            <summary>Microsoft.AspNet.Identity.IUserClaimStore`1 的存根类型</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.#ctor">
            <summary>初始化 type StubIUserClaimStore 的新实例</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.AddClaimAsyncT0Claim">
            <summary>设置 IUserClaimStore`1.AddClaimAsync(!0 user, Claim claim) 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.CreateAsyncT0">
            <summary>设置 IUserStore`1.CreateAsync(!0 user) 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.DeleteAsyncT0">
            <summary>设置 IUserStore`1.DeleteAsync(!0 user) 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.FindByIdAsyncString">
            <summary>设置 IUserStore`1.FindByIdAsync(String userId) 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.FindByNameAsyncString">
            <summary>设置 IUserStore`1.FindByNameAsync(String userName) 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.GetClaimsAsyncT0">
            <summary>设置 IUserClaimStore`1.GetClaimsAsync(!0 user) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.manic::Microsoft#AspNet#Identity#IUserClaimStore{TUser}#AddClaimAsync(`0,System.Security.Claims.Claim)">
            <summary>设置 IUserClaimStore`1.AddClaimAsync(!0 user, Claim claim) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.manic::Microsoft#AspNet#Identity#IUserClaimStore{TUser}#GetClaimsAsync(`0)">
            <summary>设置 IUserClaimStore`1.GetClaimsAsync(!0 user) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.manic::Microsoft#AspNet#Identity#IUserClaimStore{TUser}#RemoveClaimAsync(`0,System.Security.Claims.Claim)">
            <summary>设置 IUserClaimStore`1.RemoveClaimAsync(!0 user, Claim claim) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser}#CreateAsync(`0)">
            <summary>设置 IUserStore`1.CreateAsync(!0 user) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser}#DeleteAsync(`0)">
            <summary>设置 IUserStore`1.DeleteAsync(!0 user) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser}#FindByIdAsync(System.String)">
            <summary>设置 IUserStore`1.FindByIdAsync(String userId) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser}#FindByNameAsync(System.String)">
            <summary>设置 IUserStore`1.FindByNameAsync(String userName) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser}#UpdateAsync(`0)">
            <summary>设置 IUserStore`1.UpdateAsync(!0 user) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.RemoveClaimAsyncT0Claim">
            <summary>设置 IUserClaimStore`1.RemoveClaimAsync(!0 user, Claim claim) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.global::System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserClaimStore`1.UpdateAsyncT0">
            <summary>设置 IUserStore`1.UpdateAsync(!0 user) 的 stub</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1">
            <summary>Microsoft.AspNet.Identity.IUserLoginStore`1 的存根类型</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.#ctor">
            <summary>初始化 type StubIUserLoginStore 的新实例</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.AddLoginAsyncT0UserLoginInfo">
            <summary>设置 IUserLoginStore`1.AddLoginAsync(!0 user, UserLoginInfo login) 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.CreateAsyncT0">
            <summary>设置 IUserStore`1.CreateAsync(!0 user) 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.DeleteAsyncT0">
            <summary>设置 IUserStore`1.DeleteAsync(!0 user) 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.FindAsyncUserLoginInfo">
            <summary>设置 IUserLoginStore`1.FindAsync(UserLoginInfo login) 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.FindByIdAsyncString">
            <summary>设置 IUserStore`1.FindByIdAsync(String userId) 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.FindByNameAsyncString">
            <summary>设置 IUserStore`1.FindByNameAsync(String userName) 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.GetLoginsAsyncT0">
            <summary>设置 IUserLoginStore`1.GetLoginsAsync(!0 user) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.manic::Microsoft#AspNet#Identity#IUserLoginStore{TUser}#AddLoginAsync(`0,Microsoft.AspNet.Identity.UserLoginInfo)">
            <summary>设置 IUserLoginStore`1.AddLoginAsync(!0 user, UserLoginInfo login) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.manic::Microsoft#AspNet#Identity#IUserLoginStore{TUser}#FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)">
            <summary>设置 IUserLoginStore`1.FindAsync(UserLoginInfo login) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.manic::Microsoft#AspNet#Identity#IUserLoginStore{TUser}#GetLoginsAsync(`0)">
            <summary>设置 IUserLoginStore`1.GetLoginsAsync(!0 user) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.manic::Microsoft#AspNet#Identity#IUserLoginStore{TUser}#RemoveLoginAsync(`0,Microsoft.AspNet.Identity.UserLoginInfo)">
            <summary>设置 IUserLoginStore`1.RemoveLoginAsync(!0 user, UserLoginInfo login) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser}#CreateAsync(`0)">
            <summary>设置 IUserStore`1.CreateAsync(!0 user) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser}#DeleteAsync(`0)">
            <summary>设置 IUserStore`1.DeleteAsync(!0 user) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser}#FindByIdAsync(System.String)">
            <summary>设置 IUserStore`1.FindByIdAsync(String userId) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser}#FindByNameAsync(System.String)">
            <summary>设置 IUserStore`1.FindByNameAsync(String userName) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser}#UpdateAsync(`0)">
            <summary>设置 IUserStore`1.UpdateAsync(!0 user) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.RemoveLoginAsyncT0UserLoginInfo">
            <summary>设置 IUserLoginStore`1.RemoveLoginAsync(!0 user, UserLoginInfo login) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.global::System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserLoginStore`1.UpdateAsyncT0">
            <summary>设置 IUserStore`1.UpdateAsync(!0 user) 的 stub</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1">
            <summary>Microsoft.AspNet.Identity.IUserPasswordStore`1 的存根类型</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.#ctor">
            <summary>初始化 type StubIUserPasswordStore 的新实例</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.CreateAsyncT0">
            <summary>设置 IUserStore`1.CreateAsync(!0 user) 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.DeleteAsyncT0">
            <summary>设置 IUserStore`1.DeleteAsync(!0 user) 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.FindByIdAsyncString">
            <summary>设置 IUserStore`1.FindByIdAsync(String userId) 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.FindByNameAsyncString">
            <summary>设置 IUserStore`1.FindByNameAsync(String userName) 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.GetPasswordHashAsyncT0">
            <summary>设置 IUserPasswordStore`1.GetPasswordHashAsync(!0 user) 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.HasPasswordAsyncT0">
            <summary>设置 IUserPasswordStore`1.HasPasswordAsync(!0 user) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.manic::Microsoft#AspNet#Identity#IUserPasswordStore{TUser}#GetPasswordHashAsync(`0)">
            <summary>设置 IUserPasswordStore`1.GetPasswordHashAsync(!0 user) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.manic::Microsoft#AspNet#Identity#IUserPasswordStore{TUser}#HasPasswordAsync(`0)">
            <summary>设置 IUserPasswordStore`1.HasPasswordAsync(!0 user) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.manic::Microsoft#AspNet#Identity#IUserPasswordStore{TUser}#SetPasswordHashAsync(`0,System.String)">
            <summary>设置 IUserPasswordStore`1.SetPasswordHashAsync(!0 user, String passwordHash) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser}#CreateAsync(`0)">
            <summary>设置 IUserStore`1.CreateAsync(!0 user) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser}#DeleteAsync(`0)">
            <summary>设置 IUserStore`1.DeleteAsync(!0 user) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser}#FindByIdAsync(System.String)">
            <summary>设置 IUserStore`1.FindByIdAsync(String userId) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser}#FindByNameAsync(System.String)">
            <summary>设置 IUserStore`1.FindByNameAsync(String userName) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser}#UpdateAsync(`0)">
            <summary>设置 IUserStore`1.UpdateAsync(!0 user) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.SetPasswordHashAsyncT0String">
            <summary>设置 IUserPasswordStore`1.SetPasswordHashAsync(!0 user, String passwordHash) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.global::System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserPasswordStore`1.UpdateAsyncT0">
            <summary>设置 IUserStore`1.UpdateAsync(!0 user) 的 stub</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1">
            <summary>Microsoft.AspNet.Identity.IUserRoleStore`1 的存根类型</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.#ctor">
            <summary>初始化 type StubIUserRoleStore 的新实例</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.AddToRoleAsyncT0String">
            <summary>设置 IUserRoleStore`1.AddToRoleAsync(!0 user, String role) 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.CreateAsyncT0">
            <summary>设置 IUserStore`1.CreateAsync(!0 user) 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.DeleteAsyncT0">
            <summary>设置 IUserStore`1.DeleteAsync(!0 user) 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.FindByIdAsyncString">
            <summary>设置 IUserStore`1.FindByIdAsync(String userId) 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.FindByNameAsyncString">
            <summary>设置 IUserStore`1.FindByNameAsync(String userName) 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.GetRolesAsyncT0">
            <summary>设置 IUserRoleStore`1.GetRolesAsync(!0 user) 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.IsInRoleAsyncT0String">
            <summary>设置 IUserRoleStore`1.IsInRoleAsync(!0 user, String role) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.manic::Microsoft#AspNet#Identity#IUserRoleStore{TUser}#AddToRoleAsync(`0,System.String)">
            <summary>设置 IUserRoleStore`1.AddToRoleAsync(!0 user, String role) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.manic::Microsoft#AspNet#Identity#IUserRoleStore{TUser}#GetRolesAsync(`0)">
            <summary>设置 IUserRoleStore`1.GetRolesAsync(!0 user) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.manic::Microsoft#AspNet#Identity#IUserRoleStore{TUser}#IsInRoleAsync(`0,System.String)">
            <summary>设置 IUserRoleStore`1.IsInRoleAsync(!0 user, String role) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.manic::Microsoft#AspNet#Identity#IUserRoleStore{TUser}#RemoveFromRoleAsync(`0,System.String)">
            <summary>设置 IUserRoleStore`1.RemoveFromRoleAsync(!0 user, String role) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser}#CreateAsync(`0)">
            <summary>设置 IUserStore`1.CreateAsync(!0 user) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser}#DeleteAsync(`0)">
            <summary>设置 IUserStore`1.DeleteAsync(!0 user) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser}#FindByIdAsync(System.String)">
            <summary>设置 IUserStore`1.FindByIdAsync(String userId) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser}#FindByNameAsync(System.String)">
            <summary>设置 IUserStore`1.FindByNameAsync(String userName) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser}#UpdateAsync(`0)">
            <summary>设置 IUserStore`1.UpdateAsync(!0 user) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.RemoveFromRoleAsyncT0String">
            <summary>设置 IUserRoleStore`1.RemoveFromRoleAsync(!0 user, String role) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.global::System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserRoleStore`1.UpdateAsyncT0">
            <summary>设置 IUserStore`1.UpdateAsync(!0 user) 的 stub</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1">
            <summary>Microsoft.AspNet.Identity.IUserSecurityStampStore`1 的存根类型</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1.#ctor">
            <summary>初始化 type StubIUserSecurityStampStore 的新实例</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1.CreateAsyncT0">
            <summary>设置 IUserStore`1.CreateAsync(!0 user) 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1.DeleteAsyncT0">
            <summary>设置 IUserStore`1.DeleteAsync(!0 user) 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1.FindByIdAsyncString">
            <summary>设置 IUserStore`1.FindByIdAsync(String userId) 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1.FindByNameAsyncString">
            <summary>设置 IUserStore`1.FindByNameAsync(String userName) 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1.GetSecurityStampAsyncT0">
            <summary>设置 IUserSecurityStampStore`1.GetSecurityStampAsync(!0 user) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1.manic::Microsoft#AspNet#Identity#IUserSecurityStampStore{TUser}#GetSecurityStampAsync(`0)">
            <summary>设置 IUserSecurityStampStore`1.GetSecurityStampAsync(!0 user) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1.manic::Microsoft#AspNet#Identity#IUserSecurityStampStore{TUser}#SetSecurityStampAsync(`0,System.String)">
            <summary>设置 IUserSecurityStampStore`1.SetSecurityStampAsync(!0 user, String stamp) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser}#CreateAsync(`0)">
            <summary>设置 IUserStore`1.CreateAsync(!0 user) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser}#DeleteAsync(`0)">
            <summary>设置 IUserStore`1.DeleteAsync(!0 user) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser}#FindByIdAsync(System.String)">
            <summary>设置 IUserStore`1.FindByIdAsync(String userId) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser}#FindByNameAsync(System.String)">
            <summary>设置 IUserStore`1.FindByNameAsync(String userName) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser}#UpdateAsync(`0)">
            <summary>设置 IUserStore`1.UpdateAsync(!0 user) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1.SetSecurityStampAsyncT0String">
            <summary>设置 IUserSecurityStampStore`1.SetSecurityStampAsync(!0 user, String stamp) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1.global::System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserSecurityStampStore`1.UpdateAsyncT0">
            <summary>设置 IUserStore`1.UpdateAsync(!0 user) 的 stub</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIUserStore`1">
            <summary>Microsoft.AspNet.Identity.IUserStore`1 的存根类型</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserStore`1.#ctor">
            <summary>初始化 type StubIUserStore 的新实例</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserStore`1.CreateAsyncT0">
            <summary>设置 IUserStore`1.CreateAsync(!0 user) 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserStore`1.DeleteAsyncT0">
            <summary>设置 IUserStore`1.DeleteAsync(!0 user) 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserStore`1.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserStore`1.FindByIdAsyncString">
            <summary>设置 IUserStore`1.FindByIdAsync(String userId) 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserStore`1.FindByNameAsyncString">
            <summary>设置 IUserStore`1.FindByNameAsync(String userName) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser}#CreateAsync(`0)">
            <summary>设置 IUserStore`1.CreateAsync(!0 user) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser}#DeleteAsync(`0)">
            <summary>设置 IUserStore`1.DeleteAsync(!0 user) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser}#FindByIdAsync(System.String)">
            <summary>设置 IUserStore`1.FindByIdAsync(String userId) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser}#FindByNameAsync(System.String)">
            <summary>设置 IUserStore`1.FindByNameAsync(String userName) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserStore`1.manic::Microsoft#AspNet#Identity#IUserStore{TUser}#UpdateAsync(`0)">
            <summary>设置 IUserStore`1.UpdateAsync(!0 user) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIUserStore`1.global::System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubIUserStore`1.UpdateAsyncT0">
            <summary>设置 IUserStore`1.UpdateAsync(!0 user) 的 stub</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubIdentityResult">
            <summary>Microsoft.AspNet.Identity.IdentityResult 的存根类型</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIdentityResult.#ctor(System.String[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIdentityResult.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubIdentityResult.InitializeStub">
            <summary>初始化 type StubIdentityResult 的新实例</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubIdentityResult.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubIdentityResult.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubIdentityResult.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubMinimumLengthValidator">
            <summary>Microsoft.AspNet.Identity.MinimumLengthValidator 的存根类型</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubMinimumLengthValidator.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubMinimumLengthValidator.InitializeStub">
            <summary>初始化 type StubMinimumLengthValidator 的新实例</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubMinimumLengthValidator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubMinimumLengthValidator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubMinimumLengthValidator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubPasswordHasher">
            <summary>Microsoft.AspNet.Identity.PasswordHasher 的存根类型</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubPasswordHasher.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubPasswordHasher.HashPassword(System.String)">
            <summary>设置 PasswordHasher.HashPassword(String password) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubPasswordHasher.HashPasswordString">
            <summary>设置 PasswordHasher.HashPassword(String password) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubPasswordHasher.InitializeStub">
            <summary>初始化 type StubPasswordHasher 的新实例</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubPasswordHasher.VerifyHashedPassword(System.String,System.String)">
            <summary>设置 PasswordHasher.VerifyHashedPassword(String hashedPassword, String providedPassword) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubPasswordHasher.VerifyHashedPasswordStringString">
            <summary>设置 PasswordHasher.VerifyHashedPassword(String hashedPassword, String providedPassword) 的 stub</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubPasswordHasher.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubPasswordHasher.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubPasswordHasher.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1">
            <summary>Microsoft.AspNet.Identity.RoleManager`1 的存根类型</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.#ctor(Microsoft.AspNet.Identity.IRoleStore{`0})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.CreateAsync(`0)">
            <summary>设置 RoleManager`1.CreateAsync(!0 role) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.CreateAsyncT0">
            <summary>设置 RoleManager`1.CreateAsync(!0 role) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.Dispose(System.Boolean)">
            <summary>设置 RoleManager`1.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.DisposeBoolean">
            <summary>设置 RoleManager`1.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.FindByIdAsync(System.String)">
            <summary>设置 RoleManager`1.FindByIdAsync(String roleId) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.FindByIdAsyncString">
            <summary>设置 RoleManager`1.FindByIdAsync(String roleId) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.FindByNameAsync(System.String)">
            <summary>设置 RoleManager`1.FindByNameAsync(String roleName) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.FindByNameAsyncString">
            <summary>设置 RoleManager`1.FindByNameAsync(String roleName) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.InitializeStub">
            <summary>初始化 type StubRoleManager 的新实例</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.RoleExistsAsync(System.String)">
            <summary>设置 RoleManager`1.RoleExistsAsync(String roleName) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.RoleExistsAsyncString">
            <summary>设置 RoleManager`1.RoleExistsAsync(String roleName) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.UpdateAsync(`0)">
            <summary>设置 RoleManager`1.UpdateAsync(!0 role) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.UpdateAsyncT0">
            <summary>设置 RoleManager`1.UpdateAsync(!0 role) 的 stub</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubRoleManager`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubRoleValidator`1">
            <summary>Microsoft.AspNet.Identity.RoleValidator`1 的存根类型</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubRoleValidator`1.#ctor(Microsoft.AspNet.Identity.RoleManager{`0})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubRoleValidator`1.InitializeStub">
            <summary>初始化 type StubRoleValidator 的新实例</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubRoleValidator`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubRoleValidator`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubRoleValidator`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubUserManager`1">
            <summary>Microsoft.AspNet.Identity.UserManager`1 的存根类型</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.#ctor(Microsoft.AspNet.Identity.IUserStore{`0})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.AddClaimAsync(System.String,System.Security.Claims.Claim)">
            <summary>设置 UserManager`1.AddClaimAsync(String userId, Claim claim) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.AddClaimAsyncStringClaim">
            <summary>设置 UserManager`1.AddClaimAsync(String userId, Claim claim) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.AddLoginAsync(System.String,Microsoft.AspNet.Identity.UserLoginInfo)">
            <summary>设置 UserManager`1.AddLoginAsync(String userId, UserLoginInfo login) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.AddLoginAsyncStringUserLoginInfo">
            <summary>设置 UserManager`1.AddLoginAsync(String userId, UserLoginInfo login) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.AddPasswordAsync(System.String,System.String)">
            <summary>设置 UserManager`1.AddPasswordAsync(String userId, String password) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.AddPasswordAsyncStringString">
            <summary>设置 UserManager`1.AddPasswordAsync(String userId, String password) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.AddToRoleAsync(System.String,System.String)">
            <summary>设置 UserManager`1.AddToRoleAsync(String userId, String role) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.AddToRoleAsyncStringString">
            <summary>设置 UserManager`1.AddToRoleAsync(String userId, String role) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.ChangePasswordAsync(System.String,System.String,System.String)">
            <summary>设置 UserManager`1.ChangePasswordAsync(String userId, String currentPassword, String newPassword) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.ChangePasswordAsyncStringStringString">
            <summary>设置 UserManager`1.ChangePasswordAsync(String userId, String currentPassword, String newPassword) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.CreateAsync(`0)">
            <summary>设置 UserManager`1.CreateAsync(!0 user) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.CreateAsync(`0,System.String)">
            <summary>设置 UserManager`1.CreateAsync(!0 user, String password) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.CreateAsyncT0">
            <summary>设置 UserManager`1.CreateAsync(!0 user) 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.CreateAsyncT0String">
            <summary>设置 UserManager`1.CreateAsync(!0 user, String password) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.CreateIdentityAsync(`0,System.String)">
            <summary>设置 UserManager`1.CreateIdentityAsync(!0 user, String authenticationType) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.CreateIdentityAsyncT0String">
            <summary>设置 UserManager`1.CreateIdentityAsync(!0 user, String authenticationType) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.Dispose(System.Boolean)">
            <summary>设置 UserManager`1.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.DisposeBoolean">
            <summary>设置 UserManager`1.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)">
            <summary>设置 UserManager`1.FindAsync(UserLoginInfo login) 的 存根</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.FindAsync(System.String,System.String)">
            <summary>设置 UserManager`1.FindAsync(String userName, String password) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.FindAsyncStringString">
            <summary>设置 UserManager`1.FindAsync(String userName, String password) 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.FindAsyncUserLoginInfo">
            <summary>设置 UserManager`1.FindAsync(UserLoginInfo login) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.FindByIdAsync(System.String)">
            <summary>设置 UserManager`1.FindByIdAsync(String userId) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.FindByIdAsyncString">
            <summary>设置 UserManager`1.FindByIdAsync(String userId) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.FindByNameAsync(System.String)">
            <summary>设置 UserManager`1.FindByNameAsync(String userName) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.FindByNameAsyncString">
            <summary>设置 UserManager`1.FindByNameAsync(String userName) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GetClaimsAsync(System.String)">
            <summary>设置 UserManager`1.GetClaimsAsync(String userId) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GetClaimsAsyncString">
            <summary>设置 UserManager`1.GetClaimsAsync(String userId) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GetLoginsAsync(System.String)">
            <summary>设置 UserManager`1.GetLoginsAsync(String userId) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GetLoginsAsyncString">
            <summary>设置 UserManager`1.GetLoginsAsync(String userId) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GetRolesAsync(System.String)">
            <summary>设置 UserManager`1.GetRolesAsync(String userId) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.GetRolesAsyncString">
            <summary>设置 UserManager`1.GetRolesAsync(String userId) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.HasPasswordAsync(System.String)">
            <summary>设置 UserManager`1.HasPasswordAsync(String userId) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.HasPasswordAsyncString">
            <summary>设置 UserManager`1.HasPasswordAsync(String userId) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.InitializeStub">
            <summary>初始化 type StubUserManager 的新实例</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.IsInRoleAsync(System.String,System.String)">
            <summary>设置 UserManager`1.IsInRoleAsync(String userId, String role) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.IsInRoleAsyncStringString">
            <summary>设置 UserManager`1.IsInRoleAsync(String userId, String role) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.RemoveClaimAsync(System.String,System.Security.Claims.Claim)">
            <summary>设置 UserManager`1.RemoveClaimAsync(String userId, Claim claim) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.RemoveClaimAsyncStringClaim">
            <summary>设置 UserManager`1.RemoveClaimAsync(String userId, Claim claim) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.RemoveFromRoleAsync(System.String,System.String)">
            <summary>设置 UserManager`1.RemoveFromRoleAsync(String userId, String role) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.RemoveFromRoleAsyncStringString">
            <summary>设置 UserManager`1.RemoveFromRoleAsync(String userId, String role) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.RemoveLoginAsync(System.String,Microsoft.AspNet.Identity.UserLoginInfo)">
            <summary>设置 UserManager`1.RemoveLoginAsync(String userId, UserLoginInfo login) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.RemoveLoginAsyncStringUserLoginInfo">
            <summary>设置 UserManager`1.RemoveLoginAsync(String userId, UserLoginInfo login) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.RemovePasswordAsync(System.String)">
            <summary>设置 UserManager`1.RemovePasswordAsync(String userId) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.RemovePasswordAsyncString">
            <summary>设置 UserManager`1.RemovePasswordAsync(String userId) 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SupportsUserClaimGet">
            <summary>设置 UserManager`1.get_SupportsUserClaim() 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SupportsUserLoginGet">
            <summary>设置 UserManager`1.get_SupportsUserLogin() 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SupportsUserPasswordGet">
            <summary>设置 UserManager`1.get_SupportsUserPassword() 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SupportsUserRoleGet">
            <summary>设置 UserManager`1.get_SupportsUserRole() 的 stub</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SupportsUserSecurityStampGet">
            <summary>设置 UserManager`1.get_SupportsUserSecurityStamp() 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.UpdateAsync(`0)">
            <summary>设置 UserManager`1.UpdateAsync(!0 user) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.UpdateAsyncT0">
            <summary>设置 UserManager`1.UpdateAsync(!0 user) 的 stub</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.UpdateSecurityStampAsync(System.String)">
            <summary>设置 UserManager`1.UpdateSecurityStampAsync(String userId) 的 存根</summary>
        </member>
        <member name="F:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.UpdateSecurityStampAsyncString">
            <summary>设置 UserManager`1.UpdateSecurityStampAsync(String userId) 的 stub</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SupportsUserClaim">
            <summary>设置 UserManager`1.get_SupportsUserClaim() 的 stub</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SupportsUserLogin">
            <summary>设置 UserManager`1.get_SupportsUserLogin() 的 stub</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SupportsUserPassword">
            <summary>设置 UserManager`1.get_SupportsUserPassword() 的 stub</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SupportsUserRole">
            <summary>设置 UserManager`1.get_SupportsUserRole() 的 stub</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserManager`1.SupportsUserSecurityStamp">
            <summary>设置 UserManager`1.get_SupportsUserSecurityStamp() 的 stub</summary>
        </member>
        <member name="T:Microsoft.AspNet.Identity.Fakes.StubUserValidator`1">
            <summary>Microsoft.AspNet.Identity.UserValidator`1 的存根类型</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserValidator`1.#ctor(Microsoft.AspNet.Identity.UserManager{`0})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.AspNet.Identity.Fakes.StubUserValidator`1.InitializeStub">
            <summary>初始化 type StubUserValidator 的新实例</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserValidator`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserValidator`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.AspNet.Identity.Fakes.StubUserValidator`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
    </members>
</doc>
