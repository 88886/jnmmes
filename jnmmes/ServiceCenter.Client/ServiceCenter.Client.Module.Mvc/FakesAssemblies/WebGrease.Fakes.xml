<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebGrease.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject">
            <summary>Microsoft.Ajax.Utilities.ActivationObject 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.#ctor(Microsoft.Ajax.Utilities.ActivationObject)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AddFieldJSVariableField">
            <summary>设置 ActivationObject.AddField(JSVariableField variableField) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AddGlobalString">
            <summary>设置 ActivationObject.AddGlobal(String name) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AnalyzeNonGlobalScope">
            <summary>设置 ActivationObject.AnalyzeNonGlobalScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AnalyzeScope">
            <summary>设置 ActivationObject.AnalyzeScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AutoRenameFields">
            <summary>设置 ActivationObject.AutoRenameFields() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.ChildScopesGet">
            <summary>设置 ActivationObject.get_ChildScopes() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.ChildScopesSetIListOfActivationObject">
            <summary>设置 ActivationObject.set_ChildScopes(IList`1&lt;ActivationObject&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.ConstructorActivationObjectCodeSettings">
            <summary>设置 ActivationObject.ActivationObject(ActivationObject parent, CodeSettings codeSettings) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.CreateFieldJSVariableField">
            <summary>设置 ActivationObject.CreateField(JSVariableField outerField) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.CreateInnerFieldJSVariableField">
            <summary>设置 ActivationObject.CreateInnerField(JSVariableField outerField) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.DeclareFieldStringObjectFieldAttributes">
            <summary>设置 ActivationObject.DeclareField(String name, Object value, FieldAttributes attributes) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.DefineFieldINameDeclarationFunctionObject">
            <summary>设置 ActivationObject.DefineField(INameDeclaration nameDecl, FunctionObject fieldValue) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.DefineLexicalDeclarations">
            <summary>设置 ActivationObject.DefineLexicalDeclarations() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.DefineVarDeclarations">
            <summary>设置 ActivationObject.DefineVarDeclarations() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.ExistingGet">
            <summary>设置 ActivationObject.get_Existing() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.ExistingSetBoolean">
            <summary>设置 ActivationObject.set_Existing(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.FindReferenceString">
            <summary>设置 ActivationObject.FindReference(String name) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.GenerateAvoidListHashSetOfStringString">
            <summary>设置 ActivationObject.GenerateAvoidList(HashSet`1&lt;String&gt; table, String name) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.GetParentBlockAstNode">
            <summary>设置 ActivationObject.GetParentBlock(AstNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.GetUncrunchedLocals">
            <summary>设置 ActivationObject.GetUncrunchedLocals() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.GhostedCatchParametersGet">
            <summary>设置 ActivationObject.get_GhostedCatchParameters() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.GhostedCatchParametersSetICollectionOfParameterDeclaration">
            <summary>设置 ActivationObject.set_GhostedCatchParameters(ICollection`1&lt;ParameterDeclaration&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.GhostedFunctionsGet">
            <summary>设置 ActivationObject.get_GhostedFunctions() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.GhostedFunctionsSetICollectionOfFunctionObject">
            <summary>设置 ActivationObject.set_GhostedFunctions(ICollection`1&lt;FunctionObject&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.IsInWithScopeGet">
            <summary>设置 ActivationObject.get_IsInWithScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.IsInWithScopeSetBoolean">
            <summary>设置 ActivationObject.set_IsInWithScope(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.IsIterativeReferenceAstNodeINameReference">
            <summary>设置 ActivationObject.IsIterativeReference(AstNode initializer, INameReference reference) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.IsKnownAtCompileTimeGet">
            <summary>设置 ActivationObject.get_IsKnownAtCompileTime() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.IsKnownAtCompileTimeSetBoolean">
            <summary>设置 ActivationObject.set_IsKnownAtCompileTime(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.ItemGetString">
            <summary>设置 ActivationObject.get_Item(String name) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.LexicallyDeclaredNameString">
            <summary>设置 ActivationObject.LexicallyDeclaredName(String name) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.LexicallyDeclaredNamesGet">
            <summary>设置 ActivationObject.get_LexicallyDeclaredNames() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.LexicallyDeclaredNamesSetICollectionOfINameDeclaration">
            <summary>设置 ActivationObject.set_LexicallyDeclaredNames(ICollection`1&lt;INameDeclaration&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.ManualRenameFields">
            <summary>设置 ActivationObject.ManualRenameFields() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.NameTableGet">
            <summary>设置 ActivationObject.get_NameTable() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.NameTableSetIDictionaryOfStringJSVariableField">
            <summary>设置 ActivationObject.set_NameTable(IDictionary`2&lt;String,JSVariableField&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.ParentGet">
            <summary>设置 ActivationObject.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.ParentSetActivationObject">
            <summary>设置 ActivationObject.set_Parent(ActivationObject value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.ScopeLookupsGet">
            <summary>设置 ActivationObject.get_ScopeLookups() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.ScopeLookupsSetICollectionOfLookup">
            <summary>设置 ActivationObject.set_ScopeLookups(ICollection`1&lt;Lookup&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.SingleReferenceVariableFieldJSVariableField">
            <summary>设置 ActivationObject.SingleReferenceVariableField(JSVariableField variableField) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.UnreferencedArgumentJSVariableField">
            <summary>设置 ActivationObject.UnreferencedArgument(JSVariableField variableField) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.UnreferencedFunctionJSVariableFieldFunctionObject">
            <summary>设置 ActivationObject.UnreferencedFunction(JSVariableField variableField, FunctionObject functionObject) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.UnreferencedVariableFieldJSVariableField">
            <summary>设置 ActivationObject.UnreferencedVariableField(JSVariableField variableField) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.UnreferencedVariableJSVariableField">
            <summary>设置 ActivationObject.UnreferencedVariable(JSVariableField variableField) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.UseStrictGet">
            <summary>设置 ActivationObject.get_UseStrict() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.UseStrictSetBoolean">
            <summary>设置 ActivationObject.set_UseStrict(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.ValidateGeneratedNames">
            <summary>设置 ActivationObject.ValidateGeneratedNames() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.VarDeclaredNameString">
            <summary>设置 ActivationObject.VarDeclaredName(String name) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.VarDeclaredNamesGet">
            <summary>设置 ActivationObject.get_VarDeclaredNames() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.VarDeclaredNamesSetICollectionOfINameDeclaration">
            <summary>设置 ActivationObject.set_VarDeclaredNames(ICollection`1&lt;INameDeclaration&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject._CreateFieldb__10JSVariableField">
            <summary>设置 ActivationObject.&lt;CreateField&gt;b__10(JSVariableField o) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject._set_IsKnownAtCompileTimeb__0ActivationObject">
            <summary>设置 ActivationObject.&lt;set_IsKnownAtCompileTime&gt;b__0(ActivationObject p) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.AddFieldJSVariableField">
            <summary>设置 ActivationObject.AddField(JSVariableField variableField) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.AddGlobalString">
            <summary>设置 ActivationObject.AddGlobal(String name) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.AnalyzeNonGlobalScope">
            <summary>设置 ActivationObject.AnalyzeNonGlobalScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.AnalyzeScope">
            <summary>设置 ActivationObject.AnalyzeScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.AutoRenameFields">
            <summary>设置 ActivationObject.AutoRenameFields() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.ChildScopesGet">
            <summary>设置 ActivationObject.get_ChildScopes() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.ChildScopesSetIListOfActivationObject">
            <summary>设置 ActivationObject.set_ChildScopes(IList`1&lt;ActivationObject&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.CreateFieldJSVariableField">
            <summary>设置 ActivationObject.CreateField(JSVariableField outerField) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.CreateInnerFieldJSVariableField">
            <summary>设置 ActivationObject.CreateInnerField(JSVariableField outerField) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.DeclareFieldStringObjectFieldAttributes">
            <summary>设置 ActivationObject.DeclareField(String name, Object value, FieldAttributes attributes) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.DefineFieldINameDeclarationFunctionObject">
            <summary>设置 ActivationObject.DefineField(INameDeclaration nameDecl, FunctionObject fieldValue) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.DefineLexicalDeclarations">
            <summary>设置 ActivationObject.DefineLexicalDeclarations() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.DefineVarDeclarations">
            <summary>设置 ActivationObject.DefineVarDeclarations() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.ExistingGet">
            <summary>设置 ActivationObject.get_Existing() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.ExistingSetBoolean">
            <summary>设置 ActivationObject.set_Existing(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.FindReferenceString">
            <summary>设置 ActivationObject.FindReference(String name) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.GenerateAvoidListHashSetOfStringString">
            <summary>设置 ActivationObject.GenerateAvoidList(HashSet`1&lt;String&gt; table, String name) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.GetUncrunchedLocals">
            <summary>设置 ActivationObject.GetUncrunchedLocals() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.GhostedCatchParametersGet">
            <summary>设置 ActivationObject.get_GhostedCatchParameters() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.GhostedCatchParametersSetICollectionOfParameterDeclaration">
            <summary>设置 ActivationObject.set_GhostedCatchParameters(ICollection`1&lt;ParameterDeclaration&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.GhostedFunctionsGet">
            <summary>设置 ActivationObject.get_GhostedFunctions() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.GhostedFunctionsSetICollectionOfFunctionObject">
            <summary>设置 ActivationObject.set_GhostedFunctions(ICollection`1&lt;FunctionObject&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.IsInWithScopeGet">
            <summary>设置 ActivationObject.get_IsInWithScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.IsInWithScopeSetBoolean">
            <summary>设置 ActivationObject.set_IsInWithScope(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.IsKnownAtCompileTimeGet">
            <summary>设置 ActivationObject.get_IsKnownAtCompileTime() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.IsKnownAtCompileTimeSetBoolean">
            <summary>设置 ActivationObject.set_IsKnownAtCompileTime(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.ItemGetString">
            <summary>设置 ActivationObject.get_Item(String name) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.LexicallyDeclaredNameString">
            <summary>设置 ActivationObject.LexicallyDeclaredName(String name) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.LexicallyDeclaredNamesGet">
            <summary>设置 ActivationObject.get_LexicallyDeclaredNames() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.LexicallyDeclaredNamesSetICollectionOfINameDeclaration">
            <summary>设置 ActivationObject.set_LexicallyDeclaredNames(ICollection`1&lt;INameDeclaration&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.ManualRenameFields">
            <summary>设置 ActivationObject.ManualRenameFields() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.NameTableGet">
            <summary>设置 ActivationObject.get_NameTable() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.NameTableSetIDictionaryOfStringJSVariableField">
            <summary>设置 ActivationObject.set_NameTable(IDictionary`2&lt;String,JSVariableField&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.ParentGet">
            <summary>设置 ActivationObject.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.ParentSetActivationObject">
            <summary>设置 ActivationObject.set_Parent(ActivationObject value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.ScopeLookupsGet">
            <summary>设置 ActivationObject.get_ScopeLookups() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.ScopeLookupsSetICollectionOfLookup">
            <summary>设置 ActivationObject.set_ScopeLookups(ICollection`1&lt;Lookup&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.UnreferencedArgumentJSVariableField">
            <summary>设置 ActivationObject.UnreferencedArgument(JSVariableField variableField) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.UnreferencedFunctionJSVariableFieldFunctionObject">
            <summary>设置 ActivationObject.UnreferencedFunction(JSVariableField variableField, FunctionObject functionObject) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.UnreferencedVariableFieldJSVariableField">
            <summary>设置 ActivationObject.UnreferencedVariableField(JSVariableField variableField) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.UnreferencedVariableJSVariableField">
            <summary>设置 ActivationObject.UnreferencedVariable(JSVariableField variableField) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.UseStrictGet">
            <summary>设置 ActivationObject.get_UseStrict() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.UseStrictSetBoolean">
            <summary>设置 ActivationObject.set_UseStrict(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.ValidateGeneratedNames">
            <summary>设置 ActivationObject.ValidateGeneratedNames() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.VarDeclaredNameString">
            <summary>设置 ActivationObject.VarDeclaredName(String name) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.VarDeclaredNamesGet">
            <summary>设置 ActivationObject.get_VarDeclaredNames() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimActivationObject.AllInstances.VarDeclaredNamesSetICollectionOfINameDeclaration">
            <summary>设置 ActivationObject.set_VarDeclaredNames(ICollection`1&lt;INameDeclaration&gt; value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimAjaxMinExtensions">
            <summary>Microsoft.Ajax.Utilities.AjaxMinExtensions 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimAjaxMinExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimAjaxMinExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimAjaxMinExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimAjaxMinExtensions.CopyItemsToOf1ICollectionOfM0ICollectionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.ICollection{``0},System.Collections.Generic.ICollection{``0}})">
            <summary>设置 AjaxMinExtensions.CopyItemsTo(ICollection`1&lt;!!0&gt; fromSet, ICollection`1&lt;!!0&gt; toSet) 的 填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimAjaxMinExtensions.DistinctByOf2IEnumerableOfM0FuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEnumerable{``0}})">
            <summary>设置 AjaxMinExtensions.DistinctBy(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector) 的 填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimAjaxMinExtensions.IfNotNullOf1M0ActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,System.Action{``0}})">
            <summary>设置 AjaxMinExtensions.IfNotNull(!!0 obj, Action`1&lt;!!0&gt; action) 的 填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimAjaxMinExtensions.IfNotNullOf2M0FuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Func{``0,``1},``1})">
            <summary>设置 AjaxMinExtensions.IfNotNull(!!0 obj, Func`2&lt;!!0,!!1&gt; action) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAjaxMinExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAjaxMinExtensions.FormatInvariantStringObjectArray">
            <summary>设置 AjaxMinExtensions.FormatInvariant(String format, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAjaxMinExtensions.IfNullOrWhiteSpaceStringString">
            <summary>设置 AjaxMinExtensions.IfNullOrWhiteSpace(String text, String defaultValue) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAjaxMinExtensions.IsNullOrWhiteSpaceString">
            <summary>设置 AjaxMinExtensions.IsNullOrWhiteSpace(String text) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAjaxMinExtensions.SubstringUpToFirstStringChar">
            <summary>设置 AjaxMinExtensions.SubstringUpToFirst(String text, Char delimiter) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAjaxMinExtensions.ToStringInvariantDouble">
            <summary>设置 AjaxMinExtensions.ToStringInvariant(Double number) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAjaxMinExtensions.ToStringInvariantDoubleString">
            <summary>设置 AjaxMinExtensions.ToStringInvariant(Double number, String format) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAjaxMinExtensions.ToStringInvariantInt32">
            <summary>设置 AjaxMinExtensions.ToStringInvariant(Int32 number) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAjaxMinExtensions.ToStringInvariantInt32String">
            <summary>设置 AjaxMinExtensions.ToStringInvariant(Int32 number, String format) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAjaxMinExtensions.TryParseIntInvariantStringNumberStylesInt32Out">
            <summary>设置 AjaxMinExtensions.TryParseIntInvariant(String text, NumberStyles numberStyles, Int32&amp; number) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAjaxMinExtensions.TryParseLongInvariantStringNumberStylesInt64Out">
            <summary>设置 AjaxMinExtensions.TryParseLongInvariant(String text, NumberStyles numberStyles, Int64&amp; number) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAjaxMinExtensions.TryParseSingleInvariantStringSingleOut">
            <summary>设置 AjaxMinExtensions.TryParseSingleInvariant(String text, Single&amp; number) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimArrayLiteral">
            <summary>Microsoft.Ajax.Utilities.ArrayLiteral 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimArrayLiteral.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimArrayLiteral.#ctor(Microsoft.Ajax.Utilities.ArrayLiteral)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimArrayLiteral.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimArrayLiteral.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimArrayLiteral.AcceptIVisitor">
            <summary>设置 ArrayLiteral.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimArrayLiteral.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimArrayLiteral.ChildrenGet">
            <summary>设置 ArrayLiteral.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimArrayLiteral.ConstructorContextJSParser">
            <summary>设置 ArrayLiteral.ArrayLiteral(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimArrayLiteral.ElementsGet">
            <summary>设置 ArrayLiteral.get_Elements() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimArrayLiteral.ElementsSetAstNodeList">
            <summary>设置 ArrayLiteral.set_Elements(AstNodeList value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimArrayLiteral.IsConstantGet">
            <summary>设置 ArrayLiteral.get_IsConstant() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimArrayLiteral.MayHaveIssuesGet">
            <summary>设置 ArrayLiteral.get_MayHaveIssues() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimArrayLiteral.MayHaveIssuesSetBoolean">
            <summary>设置 ArrayLiteral.set_MayHaveIssues(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimArrayLiteral.ReplaceChildAstNodeAstNode">
            <summary>设置 ArrayLiteral.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimArrayLiteral._set_Elementsb__4AstNodeList">
            <summary>设置 ArrayLiteral.&lt;set_Elements&gt;b__4(AstNodeList n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimArrayLiteral._set_Elementsb__5AstNodeList">
            <summary>设置 ArrayLiteral.&lt;set_Elements&gt;b__5(AstNodeList n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimArrayLiteral.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimArrayLiteral.AllInstances.AcceptIVisitor">
            <summary>设置 ArrayLiteral.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimArrayLiteral.AllInstances.ChildrenGet">
            <summary>设置 ArrayLiteral.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimArrayLiteral.AllInstances.ElementsGet">
            <summary>设置 ArrayLiteral.get_Elements() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimArrayLiteral.AllInstances.ElementsSetAstNodeList">
            <summary>设置 ArrayLiteral.set_Elements(AstNodeList value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimArrayLiteral.AllInstances.IsConstantGet">
            <summary>设置 ArrayLiteral.get_IsConstant() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimArrayLiteral.AllInstances.MayHaveIssuesGet">
            <summary>设置 ArrayLiteral.get_MayHaveIssues() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimArrayLiteral.AllInstances.MayHaveIssuesSetBoolean">
            <summary>设置 ArrayLiteral.set_MayHaveIssues(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimArrayLiteral.AllInstances.ReplaceChildAstNodeAstNode">
            <summary>设置 ArrayLiteral.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimArrayLiteral.AllInstances._set_Elementsb__4AstNodeList">
            <summary>设置 ArrayLiteral.&lt;set_Elements&gt;b__4(AstNodeList n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimArrayLiteral.AllInstances._set_Elementsb__5AstNodeList">
            <summary>设置 ArrayLiteral.&lt;set_Elements&gt;b__5(AstNodeList n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimAspNetBlockNode">
            <summary>Microsoft.Ajax.Utilities.AspNetBlockNode 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimAspNetBlockNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimAspNetBlockNode.#ctor(Microsoft.Ajax.Utilities.AspNetBlockNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimAspNetBlockNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimAspNetBlockNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAspNetBlockNode.AcceptIVisitor">
            <summary>设置 AspNetBlockNode.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAspNetBlockNode.AspNetBlockTextGet">
            <summary>设置 AspNetBlockNode.get_AspNetBlockText() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAspNetBlockNode.AspNetBlockTextSetString">
            <summary>设置 AspNetBlockNode.set_AspNetBlockText(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAspNetBlockNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAspNetBlockNode.ConstructorContextJSParser">
            <summary>设置 AspNetBlockNode.AspNetBlockNode(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAspNetBlockNode.IsTerminatedByExplicitSemicolonGet">
            <summary>设置 AspNetBlockNode.get_IsTerminatedByExplicitSemicolon() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAspNetBlockNode.IsTerminatedByExplicitSemicolonSetBoolean">
            <summary>设置 AspNetBlockNode.set_IsTerminatedByExplicitSemicolon(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAspNetBlockNode.RequiresSeparatorGet">
            <summary>设置 AspNetBlockNode.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimAspNetBlockNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAspNetBlockNode.AllInstances.AcceptIVisitor">
            <summary>设置 AspNetBlockNode.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAspNetBlockNode.AllInstances.AspNetBlockTextGet">
            <summary>设置 AspNetBlockNode.get_AspNetBlockText() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAspNetBlockNode.AllInstances.AspNetBlockTextSetString">
            <summary>设置 AspNetBlockNode.set_AspNetBlockText(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAspNetBlockNode.AllInstances.IsTerminatedByExplicitSemicolonGet">
            <summary>设置 AspNetBlockNode.get_IsTerminatedByExplicitSemicolon() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAspNetBlockNode.AllInstances.IsTerminatedByExplicitSemicolonSetBoolean">
            <summary>设置 AspNetBlockNode.set_IsTerminatedByExplicitSemicolon(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAspNetBlockNode.AllInstances.RequiresSeparatorGet">
            <summary>设置 AspNetBlockNode.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimAstNode">
            <summary>Microsoft.Ajax.Utilities.AstNode 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.#ctor(Microsoft.Ajax.Utilities.AstNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.EnumerateNonNullNodesOf1IListOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{Microsoft.Ajax.Utilities.AstNode}})">
            <summary>设置 AstNode.EnumerateNonNullNodes(IList`1&lt;!!0&gt; nodes) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.ChildrenGet">
            <summary>设置 AstNode.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.ConstructorContextJSParser">
            <summary>设置 AstNode.AstNode(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.ContainsInOperatorGet">
            <summary>设置 AstNode.get_ContainsInOperator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.ContextGet">
            <summary>设置 AstNode.get_Context() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.ContextSetContext">
            <summary>设置 AstNode.set_Context(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.EnclosingScopeGet">
            <summary>设置 AstNode.get_EnclosingScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.EnumerateNonNullNodesAstNodeAstNodeAstNodeAstNode">
            <summary>设置 AstNode.EnumerateNonNullNodes(AstNode n1, AstNode n2, AstNode n3, AstNode n4) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.FindPrimitiveType">
            <summary>设置 AstNode.FindPrimitiveType() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.ForceToBlockAstNode">
            <summary>设置 AstNode.ForceToBlock(AstNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.GetFunctionGuessAstNode">
            <summary>设置 AstNode.GetFunctionGuess(AstNode target) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.HideFromOutputGet">
            <summary>设置 AstNode.get_HideFromOutput() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.HideFromOutputSetBoolean">
            <summary>设置 AstNode.set_HideFromOutput(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.IndexGet">
            <summary>设置 AstNode.get_Index() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.IndexSetInt64">
            <summary>设置 AstNode.set_Index(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.IsConstantGet">
            <summary>设置 AstNode.get_IsConstant() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.IsDebuggerStatementGet">
            <summary>设置 AstNode.get_IsDebuggerStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.IsEquivalentToAstNode">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.IsExpressionGet">
            <summary>设置 AstNode.get_IsExpression() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.IsWindowLookupGet">
            <summary>设置 AstNode.get_IsWindowLookup() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.LeftHandSideGet">
            <summary>设置 AstNode.get_LeftHandSide() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.ParentGet">
            <summary>设置 AstNode.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.ParentSetAstNode">
            <summary>设置 AstNode.set_Parent(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.ParserGet">
            <summary>设置 AstNode.get_Parser() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.ParserSetJSParser">
            <summary>设置 AstNode.set_Parser(JSParser value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.PrecedenceGet">
            <summary>设置 AstNode.get_Precedence() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.ReplaceChildAstNodeAstNode">
            <summary>设置 AstNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.RequiresSeparatorGet">
            <summary>设置 AstNode.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.StaticConstructor">
            <summary>设置 AstNode.AstNode() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.TerminatingContextGet">
            <summary>设置 AstNode.get_TerminatingContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.TerminatingContextSetContext">
            <summary>设置 AstNode.set_TerminatingContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.ToCode">
            <summary>设置 AstNode.ToCode() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.UpdateWithContext">
            <summary>设置 AstNode.UpdateWith(Context context) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.AllInstances.ChildrenGet">
            <summary>设置 AstNode.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.AllInstances.ContainsInOperatorGet">
            <summary>设置 AstNode.get_ContainsInOperator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.AllInstances.ContextGet">
            <summary>设置 AstNode.get_Context() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.AllInstances.ContextSetContext">
            <summary>设置 AstNode.set_Context(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.AllInstances.EnclosingScopeGet">
            <summary>设置 AstNode.get_EnclosingScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.AllInstances.FindPrimitiveType">
            <summary>设置 AstNode.FindPrimitiveType() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.AllInstances.GetFunctionGuessAstNode">
            <summary>设置 AstNode.GetFunctionGuess(AstNode target) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.AllInstances.HideFromOutputGet">
            <summary>设置 AstNode.get_HideFromOutput() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.AllInstances.HideFromOutputSetBoolean">
            <summary>设置 AstNode.set_HideFromOutput(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.AllInstances.IndexGet">
            <summary>设置 AstNode.get_Index() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.AllInstances.IndexSetInt64">
            <summary>设置 AstNode.set_Index(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.AllInstances.IsConstantGet">
            <summary>设置 AstNode.get_IsConstant() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.AllInstances.IsDebuggerStatementGet">
            <summary>设置 AstNode.get_IsDebuggerStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.AllInstances.IsEquivalentToAstNode">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.AllInstances.IsExpressionGet">
            <summary>设置 AstNode.get_IsExpression() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.AllInstances.IsWindowLookupGet">
            <summary>设置 AstNode.get_IsWindowLookup() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.AllInstances.LeftHandSideGet">
            <summary>设置 AstNode.get_LeftHandSide() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.AllInstances.ParentGet">
            <summary>设置 AstNode.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.AllInstances.ParentSetAstNode">
            <summary>设置 AstNode.set_Parent(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.AllInstances.ParserGet">
            <summary>设置 AstNode.get_Parser() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.AllInstances.ParserSetJSParser">
            <summary>设置 AstNode.set_Parser(JSParser value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.AllInstances.PrecedenceGet">
            <summary>设置 AstNode.get_Precedence() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.AllInstances.ReplaceChildAstNodeAstNode">
            <summary>设置 AstNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.AllInstances.RequiresSeparatorGet">
            <summary>设置 AstNode.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.AllInstances.TerminatingContextGet">
            <summary>设置 AstNode.get_TerminatingContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.AllInstances.TerminatingContextSetContext">
            <summary>设置 AstNode.set_TerminatingContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.AllInstances.ToCode">
            <summary>设置 AstNode.ToCode() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNode.AllInstances.UpdateWithContext">
            <summary>设置 AstNode.UpdateWith(Context context) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList">
            <summary>Microsoft.Ajax.Utilities.AstNodeList 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.#ctor(Microsoft.Ajax.Utilities.AstNodeList)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.Bind(System.Collections.Generic.IEnumerable{Microsoft.Ajax.Utilities.AstNode})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.AcceptIVisitor">
            <summary>设置 AstNodeList.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.AppendAstNode">
            <summary>设置 AstNodeList.Append(AstNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.ChildrenGet">
            <summary>设置 AstNodeList.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.ConstructorContextJSParser">
            <summary>设置 AstNodeList.AstNodeList(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.CountGet">
            <summary>设置 AstNodeList.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.GetEnumerator">
            <summary>设置 AstNodeList.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.InsertInt32AstNode">
            <summary>设置 AstNodeList.Insert(Int32 position, AstNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.IsConstantGet">
            <summary>设置 AstNodeList.get_IsConstant() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.IsEquivalentToAstNode">
            <summary>设置 AstNodeList.IsEquivalentTo(AstNode otherNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.IsSingleConstantArgumentString">
            <summary>设置 AstNodeList.IsSingleConstantArgument(String argumentValue) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.ItemGetInt32">
            <summary>设置 AstNodeList.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.ItemSetInt32AstNode">
            <summary>设置 AstNodeList.set_Item(Int32 index, AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.PrecedenceGet">
            <summary>设置 AstNodeList.get_Precedence() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.RemoveAtInt32">
            <summary>设置 AstNodeList.RemoveAt(Int32 position) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.ReplaceChildAstNodeAstNode">
            <summary>设置 AstNodeList.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.SingleConstantArgumentGet">
            <summary>设置 AstNodeList.get_SingleConstantArgument() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 AstNodeList.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.TerminatingContextGet">
            <summary>设置 AstNodeList.get_TerminatingContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.ToString">
            <summary>设置 AstNodeList.ToString() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList._RemoveAtb__2AstNode">
            <summary>设置 AstNodeList.&lt;RemoveAt&gt;b__2(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList._ReplaceChildb__0AstNode">
            <summary>设置 AstNodeList.&lt;ReplaceChild&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList._set_Itemb__3AstNode">
            <summary>设置 AstNodeList.&lt;set_Item&gt;b__3(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.AllInstances.AcceptIVisitor">
            <summary>设置 AstNodeList.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.AllInstances.AppendAstNode">
            <summary>设置 AstNodeList.Append(AstNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.AllInstances.ChildrenGet">
            <summary>设置 AstNodeList.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.AllInstances.CountGet">
            <summary>设置 AstNodeList.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.AllInstances.GetEnumerator">
            <summary>设置 AstNodeList.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.AllInstances.InsertInt32AstNode">
            <summary>设置 AstNodeList.Insert(Int32 position, AstNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.AllInstances.IsConstantGet">
            <summary>设置 AstNodeList.get_IsConstant() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.AllInstances.IsEquivalentToAstNode">
            <summary>设置 AstNodeList.IsEquivalentTo(AstNode otherNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.AllInstances.IsSingleConstantArgumentString">
            <summary>设置 AstNodeList.IsSingleConstantArgument(String argumentValue) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.AllInstances.ItemGetInt32">
            <summary>设置 AstNodeList.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.AllInstances.ItemSetInt32AstNode">
            <summary>设置 AstNodeList.set_Item(Int32 index, AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.AllInstances.PrecedenceGet">
            <summary>设置 AstNodeList.get_Precedence() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.AllInstances.RemoveAtInt32">
            <summary>设置 AstNodeList.RemoveAt(Int32 position) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.AllInstances.ReplaceChildAstNodeAstNode">
            <summary>设置 AstNodeList.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.AllInstances.SingleConstantArgumentGet">
            <summary>设置 AstNodeList.get_SingleConstantArgument() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 AstNodeList.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.AllInstances.TerminatingContextGet">
            <summary>设置 AstNodeList.get_TerminatingContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.AllInstances.ToString01">
            <summary>设置 AstNodeList.ToString() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.AllInstances._RemoveAtb__2AstNode">
            <summary>设置 AstNodeList.&lt;RemoveAt&gt;b__2(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.AllInstances._ReplaceChildb__0AstNode">
            <summary>设置 AstNodeList.&lt;ReplaceChild&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimAstNodeList.AllInstances._set_Itemb__3AstNode">
            <summary>设置 AstNodeList.&lt;set_Item&gt;b__3(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator">
            <summary>Microsoft.Ajax.Utilities.BinaryOperator 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.#ctor(Microsoft.Ajax.Utilities.BinaryOperator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.AcceptIVisitor">
            <summary>设置 BinaryOperator.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.ChildrenGet">
            <summary>设置 BinaryOperator.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.ConstructorContextJSParser">
            <summary>设置 BinaryOperator.BinaryOperator(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.ContainsInOperatorGet">
            <summary>设置 BinaryOperator.get_ContainsInOperator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.FindPrimitiveType">
            <summary>设置 BinaryOperator.FindPrimitiveType() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.GetFunctionGuessAstNode">
            <summary>设置 BinaryOperator.GetFunctionGuess(AstNode target) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.IsAssignGet">
            <summary>设置 BinaryOperator.get_IsAssign() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.IsConstantGet">
            <summary>设置 BinaryOperator.get_IsConstant() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.IsEquivalentToAstNode">
            <summary>设置 BinaryOperator.IsEquivalentTo(AstNode otherNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.LeftHandSideGet">
            <summary>设置 BinaryOperator.get_LeftHandSide() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.Operand1Get">
            <summary>设置 BinaryOperator.get_Operand1() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.Operand1SetAstNode">
            <summary>设置 BinaryOperator.set_Operand1(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.Operand2Get">
            <summary>设置 BinaryOperator.get_Operand2() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.Operand2SetAstNode">
            <summary>设置 BinaryOperator.set_Operand2(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.OperatorContextGet">
            <summary>设置 BinaryOperator.get_OperatorContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.OperatorContextSetContext">
            <summary>设置 BinaryOperator.set_OperatorContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.OperatorTokenGet">
            <summary>设置 BinaryOperator.get_OperatorToken() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.OperatorTokenSetJSToken">
            <summary>设置 BinaryOperator.set_OperatorToken(JSToken value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.PrecedenceGet">
            <summary>设置 BinaryOperator.get_Precedence() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.ReplaceChildAstNodeAstNode">
            <summary>设置 BinaryOperator.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.SwapOperands">
            <summary>设置 BinaryOperator.SwapOperands() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.TerminatingContextGet">
            <summary>设置 BinaryOperator.get_TerminatingContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.ToString">
            <summary>设置 BinaryOperator.ToString() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator._get_IsConstantb__6AstNode">
            <summary>设置 BinaryOperator.&lt;get_IsConstant&gt;b__6(AstNode o) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator._get_IsConstantb__7AstNode">
            <summary>设置 BinaryOperator.&lt;get_IsConstant&gt;b__7(AstNode o) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator._get_TerminatingContextb__4AstNode">
            <summary>设置 BinaryOperator.&lt;get_TerminatingContext&gt;b__4(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator._set_Operand1b__0AstNode">
            <summary>设置 BinaryOperator.&lt;set_Operand1&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator._set_Operand1b__1AstNode">
            <summary>设置 BinaryOperator.&lt;set_Operand1&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator._set_Operand2b__2AstNode">
            <summary>设置 BinaryOperator.&lt;set_Operand2&gt;b__2(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator._set_Operand2b__3AstNode">
            <summary>设置 BinaryOperator.&lt;set_Operand2&gt;b__3(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.AllInstances.AcceptIVisitor">
            <summary>设置 BinaryOperator.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.AllInstances.ChildrenGet">
            <summary>设置 BinaryOperator.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.AllInstances.ContainsInOperatorGet">
            <summary>设置 BinaryOperator.get_ContainsInOperator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.AllInstances.FindPrimitiveType">
            <summary>设置 BinaryOperator.FindPrimitiveType() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.AllInstances.GetFunctionGuessAstNode">
            <summary>设置 BinaryOperator.GetFunctionGuess(AstNode target) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.AllInstances.IsAssignGet">
            <summary>设置 BinaryOperator.get_IsAssign() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.AllInstances.IsConstantGet">
            <summary>设置 BinaryOperator.get_IsConstant() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.AllInstances.IsEquivalentToAstNode">
            <summary>设置 BinaryOperator.IsEquivalentTo(AstNode otherNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.AllInstances.LeftHandSideGet">
            <summary>设置 BinaryOperator.get_LeftHandSide() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.AllInstances.Operand1Get">
            <summary>设置 BinaryOperator.get_Operand1() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.AllInstances.Operand1SetAstNode">
            <summary>设置 BinaryOperator.set_Operand1(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.AllInstances.Operand2Get">
            <summary>设置 BinaryOperator.get_Operand2() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.AllInstances.Operand2SetAstNode">
            <summary>设置 BinaryOperator.set_Operand2(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.AllInstances.OperatorContextGet">
            <summary>设置 BinaryOperator.get_OperatorContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.AllInstances.OperatorContextSetContext">
            <summary>设置 BinaryOperator.set_OperatorContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.AllInstances.OperatorTokenGet">
            <summary>设置 BinaryOperator.get_OperatorToken() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.AllInstances.OperatorTokenSetJSToken">
            <summary>设置 BinaryOperator.set_OperatorToken(JSToken value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.AllInstances.PrecedenceGet">
            <summary>设置 BinaryOperator.get_Precedence() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.AllInstances.ReplaceChildAstNodeAstNode">
            <summary>设置 BinaryOperator.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.AllInstances.SwapOperands">
            <summary>设置 BinaryOperator.SwapOperands() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.AllInstances.TerminatingContextGet">
            <summary>设置 BinaryOperator.get_TerminatingContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.AllInstances.ToString01">
            <summary>设置 BinaryOperator.ToString() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.AllInstances._set_Operand1b__0AstNode">
            <summary>设置 BinaryOperator.&lt;set_Operand1&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.AllInstances._set_Operand1b__1AstNode">
            <summary>设置 BinaryOperator.&lt;set_Operand1&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.AllInstances._set_Operand2b__2AstNode">
            <summary>设置 BinaryOperator.&lt;set_Operand2&gt;b__2(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBinaryOperator.AllInstances._set_Operand2b__3AstNode">
            <summary>设置 BinaryOperator.&lt;set_Operand2&gt;b__3(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimBlock">
            <summary>Microsoft.Ajax.Utilities.Block 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimBlock.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimBlock.#ctor(Microsoft.Ajax.Utilities.Block)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimBlock.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimBlock.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.AcceptIVisitor">
            <summary>设置 Block.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.AppendAstNode">
            <summary>设置 Block.Append(AstNode element) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.BlockScopeGet">
            <summary>设置 Block.get_BlockScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.BlockScopeSetBlockScope">
            <summary>设置 Block.set_BlockScope(BlockScope value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.BraceOnNewLineGet">
            <summary>设置 Block.get_BraceOnNewLine() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.BraceOnNewLineSetBoolean">
            <summary>设置 Block.set_BraceOnNewLine(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.ChildrenGet">
            <summary>设置 Block.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.Clear">
            <summary>设置 Block.Clear() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.ConstructorContextJSParser">
            <summary>设置 Block.Block(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.CountGet">
            <summary>设置 Block.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.EnclosingScopeGet">
            <summary>设置 Block.get_EnclosingScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.ForceBracesGet">
            <summary>设置 Block.get_ForceBraces() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.ForceBracesSetBoolean">
            <summary>设置 Block.set_ForceBraces(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.IndexOfAstNode">
            <summary>设置 Block.IndexOf(AstNode child) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.InsertAfterAstNodeAstNode">
            <summary>设置 Block.InsertAfter(AstNode after, AstNode item) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.InsertInt32AstNode">
            <summary>设置 Block.Insert(Int32 position, AstNode item) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.InsertRangeInt32IEnumerableOfAstNode">
            <summary>设置 Block.InsertRange(Int32 index, IEnumerable`1&lt;AstNode&gt; newItems) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.IsDebuggerStatementGet">
            <summary>设置 Block.get_IsDebuggerStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.IsExpressionGet">
            <summary>设置 Block.get_IsExpression() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.ItemGetInt32">
            <summary>设置 Block.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.ItemSetInt32AstNode">
            <summary>设置 Block.set_Item(Int32 index, AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.RemoveAtInt32">
            <summary>设置 Block.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.RemoveLast">
            <summary>设置 Block.RemoveLast() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.ReplaceChildAstNodeAstNode">
            <summary>设置 Block.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.RequiresSeparatorGet">
            <summary>设置 Block.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.TerminatingContextGet">
            <summary>设置 Block.get_TerminatingContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock._Clearb__5AstNode">
            <summary>设置 Block.&lt;Clear&gt;b__5(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock._RemoveAtb__3AstNode">
            <summary>设置 Block.&lt;RemoveAt&gt;b__3(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock._ReplaceChildb__1AstNode">
            <summary>设置 Block.&lt;ReplaceChild&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock._set_Itemb__0AstNode">
            <summary>设置 Block.&lt;set_Item&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimBlock.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.AllInstances.AcceptIVisitor">
            <summary>设置 Block.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.AllInstances.AppendAstNode">
            <summary>设置 Block.Append(AstNode element) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.AllInstances.BlockScopeGet">
            <summary>设置 Block.get_BlockScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.AllInstances.BlockScopeSetBlockScope">
            <summary>设置 Block.set_BlockScope(BlockScope value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.AllInstances.BraceOnNewLineGet">
            <summary>设置 Block.get_BraceOnNewLine() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.AllInstances.BraceOnNewLineSetBoolean">
            <summary>设置 Block.set_BraceOnNewLine(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.AllInstances.ChildrenGet">
            <summary>设置 Block.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.AllInstances.Clear">
            <summary>设置 Block.Clear() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.AllInstances.CountGet">
            <summary>设置 Block.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.AllInstances.EnclosingScopeGet">
            <summary>设置 Block.get_EnclosingScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.AllInstances.ForceBracesGet">
            <summary>设置 Block.get_ForceBraces() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.AllInstances.ForceBracesSetBoolean">
            <summary>设置 Block.set_ForceBraces(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.AllInstances.IndexOfAstNode">
            <summary>设置 Block.IndexOf(AstNode child) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.AllInstances.InsertAfterAstNodeAstNode">
            <summary>设置 Block.InsertAfter(AstNode after, AstNode item) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.AllInstances.InsertInt32AstNode">
            <summary>设置 Block.Insert(Int32 position, AstNode item) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.AllInstances.InsertRangeInt32IEnumerableOfAstNode">
            <summary>设置 Block.InsertRange(Int32 index, IEnumerable`1&lt;AstNode&gt; newItems) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.AllInstances.IsDebuggerStatementGet">
            <summary>设置 Block.get_IsDebuggerStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.AllInstances.IsExpressionGet">
            <summary>设置 Block.get_IsExpression() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.AllInstances.ItemGetInt32">
            <summary>设置 Block.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.AllInstances.ItemSetInt32AstNode">
            <summary>设置 Block.set_Item(Int32 index, AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.AllInstances.RemoveAtInt32">
            <summary>设置 Block.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.AllInstances.RemoveLast">
            <summary>设置 Block.RemoveLast() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.AllInstances.ReplaceChildAstNodeAstNode">
            <summary>设置 Block.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.AllInstances.RequiresSeparatorGet">
            <summary>设置 Block.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.AllInstances.TerminatingContextGet">
            <summary>设置 Block.get_TerminatingContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.AllInstances._Clearb__5AstNode">
            <summary>设置 Block.&lt;Clear&gt;b__5(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.AllInstances._RemoveAtb__3AstNode">
            <summary>设置 Block.&lt;RemoveAt&gt;b__3(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.AllInstances._ReplaceChildb__1AstNode">
            <summary>设置 Block.&lt;ReplaceChild&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlock.AllInstances._set_Itemb__0AstNode">
            <summary>设置 Block.&lt;set_Item&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimBlockScope">
            <summary>Microsoft.Ajax.Utilities.BlockScope 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimBlockScope.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimBlockScope.#ctor(Microsoft.Ajax.Utilities.BlockScope)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimBlockScope.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimBlockScope.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlockScope.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlockScope.ConstructorActivationObjectContextCodeSettings">
            <summary>设置 BlockScope.BlockScope(ActivationObject parent, Context context, CodeSettings settings) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlockScope.ContextGet">
            <summary>设置 BlockScope.get_Context() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlockScope.CreateFieldStringObjectFieldAttributes">
            <summary>设置 BlockScope.CreateField(String name, Object value, FieldAttributes attributes) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlockScope.DeclareScope">
            <summary>设置 BlockScope.DeclareScope() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimBlockScope.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlockScope.AllInstances.ContextGet">
            <summary>设置 BlockScope.get_Context() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlockScope.AllInstances.CreateFieldStringObjectFieldAttributes">
            <summary>设置 BlockScope.CreateField(String name, Object value, FieldAttributes attributes) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBlockScope.AllInstances.DeclareScope">
            <summary>设置 BlockScope.DeclareScope() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimBreak">
            <summary>Microsoft.Ajax.Utilities.Break 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimBreak.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimBreak.#ctor(Microsoft.Ajax.Utilities.Break)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimBreak.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimBreak.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBreak.AcceptIVisitor">
            <summary>设置 Break.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBreak.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBreak.ConstructorContextJSParser">
            <summary>设置 Break.Break(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBreak.LabelContextGet">
            <summary>设置 Break.get_LabelContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBreak.LabelContextSetContext">
            <summary>设置 Break.set_LabelContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBreak.LabelGet">
            <summary>设置 Break.get_Label() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBreak.LabelSetString">
            <summary>设置 Break.set_Label(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBreak.NestLevelGet">
            <summary>设置 Break.get_NestLevel() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBreak.NestLevelSetInt32">
            <summary>设置 Break.set_NestLevel(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimBreak.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBreak.AllInstances.AcceptIVisitor">
            <summary>设置 Break.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBreak.AllInstances.LabelContextGet">
            <summary>设置 Break.get_LabelContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBreak.AllInstances.LabelContextSetContext">
            <summary>设置 Break.set_LabelContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBreak.AllInstances.LabelGet">
            <summary>设置 Break.get_Label() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBreak.AllInstances.LabelSetString">
            <summary>设置 Break.set_Label(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBreak.AllInstances.NestLevelGet">
            <summary>设置 Break.get_NestLevel() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimBreak.AllInstances.NestLevelSetInt32">
            <summary>设置 Break.set_NestLevel(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimCallNode">
            <summary>Microsoft.Ajax.Utilities.CallNode 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.#ctor(Microsoft.Ajax.Utilities.CallNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.AcceptIVisitor">
            <summary>设置 CallNode.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.ArgumentsGet">
            <summary>设置 CallNode.get_Arguments() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.ArgumentsSetAstNodeList">
            <summary>设置 CallNode.set_Arguments(AstNodeList value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.ChildrenGet">
            <summary>设置 CallNode.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.ConstructorContextJSParser">
            <summary>设置 CallNode.CallNode(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.FunctionGet">
            <summary>设置 CallNode.get_Function() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.FunctionSetAstNode">
            <summary>设置 CallNode.set_Function(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.InBracketsGet">
            <summary>设置 CallNode.get_InBrackets() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.InBracketsSetBoolean">
            <summary>设置 CallNode.set_InBrackets(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.IsConstructorGet">
            <summary>设置 CallNode.get_IsConstructor() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.IsConstructorSetBoolean">
            <summary>设置 CallNode.set_IsConstructor(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.IsDebuggerStatementGet">
            <summary>设置 CallNode.get_IsDebuggerStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.IsEquivalentToAstNode">
            <summary>设置 CallNode.IsEquivalentTo(AstNode otherNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.IsExpressionGet">
            <summary>设置 CallNode.get_IsExpression() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.LeftHandSideGet">
            <summary>设置 CallNode.get_LeftHandSide() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.PrecedenceGet">
            <summary>设置 CallNode.get_Precedence() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.ReplaceChildAstNodeAstNode">
            <summary>设置 CallNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode._set_Argumentsb__2AstNodeList">
            <summary>设置 CallNode.&lt;set_Arguments&gt;b__2(AstNodeList n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode._set_Argumentsb__3AstNodeList">
            <summary>设置 CallNode.&lt;set_Arguments&gt;b__3(AstNodeList n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode._set_Functionb__0AstNode">
            <summary>设置 CallNode.&lt;set_Function&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode._set_Functionb__1AstNode">
            <summary>设置 CallNode.&lt;set_Function&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.AllInstances.AcceptIVisitor">
            <summary>设置 CallNode.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.AllInstances.ArgumentsGet">
            <summary>设置 CallNode.get_Arguments() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.AllInstances.ArgumentsSetAstNodeList">
            <summary>设置 CallNode.set_Arguments(AstNodeList value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.AllInstances.ChildrenGet">
            <summary>设置 CallNode.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.AllInstances.FunctionGet">
            <summary>设置 CallNode.get_Function() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.AllInstances.FunctionSetAstNode">
            <summary>设置 CallNode.set_Function(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.AllInstances.InBracketsGet">
            <summary>设置 CallNode.get_InBrackets() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.AllInstances.InBracketsSetBoolean">
            <summary>设置 CallNode.set_InBrackets(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.AllInstances.IsConstructorGet">
            <summary>设置 CallNode.get_IsConstructor() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.AllInstances.IsConstructorSetBoolean">
            <summary>设置 CallNode.set_IsConstructor(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.AllInstances.IsDebuggerStatementGet">
            <summary>设置 CallNode.get_IsDebuggerStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.AllInstances.IsEquivalentToAstNode">
            <summary>设置 CallNode.IsEquivalentTo(AstNode otherNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.AllInstances.IsExpressionGet">
            <summary>设置 CallNode.get_IsExpression() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.AllInstances.LeftHandSideGet">
            <summary>设置 CallNode.get_LeftHandSide() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.AllInstances.PrecedenceGet">
            <summary>设置 CallNode.get_Precedence() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.AllInstances.ReplaceChildAstNodeAstNode">
            <summary>设置 CallNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.AllInstances._set_Argumentsb__2AstNodeList">
            <summary>设置 CallNode.&lt;set_Arguments&gt;b__2(AstNodeList n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.AllInstances._set_Argumentsb__3AstNodeList">
            <summary>设置 CallNode.&lt;set_Arguments&gt;b__3(AstNodeList n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.AllInstances._set_Functionb__0AstNode">
            <summary>设置 CallNode.&lt;set_Function&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCallNode.AllInstances._set_Functionb__1AstNode">
            <summary>设置 CallNode.&lt;set_Function&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimCatchScope">
            <summary>Microsoft.Ajax.Utilities.CatchScope 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCatchScope.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCatchScope.#ctor(Microsoft.Ajax.Utilities.CatchScope)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCatchScope.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCatchScope.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCatchScope.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCatchScope.CatchParameterGet">
            <summary>设置 CatchScope.get_CatchParameter() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCatchScope.CatchParameterSetParameterDeclaration">
            <summary>设置 CatchScope.set_CatchParameter(ParameterDeclaration value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCatchScope.ConstructorActivationObjectContextCodeSettingsParameterDeclaration">
            <summary>设置 CatchScope.CatchScope(ActivationObject parent, Context catchContext, CodeSettings settings, ParameterDeclaration catchParameter) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCatchScope.CreateFieldStringObjectFieldAttributes">
            <summary>设置 CatchScope.CreateField(String name, Object value, FieldAttributes attributes) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimCatchScope.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCatchScope.AllInstances.CatchParameterGet">
            <summary>设置 CatchScope.get_CatchParameter() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCatchScope.AllInstances.CatchParameterSetParameterDeclaration">
            <summary>设置 CatchScope.set_CatchParameter(ParameterDeclaration value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCatchScope.AllInstances.CreateFieldStringObjectFieldAttributes">
            <summary>设置 CatchScope.CreateField(String name, Object value, FieldAttributes attributes) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings">
            <summary>Microsoft.Ajax.Utilities.CodeSettings 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.#ctor(Microsoft.Ajax.Utilities.CodeSettings)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AddDebugLookupString">
            <summary>设置 CodeSettings.AddDebugLookup(String debugNamespace) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AddKnownGlobalString">
            <summary>设置 CodeSettings.AddKnownGlobal(String identifier) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AddNoAutoRenameString">
            <summary>设置 CodeSettings.AddNoAutoRename(String noRename) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AddRenamePairStringString">
            <summary>设置 CodeSettings.AddRenamePair(String sourceName, String newName) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AlwaysEscapeNonAsciiGet">
            <summary>设置 CodeSettings.get_AlwaysEscapeNonAscii() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AlwaysEscapeNonAsciiSetBoolean">
            <summary>设置 CodeSettings.set_AlwaysEscapeNonAscii(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.ClearRenamePairs">
            <summary>设置 CodeSettings.ClearRenamePairs() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.Clone">
            <summary>设置 CodeSettings.Clone() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.CollapseToLiteralGet">
            <summary>设置 CodeSettings.get_CollapseToLiteral() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.CollapseToLiteralSetBoolean">
            <summary>设置 CodeSettings.set_CollapseToLiteral(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.ConstStatementsMozillaGet">
            <summary>设置 CodeSettings.get_ConstStatementsMozilla() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.ConstStatementsMozillaSetBoolean">
            <summary>设置 CodeSettings.set_ConstStatementsMozilla(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.Constructor">
            <summary>设置 CodeSettings.CodeSettings() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.DebugLookupCollectionGet">
            <summary>设置 CodeSettings.get_DebugLookupCollection() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.DebugLookupListGet">
            <summary>设置 CodeSettings.get_DebugLookupList() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.DebugLookupListSetString">
            <summary>设置 CodeSettings.set_DebugLookupList(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.DebugLookupsGet">
            <summary>设置 CodeSettings.get_DebugLookups() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.ErrorIfNotInlineSafeGet">
            <summary>设置 CodeSettings.get_ErrorIfNotInlineSafe() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.ErrorIfNotInlineSafeSetBoolean">
            <summary>设置 CodeSettings.set_ErrorIfNotInlineSafe(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.EvalLiteralExpressionsGet">
            <summary>设置 CodeSettings.get_EvalLiteralExpressions() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.EvalLiteralExpressionsSetBoolean">
            <summary>设置 CodeSettings.set_EvalLiteralExpressions(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.EvalTreatmentGet">
            <summary>设置 CodeSettings.get_EvalTreatment() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.EvalTreatmentSetEvalTreatment">
            <summary>设置 CodeSettings.set_EvalTreatment(EvalTreatment value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.EvalsAreSafeGet">
            <summary>设置 CodeSettings.get_EvalsAreSafe() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.EvalsAreSafeSetBoolean">
            <summary>设置 CodeSettings.set_EvalsAreSafe(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.FormatGet">
            <summary>设置 CodeSettings.get_Format() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.FormatSetJavaScriptFormat">
            <summary>设置 CodeSettings.set_Format(JavaScriptFormat value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.GetNewNameString">
            <summary>设置 CodeSettings.GetNewName(String sourceName) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.HasRenamePairsGet">
            <summary>设置 CodeSettings.get_HasRenamePairs() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.IgnoreConditionalCompilationGet">
            <summary>设置 CodeSettings.get_IgnoreConditionalCompilation() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.IgnoreConditionalCompilationSetBoolean">
            <summary>设置 CodeSettings.set_IgnoreConditionalCompilation(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.IgnorePreprocessorDefinesGet">
            <summary>设置 CodeSettings.get_IgnorePreprocessorDefines() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.IgnorePreprocessorDefinesSetBoolean">
            <summary>设置 CodeSettings.set_IgnorePreprocessorDefines(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.InlineSafeStringsGet">
            <summary>设置 CodeSettings.get_InlineSafeStrings() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.InlineSafeStringsSetBoolean">
            <summary>设置 CodeSettings.set_InlineSafeStrings(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.IsModificationAllowedTreeModifications">
            <summary>设置 CodeSettings.IsModificationAllowed(TreeModifications modification) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.KnownGlobalCollectionGet">
            <summary>设置 CodeSettings.get_KnownGlobalCollection() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.KnownGlobalNamesGet">
            <summary>设置 CodeSettings.get_KnownGlobalNames() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.KnownGlobalNamesListGet">
            <summary>设置 CodeSettings.get_KnownGlobalNamesList() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.KnownGlobalNamesListSetString">
            <summary>设置 CodeSettings.set_KnownGlobalNamesList(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.LocalRenamingGet">
            <summary>设置 CodeSettings.get_LocalRenaming() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.LocalRenamingSetLocalRenaming">
            <summary>设置 CodeSettings.set_LocalRenaming(LocalRenaming value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.MacSafariQuirksGet">
            <summary>设置 CodeSettings.get_MacSafariQuirks() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.MacSafariQuirksSetBoolean">
            <summary>设置 CodeSettings.set_MacSafariQuirks(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.ManualRenamesPropertiesGet">
            <summary>设置 CodeSettings.get_ManualRenamesProperties() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.ManualRenamesPropertiesSetBoolean">
            <summary>设置 CodeSettings.set_ManualRenamesProperties(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.MinifyCodeGet">
            <summary>设置 CodeSettings.get_MinifyCode() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.MinifyCodeSetBoolean">
            <summary>设置 CodeSettings.set_MinifyCode(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.NoAutoRenameCollectionGet">
            <summary>设置 CodeSettings.get_NoAutoRenameCollection() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.NoAutoRenameIdentifiersGet">
            <summary>设置 CodeSettings.get_NoAutoRenameIdentifiers() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.NoAutoRenameListGet">
            <summary>设置 CodeSettings.get_NoAutoRenameList() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.NoAutoRenameListSetString">
            <summary>设置 CodeSettings.set_NoAutoRenameList(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.PreprocessOnlyGet">
            <summary>设置 CodeSettings.get_PreprocessOnly() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.PreprocessOnlySetBoolean">
            <summary>设置 CodeSettings.set_PreprocessOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.PreserveFunctionNamesGet">
            <summary>设置 CodeSettings.get_PreserveFunctionNames() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.PreserveFunctionNamesSetBoolean">
            <summary>设置 CodeSettings.set_PreserveFunctionNames(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.PreserveImportantCommentsGet">
            <summary>设置 CodeSettings.get_PreserveImportantComments() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.PreserveImportantCommentsSetBoolean">
            <summary>设置 CodeSettings.set_PreserveImportantComments(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.QuoteObjectLiteralPropertiesGet">
            <summary>设置 CodeSettings.get_QuoteObjectLiteralProperties() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.QuoteObjectLiteralPropertiesSetBoolean">
            <summary>设置 CodeSettings.set_QuoteObjectLiteralProperties(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.RemoveFunctionExpressionNamesGet">
            <summary>设置 CodeSettings.get_RemoveFunctionExpressionNames() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.RemoveFunctionExpressionNamesSetBoolean">
            <summary>设置 CodeSettings.set_RemoveFunctionExpressionNames(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.RemoveUnneededCodeGet">
            <summary>设置 CodeSettings.get_RemoveUnneededCode() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.RemoveUnneededCodeSetBoolean">
            <summary>设置 CodeSettings.set_RemoveUnneededCode(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.RenamePairsGet">
            <summary>设置 CodeSettings.get_RenamePairs() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.RenamePairsSetString">
            <summary>设置 CodeSettings.set_RenamePairs(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.ReorderScopeDeclarationsGet">
            <summary>设置 CodeSettings.get_ReorderScopeDeclarations() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.ReorderScopeDeclarationsSetBoolean">
            <summary>设置 CodeSettings.set_ReorderScopeDeclarations(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.SetDebugLookupsStringArray">
            <summary>设置 CodeSettings.SetDebugLookups(String[] debugLookups) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.SetDebugNamespacesIEnumerableOfString">
            <summary>设置 CodeSettings.SetDebugNamespaces(IEnumerable`1&lt;String&gt; debugLookups) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.SetKnownGlobalIdentifiersIEnumerableOfString">
            <summary>设置 CodeSettings.SetKnownGlobalIdentifiers(IEnumerable`1&lt;String&gt; globalArray) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.SetKnownGlobalNamesStringArray">
            <summary>设置 CodeSettings.SetKnownGlobalNames(String[] globalArray) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.SetNoAutoRenameStringArray">
            <summary>设置 CodeSettings.SetNoAutoRename(String[] noRenameNames) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.SetNoAutoRenamesIEnumerableOfString">
            <summary>设置 CodeSettings.SetNoAutoRenames(IEnumerable`1&lt;String&gt; noRenameNames) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.SourceModeGet">
            <summary>设置 CodeSettings.get_SourceMode() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.SourceModeSetJavaScriptSourceMode">
            <summary>设置 CodeSettings.set_SourceMode(JavaScriptSourceMode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.StrictModeGet">
            <summary>设置 CodeSettings.get_StrictMode() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.StrictModeSetBoolean">
            <summary>设置 CodeSettings.set_StrictMode(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.StripDebugStatementsGet">
            <summary>设置 CodeSettings.get_StripDebugStatements() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.StripDebugStatementsSetBoolean">
            <summary>设置 CodeSettings.set_StripDebugStatements(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.SymbolsMapGet">
            <summary>设置 CodeSettings.get_SymbolsMap() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.SymbolsMapSetISourceMap">
            <summary>设置 CodeSettings.set_SymbolsMap(ISourceMap value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.AddDebugLookupString">
            <summary>设置 CodeSettings.AddDebugLookup(String debugNamespace) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.AddKnownGlobalString">
            <summary>设置 CodeSettings.AddKnownGlobal(String identifier) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.AddNoAutoRenameString">
            <summary>设置 CodeSettings.AddNoAutoRename(String noRename) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.AddRenamePairStringString">
            <summary>设置 CodeSettings.AddRenamePair(String sourceName, String newName) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.AlwaysEscapeNonAsciiGet">
            <summary>设置 CodeSettings.get_AlwaysEscapeNonAscii() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.AlwaysEscapeNonAsciiSetBoolean">
            <summary>设置 CodeSettings.set_AlwaysEscapeNonAscii(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.ClearRenamePairs">
            <summary>设置 CodeSettings.ClearRenamePairs() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.Clone">
            <summary>设置 CodeSettings.Clone() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.CollapseToLiteralGet">
            <summary>设置 CodeSettings.get_CollapseToLiteral() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.CollapseToLiteralSetBoolean">
            <summary>设置 CodeSettings.set_CollapseToLiteral(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.ConstStatementsMozillaGet">
            <summary>设置 CodeSettings.get_ConstStatementsMozilla() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.ConstStatementsMozillaSetBoolean">
            <summary>设置 CodeSettings.set_ConstStatementsMozilla(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.DebugLookupCollectionGet">
            <summary>设置 CodeSettings.get_DebugLookupCollection() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.DebugLookupListGet">
            <summary>设置 CodeSettings.get_DebugLookupList() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.DebugLookupListSetString">
            <summary>设置 CodeSettings.set_DebugLookupList(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.DebugLookupsGet">
            <summary>设置 CodeSettings.get_DebugLookups() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.ErrorIfNotInlineSafeGet">
            <summary>设置 CodeSettings.get_ErrorIfNotInlineSafe() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.ErrorIfNotInlineSafeSetBoolean">
            <summary>设置 CodeSettings.set_ErrorIfNotInlineSafe(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.EvalLiteralExpressionsGet">
            <summary>设置 CodeSettings.get_EvalLiteralExpressions() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.EvalLiteralExpressionsSetBoolean">
            <summary>设置 CodeSettings.set_EvalLiteralExpressions(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.EvalTreatmentGet">
            <summary>设置 CodeSettings.get_EvalTreatment() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.EvalTreatmentSetEvalTreatment">
            <summary>设置 CodeSettings.set_EvalTreatment(EvalTreatment value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.EvalsAreSafeGet">
            <summary>设置 CodeSettings.get_EvalsAreSafe() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.EvalsAreSafeSetBoolean">
            <summary>设置 CodeSettings.set_EvalsAreSafe(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.FormatGet">
            <summary>设置 CodeSettings.get_Format() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.FormatSetJavaScriptFormat">
            <summary>设置 CodeSettings.set_Format(JavaScriptFormat value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.GetNewNameString">
            <summary>设置 CodeSettings.GetNewName(String sourceName) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.HasRenamePairsGet">
            <summary>设置 CodeSettings.get_HasRenamePairs() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.IgnoreConditionalCompilationGet">
            <summary>设置 CodeSettings.get_IgnoreConditionalCompilation() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.IgnoreConditionalCompilationSetBoolean">
            <summary>设置 CodeSettings.set_IgnoreConditionalCompilation(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.IgnorePreprocessorDefinesGet">
            <summary>设置 CodeSettings.get_IgnorePreprocessorDefines() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.IgnorePreprocessorDefinesSetBoolean">
            <summary>设置 CodeSettings.set_IgnorePreprocessorDefines(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.InlineSafeStringsGet">
            <summary>设置 CodeSettings.get_InlineSafeStrings() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.InlineSafeStringsSetBoolean">
            <summary>设置 CodeSettings.set_InlineSafeStrings(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.IsModificationAllowedTreeModifications">
            <summary>设置 CodeSettings.IsModificationAllowed(TreeModifications modification) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.KnownGlobalCollectionGet">
            <summary>设置 CodeSettings.get_KnownGlobalCollection() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.KnownGlobalNamesGet">
            <summary>设置 CodeSettings.get_KnownGlobalNames() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.KnownGlobalNamesListGet">
            <summary>设置 CodeSettings.get_KnownGlobalNamesList() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.KnownGlobalNamesListSetString">
            <summary>设置 CodeSettings.set_KnownGlobalNamesList(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.LocalRenamingGet">
            <summary>设置 CodeSettings.get_LocalRenaming() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.LocalRenamingSetLocalRenaming">
            <summary>设置 CodeSettings.set_LocalRenaming(LocalRenaming value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.MacSafariQuirksGet">
            <summary>设置 CodeSettings.get_MacSafariQuirks() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.MacSafariQuirksSetBoolean">
            <summary>设置 CodeSettings.set_MacSafariQuirks(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.ManualRenamesPropertiesGet">
            <summary>设置 CodeSettings.get_ManualRenamesProperties() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.ManualRenamesPropertiesSetBoolean">
            <summary>设置 CodeSettings.set_ManualRenamesProperties(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.MinifyCodeGet">
            <summary>设置 CodeSettings.get_MinifyCode() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.MinifyCodeSetBoolean">
            <summary>设置 CodeSettings.set_MinifyCode(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.NoAutoRenameCollectionGet">
            <summary>设置 CodeSettings.get_NoAutoRenameCollection() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.NoAutoRenameIdentifiersGet">
            <summary>设置 CodeSettings.get_NoAutoRenameIdentifiers() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.NoAutoRenameListGet">
            <summary>设置 CodeSettings.get_NoAutoRenameList() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.NoAutoRenameListSetString">
            <summary>设置 CodeSettings.set_NoAutoRenameList(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.PreprocessOnlyGet">
            <summary>设置 CodeSettings.get_PreprocessOnly() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.PreprocessOnlySetBoolean">
            <summary>设置 CodeSettings.set_PreprocessOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.PreserveFunctionNamesGet">
            <summary>设置 CodeSettings.get_PreserveFunctionNames() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.PreserveFunctionNamesSetBoolean">
            <summary>设置 CodeSettings.set_PreserveFunctionNames(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.PreserveImportantCommentsGet">
            <summary>设置 CodeSettings.get_PreserveImportantComments() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.PreserveImportantCommentsSetBoolean">
            <summary>设置 CodeSettings.set_PreserveImportantComments(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.QuoteObjectLiteralPropertiesGet">
            <summary>设置 CodeSettings.get_QuoteObjectLiteralProperties() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.QuoteObjectLiteralPropertiesSetBoolean">
            <summary>设置 CodeSettings.set_QuoteObjectLiteralProperties(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.RemoveFunctionExpressionNamesGet">
            <summary>设置 CodeSettings.get_RemoveFunctionExpressionNames() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.RemoveFunctionExpressionNamesSetBoolean">
            <summary>设置 CodeSettings.set_RemoveFunctionExpressionNames(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.RemoveUnneededCodeGet">
            <summary>设置 CodeSettings.get_RemoveUnneededCode() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.RemoveUnneededCodeSetBoolean">
            <summary>设置 CodeSettings.set_RemoveUnneededCode(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.RenamePairsGet">
            <summary>设置 CodeSettings.get_RenamePairs() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.RenamePairsSetString">
            <summary>设置 CodeSettings.set_RenamePairs(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.ReorderScopeDeclarationsGet">
            <summary>设置 CodeSettings.get_ReorderScopeDeclarations() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.ReorderScopeDeclarationsSetBoolean">
            <summary>设置 CodeSettings.set_ReorderScopeDeclarations(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.SetDebugLookupsStringArray">
            <summary>设置 CodeSettings.SetDebugLookups(String[] debugLookups) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.SetDebugNamespacesIEnumerableOfString">
            <summary>设置 CodeSettings.SetDebugNamespaces(IEnumerable`1&lt;String&gt; debugLookups) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.SetKnownGlobalIdentifiersIEnumerableOfString">
            <summary>设置 CodeSettings.SetKnownGlobalIdentifiers(IEnumerable`1&lt;String&gt; globalArray) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.SetKnownGlobalNamesStringArray">
            <summary>设置 CodeSettings.SetKnownGlobalNames(String[] globalArray) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.SetNoAutoRenameStringArray">
            <summary>设置 CodeSettings.SetNoAutoRename(String[] noRenameNames) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.SetNoAutoRenamesIEnumerableOfString">
            <summary>设置 CodeSettings.SetNoAutoRenames(IEnumerable`1&lt;String&gt; noRenameNames) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.SourceModeGet">
            <summary>设置 CodeSettings.get_SourceMode() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.SourceModeSetJavaScriptSourceMode">
            <summary>设置 CodeSettings.set_SourceMode(JavaScriptSourceMode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.StrictModeGet">
            <summary>设置 CodeSettings.get_StrictMode() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.StrictModeSetBoolean">
            <summary>设置 CodeSettings.set_StrictMode(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.StripDebugStatementsGet">
            <summary>设置 CodeSettings.get_StripDebugStatements() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.StripDebugStatementsSetBoolean">
            <summary>设置 CodeSettings.set_StripDebugStatements(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.SymbolsMapGet">
            <summary>设置 CodeSettings.get_SymbolsMap() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCodeSettings.AllInstances.SymbolsMapSetISourceMap">
            <summary>设置 CodeSettings.set_SymbolsMap(ISourceMap value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimColorSlice">
            <summary>Microsoft.Ajax.Utilities.ColorSlice 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimColorSlice.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimColorSlice.#ctor(Microsoft.Ajax.Utilities.ColorSlice)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimColorSlice.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimColorSlice.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimColorSlice.AllColorNamesGet">
            <summary>设置 ColorSlice.get_AllColorNames() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimColorSlice.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimColorSlice.Constructor">
            <summary>设置 ColorSlice.ColorSlice() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimColorSlice.HexShorterThanNameGet">
            <summary>设置 ColorSlice.get_HexShorterThanName() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimColorSlice.NameShorterThanHexGet">
            <summary>设置 ColorSlice.get_NameShorterThanHex() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimColorSlice.StrictHexShorterThanNameAndAllNonStrictGet">
            <summary>设置 ColorSlice.get_StrictHexShorterThanNameAndAllNonStrict() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimColorSlice.StrictNameShorterThanHexGet">
            <summary>设置 ColorSlice.get_StrictNameShorterThanHex() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimColorSlice.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimCommaOperator">
            <summary>Microsoft.Ajax.Utilities.CommaOperator 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCommaOperator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCommaOperator.#ctor(Microsoft.Ajax.Utilities.CommaOperator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCommaOperator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCommaOperator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommaOperator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommaOperator.CombineWithCommaContextJSParserAstNodeAstNode">
            <summary>设置 CommaOperator.CombineWithComma(Context context, JSParser parser, AstNode operand1, AstNode operand2) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommaOperator.ConstructorContextJSParser">
            <summary>设置 CommaOperator.CommaOperator(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimCommaOperator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings">
            <summary>Microsoft.Ajax.Utilities.CommonSettings 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.#ctor(Microsoft.Ajax.Utilities.CommonSettings)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AddResourceStringsIEnumerableOfResourceStrings">
            <summary>设置 CommonSettings.AddResourceStrings(IEnumerable`1&lt;ResourceStrings&gt; collection) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AddResourceStringsResourceStrings">
            <summary>设置 CommonSettings.AddResourceStrings(ResourceStrings resourceStrings) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllowEmbeddedAspNetBlocksGet">
            <summary>设置 CommonSettings.get_AllowEmbeddedAspNetBlocks() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllowEmbeddedAspNetBlocksSetBoolean">
            <summary>设置 CommonSettings.set_AllowEmbeddedAspNetBlocks(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.BlocksStartOnSameLineGet">
            <summary>设置 CommonSettings.get_BlocksStartOnSameLine() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.BlocksStartOnSameLineSetBlockStart">
            <summary>设置 CommonSettings.set_BlocksStartOnSameLine(BlockStart value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.ClearResourceStrings">
            <summary>设置 CommonSettings.ClearResourceStrings() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.Constructor">
            <summary>设置 CommonSettings.CommonSettings() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.IgnoreAllErrorsGet">
            <summary>设置 CommonSettings.get_IgnoreAllErrors() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.IgnoreAllErrorsSetBoolean">
            <summary>设置 CommonSettings.set_IgnoreAllErrors(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.IgnoreErrorCollectionGet">
            <summary>设置 CommonSettings.get_IgnoreErrorCollection() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.IgnoreErrorCollectionSetICollectionOfString">
            <summary>设置 CommonSettings.set_IgnoreErrorCollection(ICollection`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.IgnoreErrorListGet">
            <summary>设置 CommonSettings.get_IgnoreErrorList() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.IgnoreErrorListSetString">
            <summary>设置 CommonSettings.set_IgnoreErrorList(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.IgnoreErrorsGet">
            <summary>设置 CommonSettings.get_IgnoreErrors() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.Indent">
            <summary>设置 CommonSettings.Indent() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.IndentSizeGet">
            <summary>设置 CommonSettings.get_IndentSize() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.IndentSizeSetInt32">
            <summary>设置 CommonSettings.set_IndentSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.KillSwitchGet">
            <summary>设置 CommonSettings.get_KillSwitch() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.KillSwitchSetInt64">
            <summary>设置 CommonSettings.set_KillSwitch(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.LineBreakThresholdGet">
            <summary>设置 CommonSettings.get_LineBreakThreshold() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.LineBreakThresholdSetInt32">
            <summary>设置 CommonSettings.set_LineBreakThreshold(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.LineTerminatorGet">
            <summary>设置 CommonSettings.get_LineTerminator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.OutputModeGet">
            <summary>设置 CommonSettings.get_OutputMode() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.OutputModeSetOutputMode">
            <summary>设置 CommonSettings.set_OutputMode(OutputMode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.PreprocessorDefineListGet">
            <summary>设置 CommonSettings.get_PreprocessorDefineList() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.PreprocessorDefineListSetString">
            <summary>设置 CommonSettings.set_PreprocessorDefineList(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.PreprocessorDefinesGet">
            <summary>设置 CommonSettings.get_PreprocessorDefines() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.PreprocessorValuesGet">
            <summary>设置 CommonSettings.get_PreprocessorValues() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.PreprocessorValuesSetIDictionaryOfStringString">
            <summary>设置 CommonSettings.set_PreprocessorValues(IDictionary`2&lt;String,String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.RemoveResourceStringsResourceStrings">
            <summary>设置 CommonSettings.RemoveResourceStrings(ResourceStrings resourceStrings) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.ResourceStringsGet">
            <summary>设置 CommonSettings.get_ResourceStrings() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.ResourceStringsSetIListOfResourceStrings">
            <summary>设置 CommonSettings.set_ResourceStrings(IList`1&lt;ResourceStrings&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.SetIgnoreErrorsIEnumerableOfString">
            <summary>设置 CommonSettings.SetIgnoreErrors(IEnumerable`1&lt;String&gt; ignoreErrors) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.SetIgnoreErrorsStringArray">
            <summary>设置 CommonSettings.SetIgnoreErrors(String[] ignoreErrors) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.SetPreprocessorDefinesStringArray">
            <summary>设置 CommonSettings.SetPreprocessorDefines(String[] definedNames) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.SetPreprocessorValuesIDictionaryOfStringString">
            <summary>设置 CommonSettings.SetPreprocessorValues(IDictionary`2&lt;String,String&gt; defines) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.TabSpacesGet">
            <summary>设置 CommonSettings.get_TabSpaces() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.TermSemicolonsGet">
            <summary>设置 CommonSettings.get_TermSemicolons() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.TermSemicolonsSetBoolean">
            <summary>设置 CommonSettings.set_TermSemicolons(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.Unindent">
            <summary>设置 CommonSettings.Unindent() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.AddResourceStringsIEnumerableOfResourceStrings">
            <summary>设置 CommonSettings.AddResourceStrings(IEnumerable`1&lt;ResourceStrings&gt; collection) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.AddResourceStringsResourceStrings">
            <summary>设置 CommonSettings.AddResourceStrings(ResourceStrings resourceStrings) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.AllowEmbeddedAspNetBlocksGet">
            <summary>设置 CommonSettings.get_AllowEmbeddedAspNetBlocks() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.AllowEmbeddedAspNetBlocksSetBoolean">
            <summary>设置 CommonSettings.set_AllowEmbeddedAspNetBlocks(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.BlocksStartOnSameLineGet">
            <summary>设置 CommonSettings.get_BlocksStartOnSameLine() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.BlocksStartOnSameLineSetBlockStart">
            <summary>设置 CommonSettings.set_BlocksStartOnSameLine(BlockStart value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.ClearResourceStrings">
            <summary>设置 CommonSettings.ClearResourceStrings() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.IgnoreAllErrorsGet">
            <summary>设置 CommonSettings.get_IgnoreAllErrors() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.IgnoreAllErrorsSetBoolean">
            <summary>设置 CommonSettings.set_IgnoreAllErrors(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.IgnoreErrorCollectionGet">
            <summary>设置 CommonSettings.get_IgnoreErrorCollection() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.IgnoreErrorCollectionSetICollectionOfString">
            <summary>设置 CommonSettings.set_IgnoreErrorCollection(ICollection`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.IgnoreErrorListGet">
            <summary>设置 CommonSettings.get_IgnoreErrorList() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.IgnoreErrorListSetString">
            <summary>设置 CommonSettings.set_IgnoreErrorList(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.IgnoreErrorsGet">
            <summary>设置 CommonSettings.get_IgnoreErrors() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.Indent">
            <summary>设置 CommonSettings.Indent() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.IndentSizeGet">
            <summary>设置 CommonSettings.get_IndentSize() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.IndentSizeSetInt32">
            <summary>设置 CommonSettings.set_IndentSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.KillSwitchGet">
            <summary>设置 CommonSettings.get_KillSwitch() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.KillSwitchSetInt64">
            <summary>设置 CommonSettings.set_KillSwitch(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.LineBreakThresholdGet">
            <summary>设置 CommonSettings.get_LineBreakThreshold() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.LineBreakThresholdSetInt32">
            <summary>设置 CommonSettings.set_LineBreakThreshold(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.LineTerminatorGet">
            <summary>设置 CommonSettings.get_LineTerminator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.OutputModeGet">
            <summary>设置 CommonSettings.get_OutputMode() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.OutputModeSetOutputMode">
            <summary>设置 CommonSettings.set_OutputMode(OutputMode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.PreprocessorDefineListGet">
            <summary>设置 CommonSettings.get_PreprocessorDefineList() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.PreprocessorDefineListSetString">
            <summary>设置 CommonSettings.set_PreprocessorDefineList(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.PreprocessorDefinesGet">
            <summary>设置 CommonSettings.get_PreprocessorDefines() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.PreprocessorValuesGet">
            <summary>设置 CommonSettings.get_PreprocessorValues() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.PreprocessorValuesSetIDictionaryOfStringString">
            <summary>设置 CommonSettings.set_PreprocessorValues(IDictionary`2&lt;String,String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.RemoveResourceStringsResourceStrings">
            <summary>设置 CommonSettings.RemoveResourceStrings(ResourceStrings resourceStrings) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.ResourceStringsGet">
            <summary>设置 CommonSettings.get_ResourceStrings() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.ResourceStringsSetIListOfResourceStrings">
            <summary>设置 CommonSettings.set_ResourceStrings(IList`1&lt;ResourceStrings&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.SetIgnoreErrorsIEnumerableOfString">
            <summary>设置 CommonSettings.SetIgnoreErrors(IEnumerable`1&lt;String&gt; ignoreErrors) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.SetIgnoreErrorsStringArray">
            <summary>设置 CommonSettings.SetIgnoreErrors(String[] ignoreErrors) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.SetPreprocessorDefinesStringArray">
            <summary>设置 CommonSettings.SetPreprocessorDefines(String[] definedNames) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.SetPreprocessorValuesIDictionaryOfStringString">
            <summary>设置 CommonSettings.SetPreprocessorValues(IDictionary`2&lt;String,String&gt; defines) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.TabSpacesGet">
            <summary>设置 CommonSettings.get_TabSpaces() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.TermSemicolonsGet">
            <summary>设置 CommonSettings.get_TermSemicolons() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.TermSemicolonsSetBoolean">
            <summary>设置 CommonSettings.set_TermSemicolons(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCommonSettings.AllInstances.Unindent">
            <summary>设置 CommonSettings.Unindent() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimConditional">
            <summary>Microsoft.Ajax.Utilities.Conditional 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConditional.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConditional.#ctor(Microsoft.Ajax.Utilities.Conditional)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConditional.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConditional.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.AcceptIVisitor">
            <summary>设置 Conditional.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.ChildrenGet">
            <summary>设置 Conditional.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.ColonContextGet">
            <summary>设置 Conditional.get_ColonContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.ColonContextSetContext">
            <summary>设置 Conditional.set_ColonContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.ConditionGet">
            <summary>设置 Conditional.get_Condition() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.ConditionSetAstNode">
            <summary>设置 Conditional.set_Condition(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.ConstructorContextJSParser">
            <summary>设置 Conditional.Conditional(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.FalseExpressionGet">
            <summary>设置 Conditional.get_FalseExpression() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.FalseExpressionSetAstNode">
            <summary>设置 Conditional.set_FalseExpression(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.FindPrimitiveType">
            <summary>设置 Conditional.FindPrimitiveType() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.IsEquivalentToAstNode">
            <summary>设置 Conditional.IsEquivalentTo(AstNode otherNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.LeftHandSideGet">
            <summary>设置 Conditional.get_LeftHandSide() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.PrecedenceGet">
            <summary>设置 Conditional.get_Precedence() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.QuestionContextGet">
            <summary>设置 Conditional.get_QuestionContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.QuestionContextSetContext">
            <summary>设置 Conditional.set_QuestionContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.ReplaceChildAstNodeAstNode">
            <summary>设置 Conditional.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.SwapBranches">
            <summary>设置 Conditional.SwapBranches() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.TrueExpressionGet">
            <summary>设置 Conditional.get_TrueExpression() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.TrueExpressionSetAstNode">
            <summary>设置 Conditional.set_TrueExpression(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional._set_Conditionb__0AstNode">
            <summary>设置 Conditional.&lt;set_Condition&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional._set_Conditionb__1AstNode">
            <summary>设置 Conditional.&lt;set_Condition&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional._set_FalseExpressionb__4AstNode">
            <summary>设置 Conditional.&lt;set_FalseExpression&gt;b__4(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional._set_FalseExpressionb__5AstNode">
            <summary>设置 Conditional.&lt;set_FalseExpression&gt;b__5(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional._set_TrueExpressionb__2AstNode">
            <summary>设置 Conditional.&lt;set_TrueExpression&gt;b__2(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional._set_TrueExpressionb__3AstNode">
            <summary>设置 Conditional.&lt;set_TrueExpression&gt;b__3(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimConditional.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.AllInstances.AcceptIVisitor">
            <summary>设置 Conditional.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.AllInstances.ChildrenGet">
            <summary>设置 Conditional.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.AllInstances.ColonContextGet">
            <summary>设置 Conditional.get_ColonContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.AllInstances.ColonContextSetContext">
            <summary>设置 Conditional.set_ColonContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.AllInstances.ConditionGet">
            <summary>设置 Conditional.get_Condition() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.AllInstances.ConditionSetAstNode">
            <summary>设置 Conditional.set_Condition(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.AllInstances.FalseExpressionGet">
            <summary>设置 Conditional.get_FalseExpression() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.AllInstances.FalseExpressionSetAstNode">
            <summary>设置 Conditional.set_FalseExpression(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.AllInstances.FindPrimitiveType">
            <summary>设置 Conditional.FindPrimitiveType() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.AllInstances.IsEquivalentToAstNode">
            <summary>设置 Conditional.IsEquivalentTo(AstNode otherNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.AllInstances.LeftHandSideGet">
            <summary>设置 Conditional.get_LeftHandSide() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.AllInstances.PrecedenceGet">
            <summary>设置 Conditional.get_Precedence() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.AllInstances.QuestionContextGet">
            <summary>设置 Conditional.get_QuestionContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.AllInstances.QuestionContextSetContext">
            <summary>设置 Conditional.set_QuestionContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.AllInstances.ReplaceChildAstNodeAstNode">
            <summary>设置 Conditional.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.AllInstances.SwapBranches">
            <summary>设置 Conditional.SwapBranches() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.AllInstances.TrueExpressionGet">
            <summary>设置 Conditional.get_TrueExpression() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.AllInstances.TrueExpressionSetAstNode">
            <summary>设置 Conditional.set_TrueExpression(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.AllInstances._set_Conditionb__0AstNode">
            <summary>设置 Conditional.&lt;set_Condition&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.AllInstances._set_Conditionb__1AstNode">
            <summary>设置 Conditional.&lt;set_Condition&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.AllInstances._set_FalseExpressionb__4AstNode">
            <summary>设置 Conditional.&lt;set_FalseExpression&gt;b__4(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.AllInstances._set_FalseExpressionb__5AstNode">
            <summary>设置 Conditional.&lt;set_FalseExpression&gt;b__5(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.AllInstances._set_TrueExpressionb__2AstNode">
            <summary>设置 Conditional.&lt;set_TrueExpression&gt;b__2(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditional.AllInstances._set_TrueExpressionb__3AstNode">
            <summary>设置 Conditional.&lt;set_TrueExpression&gt;b__3(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationComment">
            <summary>Microsoft.Ajax.Utilities.ConditionalCompilationComment 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationComment.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationComment.#ctor(Microsoft.Ajax.Utilities.ConditionalCompilationComment)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationComment.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationComment.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationComment.AcceptIVisitor">
            <summary>设置 ConditionalCompilationComment.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationComment.AppendAstNode">
            <summary>设置 ConditionalCompilationComment.Append(AstNode statement) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationComment.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationComment.ChildrenGet">
            <summary>设置 ConditionalCompilationComment.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationComment.ConstructorContextJSParser">
            <summary>设置 ConditionalCompilationComment.ConditionalCompilationComment(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationComment.ReplaceChildAstNodeAstNode">
            <summary>设置 ConditionalCompilationComment.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationComment.RequiresSeparatorGet">
            <summary>设置 ConditionalCompilationComment.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationComment.StatementsGet">
            <summary>设置 ConditionalCompilationComment.get_Statements() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationComment.StatementsSetBlock">
            <summary>设置 ConditionalCompilationComment.set_Statements(Block value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationComment._set_Statementsb__0Block">
            <summary>设置 ConditionalCompilationComment.&lt;set_Statements&gt;b__0(Block n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationComment._set_Statementsb__1Block">
            <summary>设置 ConditionalCompilationComment.&lt;set_Statements&gt;b__1(Block n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationComment.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationComment.AllInstances.AcceptIVisitor">
            <summary>设置 ConditionalCompilationComment.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationComment.AllInstances.AppendAstNode">
            <summary>设置 ConditionalCompilationComment.Append(AstNode statement) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationComment.AllInstances.ChildrenGet">
            <summary>设置 ConditionalCompilationComment.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationComment.AllInstances.ReplaceChildAstNodeAstNode">
            <summary>设置 ConditionalCompilationComment.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationComment.AllInstances.RequiresSeparatorGet">
            <summary>设置 ConditionalCompilationComment.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationComment.AllInstances.StatementsGet">
            <summary>设置 ConditionalCompilationComment.get_Statements() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationComment.AllInstances.StatementsSetBlock">
            <summary>设置 ConditionalCompilationComment.set_Statements(Block value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationComment.AllInstances._set_Statementsb__0Block">
            <summary>设置 ConditionalCompilationComment.&lt;set_Statements&gt;b__0(Block n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationComment.AllInstances._set_Statementsb__1Block">
            <summary>设置 ConditionalCompilationComment.&lt;set_Statements&gt;b__1(Block n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationElse">
            <summary>Microsoft.Ajax.Utilities.ConditionalCompilationElse 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationElse.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationElse.#ctor(Microsoft.Ajax.Utilities.ConditionalCompilationElse)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationElse.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationElse.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationElse.AcceptIVisitor">
            <summary>设置 ConditionalCompilationElse.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationElse.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationElse.ConstructorContextJSParser">
            <summary>设置 ConditionalCompilationElse.ConditionalCompilationElse(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationElse.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationElse.AllInstances.AcceptIVisitor">
            <summary>设置 ConditionalCompilationElse.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationElseIf">
            <summary>Microsoft.Ajax.Utilities.ConditionalCompilationElseIf 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationElseIf.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationElseIf.#ctor(Microsoft.Ajax.Utilities.ConditionalCompilationElseIf)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationElseIf.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationElseIf.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationElseIf.AcceptIVisitor">
            <summary>设置 ConditionalCompilationElseIf.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationElseIf.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationElseIf.ChildrenGet">
            <summary>设置 ConditionalCompilationElseIf.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationElseIf.ConditionGet">
            <summary>设置 ConditionalCompilationElseIf.get_Condition() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationElseIf.ConditionSetAstNode">
            <summary>设置 ConditionalCompilationElseIf.set_Condition(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationElseIf.ConstructorContextJSParser">
            <summary>设置 ConditionalCompilationElseIf.ConditionalCompilationElseIf(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationElseIf.ReplaceChildAstNodeAstNode">
            <summary>设置 ConditionalCompilationElseIf.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationElseIf._set_Conditionb__0AstNode">
            <summary>设置 ConditionalCompilationElseIf.&lt;set_Condition&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationElseIf._set_Conditionb__1AstNode">
            <summary>设置 ConditionalCompilationElseIf.&lt;set_Condition&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationElseIf.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationElseIf.AllInstances.AcceptIVisitor">
            <summary>设置 ConditionalCompilationElseIf.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationElseIf.AllInstances.ChildrenGet">
            <summary>设置 ConditionalCompilationElseIf.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationElseIf.AllInstances.ConditionGet">
            <summary>设置 ConditionalCompilationElseIf.get_Condition() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationElseIf.AllInstances.ConditionSetAstNode">
            <summary>设置 ConditionalCompilationElseIf.set_Condition(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationElseIf.AllInstances.ReplaceChildAstNodeAstNode">
            <summary>设置 ConditionalCompilationElseIf.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationElseIf.AllInstances._set_Conditionb__0AstNode">
            <summary>设置 ConditionalCompilationElseIf.&lt;set_Condition&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationElseIf.AllInstances._set_Conditionb__1AstNode">
            <summary>设置 ConditionalCompilationElseIf.&lt;set_Condition&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationEnd">
            <summary>Microsoft.Ajax.Utilities.ConditionalCompilationEnd 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationEnd.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationEnd.#ctor(Microsoft.Ajax.Utilities.ConditionalCompilationEnd)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationEnd.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationEnd.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationEnd.AcceptIVisitor">
            <summary>设置 ConditionalCompilationEnd.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationEnd.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationEnd.ConstructorContextJSParser">
            <summary>设置 ConditionalCompilationEnd.ConditionalCompilationEnd(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationEnd.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationEnd.AllInstances.AcceptIVisitor">
            <summary>设置 ConditionalCompilationEnd.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationIf">
            <summary>Microsoft.Ajax.Utilities.ConditionalCompilationIf 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationIf.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationIf.#ctor(Microsoft.Ajax.Utilities.ConditionalCompilationIf)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationIf.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationIf.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationIf.AcceptIVisitor">
            <summary>设置 ConditionalCompilationIf.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationIf.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationIf.ChildrenGet">
            <summary>设置 ConditionalCompilationIf.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationIf.ConditionGet">
            <summary>设置 ConditionalCompilationIf.get_Condition() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationIf.ConditionSetAstNode">
            <summary>设置 ConditionalCompilationIf.set_Condition(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationIf.ConstructorContextJSParser">
            <summary>设置 ConditionalCompilationIf.ConditionalCompilationIf(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationIf.ReplaceChildAstNodeAstNode">
            <summary>设置 ConditionalCompilationIf.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationIf._set_Conditionb__0AstNode">
            <summary>设置 ConditionalCompilationIf.&lt;set_Condition&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationIf._set_Conditionb__1AstNode">
            <summary>设置 ConditionalCompilationIf.&lt;set_Condition&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationIf.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationIf.AllInstances.AcceptIVisitor">
            <summary>设置 ConditionalCompilationIf.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationIf.AllInstances.ChildrenGet">
            <summary>设置 ConditionalCompilationIf.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationIf.AllInstances.ConditionGet">
            <summary>设置 ConditionalCompilationIf.get_Condition() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationIf.AllInstances.ConditionSetAstNode">
            <summary>设置 ConditionalCompilationIf.set_Condition(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationIf.AllInstances.ReplaceChildAstNodeAstNode">
            <summary>设置 ConditionalCompilationIf.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationIf.AllInstances._set_Conditionb__0AstNode">
            <summary>设置 ConditionalCompilationIf.&lt;set_Condition&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationIf.AllInstances._set_Conditionb__1AstNode">
            <summary>设置 ConditionalCompilationIf.&lt;set_Condition&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationOn">
            <summary>Microsoft.Ajax.Utilities.ConditionalCompilationOn 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationOn.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationOn.#ctor(Microsoft.Ajax.Utilities.ConditionalCompilationOn)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationOn.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationOn.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationOn.AcceptIVisitor">
            <summary>设置 ConditionalCompilationOn.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationOn.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationOn.ConstructorContextJSParser">
            <summary>设置 ConditionalCompilationOn.ConditionalCompilationOn(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationOn.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationOn.AllInstances.AcceptIVisitor">
            <summary>设置 ConditionalCompilationOn.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationSet">
            <summary>Microsoft.Ajax.Utilities.ConditionalCompilationSet 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationSet.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationSet.#ctor(Microsoft.Ajax.Utilities.ConditionalCompilationSet)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationSet.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationSet.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationSet.AcceptIVisitor">
            <summary>设置 ConditionalCompilationSet.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationSet.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationSet.ChildrenGet">
            <summary>设置 ConditionalCompilationSet.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationSet.ConstructorContextJSParser">
            <summary>设置 ConditionalCompilationSet.ConditionalCompilationSet(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationSet.ReplaceChildAstNodeAstNode">
            <summary>设置 ConditionalCompilationSet.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationSet.ValueGet">
            <summary>设置 ConditionalCompilationSet.get_Value() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationSet.ValueSetAstNode">
            <summary>设置 ConditionalCompilationSet.set_Value(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationSet.VariableNameGet">
            <summary>设置 ConditionalCompilationSet.get_VariableName() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationSet.VariableNameSetString">
            <summary>设置 ConditionalCompilationSet.set_VariableName(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationSet._set_Valueb__0AstNode">
            <summary>设置 ConditionalCompilationSet.&lt;set_Value&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationSet._set_Valueb__1AstNode">
            <summary>设置 ConditionalCompilationSet.&lt;set_Value&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationSet.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationSet.AllInstances.AcceptIVisitor">
            <summary>设置 ConditionalCompilationSet.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationSet.AllInstances.ChildrenGet">
            <summary>设置 ConditionalCompilationSet.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationSet.AllInstances.ReplaceChildAstNodeAstNode">
            <summary>设置 ConditionalCompilationSet.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationSet.AllInstances.ValueGet">
            <summary>设置 ConditionalCompilationSet.get_Value() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationSet.AllInstances.ValueSetAstNode">
            <summary>设置 ConditionalCompilationSet.set_Value(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationSet.AllInstances.VariableNameGet">
            <summary>设置 ConditionalCompilationSet.get_VariableName() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationSet.AllInstances.VariableNameSetString">
            <summary>设置 ConditionalCompilationSet.set_VariableName(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationSet.AllInstances._set_Valueb__0AstNode">
            <summary>设置 ConditionalCompilationSet.&lt;set_Value&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationSet.AllInstances._set_Valueb__1AstNode">
            <summary>设置 ConditionalCompilationSet.&lt;set_Value&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationStatement">
            <summary>Microsoft.Ajax.Utilities.ConditionalCompilationStatement 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationStatement.#ctor(Microsoft.Ajax.Utilities.ConditionalCompilationStatement)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationStatement.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationStatement.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationStatement.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationStatement.ConstructorContextJSParser">
            <summary>设置 ConditionalCompilationStatement.ConditionalCompilationStatement(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationStatement.RequiresSeparatorGet">
            <summary>设置 ConditionalCompilationStatement.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationStatement.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConditionalCompilationStatement.AllInstances.RequiresSeparatorGet">
            <summary>设置 ConditionalCompilationStatement.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimConstStatement">
            <summary>Microsoft.Ajax.Utilities.ConstStatement 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConstStatement.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConstStatement.#ctor(Microsoft.Ajax.Utilities.ConstStatement)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConstStatement.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConstStatement.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConstStatement.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConstStatement.Bind(System.Collections.Generic.IEnumerable{Microsoft.Ajax.Utilities.VariableDeclaration})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstStatement.AcceptIVisitor">
            <summary>设置 ConstStatement.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstStatement.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstStatement.ConstructorContextJSParser">
            <summary>设置 ConstStatement.ConstStatement(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimConstStatement.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstStatement.AllInstances.AcceptIVisitor">
            <summary>设置 ConstStatement.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper">
            <summary>Microsoft.Ajax.Utilities.ConstantWrapper 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.#ctor(Microsoft.Ajax.Utilities.ConstantWrapper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AcceptIVisitor">
            <summary>设置 ConstantWrapper.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AddEscapeStringStringStringBuilderRef">
            <summary>设置 ConstantWrapper.AddEscape(String unescapedRun, String escapedText, StringBuilder&amp; sb) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.ConstructorObjectPrimitiveTypeContextJSParser">
            <summary>设置 ConstantWrapper.ConstantWrapper(Object value, PrimitiveType primitiveType, Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.EscapeStringStringBooleanBooleanBoolean">
            <summary>设置 ConstantWrapper.EscapeString(String text, Boolean isRegularExpression, Boolean useW3Strict, Boolean useStrict) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.FindPrimitiveType">
            <summary>设置 ConstantWrapper.FindPrimitiveType() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.IsBooleanLiteralGet">
            <summary>设置 ConstantWrapper.get_IsBooleanLiteral() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.IsConstantGet">
            <summary>设置 ConstantWrapper.get_IsConstant() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.IsEquivalentToAstNode">
            <summary>设置 ConstantWrapper.IsEquivalentTo(AstNode otherNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.IsExactIntegerGet">
            <summary>设置 ConstantWrapper.get_IsExactInteger() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.IsFiniteNumericLiteralGet">
            <summary>设置 ConstantWrapper.get_IsFiniteNumericLiteral() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.IsInfinityGet">
            <summary>设置 ConstantWrapper.get_IsInfinity() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.IsIntegerLiteralGet">
            <summary>设置 ConstantWrapper.get_IsIntegerLiteral() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.IsNaNGet">
            <summary>设置 ConstantWrapper.get_IsNaN() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.IsNegativeZeroGet">
            <summary>设置 ConstantWrapper.get_IsNegativeZero() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.IsNotOneOrPositiveZeroGet">
            <summary>设置 ConstantWrapper.get_IsNotOneOrPositiveZero() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.IsNumericLiteralGet">
            <summary>设置 ConstantWrapper.get_IsNumericLiteral() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.IsOkayToCombineGet">
            <summary>设置 ConstantWrapper.get_IsOkayToCombine() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.IsOnlyDecimalDigitsString">
            <summary>设置 ConstantWrapper.IsOnlyDecimalDigits(String text) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.IsOtherDecimalGet">
            <summary>设置 ConstantWrapper.get_IsOtherDecimal() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.IsParameterToRegExpGet">
            <summary>设置 ConstantWrapper.get_IsParameterToRegExp() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.IsParameterToRegExpSetBoolean">
            <summary>设置 ConstantWrapper.set_IsParameterToRegExp(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.IsSpecialNumericGet">
            <summary>设置 ConstantWrapper.get_IsSpecialNumeric() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.IsStringLiteralGet">
            <summary>设置 ConstantWrapper.get_IsStringLiteral() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.IsZeroGet">
            <summary>设置 ConstantWrapper.get_IsZero() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.MayHaveIssuesGet">
            <summary>设置 ConstantWrapper.get_MayHaveIssues() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.MayHaveIssuesSetBoolean">
            <summary>设置 ConstantWrapper.set_MayHaveIssues(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.NumberIsOkayToCombineDouble">
            <summary>设置 ConstantWrapper.NumberIsOkayToCombine(Double numericValue) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.OkayToDoubleQuoteString">
            <summary>设置 ConstantWrapper.OkayToDoubleQuote(String text) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.PrimitiveTypeGet">
            <summary>设置 ConstantWrapper.get_PrimitiveType() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.PrimitiveTypeSetPrimitiveType">
            <summary>设置 ConstantWrapper.set_PrimitiveType(PrimitiveType value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.StaticConstructor">
            <summary>设置 ConstantWrapper.ConstantWrapper() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.StringContainsAspNetReplacementGet">
            <summary>设置 ConstantWrapper.get_StringContainsAspNetReplacement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.ToBoolean">
            <summary>设置 ConstantWrapper.ToBoolean() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.ToInt32">
            <summary>设置 ConstantWrapper.ToInt32() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.ToInteger">
            <summary>设置 ConstantWrapper.ToInteger() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.ToNumber">
            <summary>设置 ConstantWrapper.ToNumber() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.ToString">
            <summary>设置 ConstantWrapper.ToString() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.ToUInt32">
            <summary>设置 ConstantWrapper.ToUInt32() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.ValueGet">
            <summary>设置 ConstantWrapper.get_Value() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.ValueSetObject">
            <summary>设置 ConstantWrapper.set_Value(Object value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper._IsOnlyDecimalDigitsb__0String">
            <summary>设置 ConstantWrapper.&lt;IsOnlyDecimalDigits&gt;b__0(String s) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper._IsOnlyDecimalDigitsb__1Char">
            <summary>设置 ConstantWrapper.&lt;IsOnlyDecimalDigits&gt;b__1(Char c) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AllInstances.AcceptIVisitor">
            <summary>设置 ConstantWrapper.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AllInstances.FindPrimitiveType">
            <summary>设置 ConstantWrapper.FindPrimitiveType() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AllInstances.IsBooleanLiteralGet">
            <summary>设置 ConstantWrapper.get_IsBooleanLiteral() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AllInstances.IsConstantGet">
            <summary>设置 ConstantWrapper.get_IsConstant() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AllInstances.IsEquivalentToAstNode">
            <summary>设置 ConstantWrapper.IsEquivalentTo(AstNode otherNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AllInstances.IsExactIntegerGet">
            <summary>设置 ConstantWrapper.get_IsExactInteger() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AllInstances.IsFiniteNumericLiteralGet">
            <summary>设置 ConstantWrapper.get_IsFiniteNumericLiteral() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AllInstances.IsInfinityGet">
            <summary>设置 ConstantWrapper.get_IsInfinity() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AllInstances.IsIntegerLiteralGet">
            <summary>设置 ConstantWrapper.get_IsIntegerLiteral() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AllInstances.IsNaNGet">
            <summary>设置 ConstantWrapper.get_IsNaN() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AllInstances.IsNegativeZeroGet">
            <summary>设置 ConstantWrapper.get_IsNegativeZero() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AllInstances.IsNotOneOrPositiveZeroGet">
            <summary>设置 ConstantWrapper.get_IsNotOneOrPositiveZero() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AllInstances.IsNumericLiteralGet">
            <summary>设置 ConstantWrapper.get_IsNumericLiteral() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AllInstances.IsOkayToCombineGet">
            <summary>设置 ConstantWrapper.get_IsOkayToCombine() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AllInstances.IsOtherDecimalGet">
            <summary>设置 ConstantWrapper.get_IsOtherDecimal() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AllInstances.IsParameterToRegExpGet">
            <summary>设置 ConstantWrapper.get_IsParameterToRegExp() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AllInstances.IsParameterToRegExpSetBoolean">
            <summary>设置 ConstantWrapper.set_IsParameterToRegExp(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AllInstances.IsSpecialNumericGet">
            <summary>设置 ConstantWrapper.get_IsSpecialNumeric() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AllInstances.IsStringLiteralGet">
            <summary>设置 ConstantWrapper.get_IsStringLiteral() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AllInstances.IsZeroGet">
            <summary>设置 ConstantWrapper.get_IsZero() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AllInstances.MayHaveIssuesGet">
            <summary>设置 ConstantWrapper.get_MayHaveIssues() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AllInstances.MayHaveIssuesSetBoolean">
            <summary>设置 ConstantWrapper.set_MayHaveIssues(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AllInstances.PrimitiveTypeGet">
            <summary>设置 ConstantWrapper.get_PrimitiveType() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AllInstances.PrimitiveTypeSetPrimitiveType">
            <summary>设置 ConstantWrapper.set_PrimitiveType(PrimitiveType value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AllInstances.StringContainsAspNetReplacementGet">
            <summary>设置 ConstantWrapper.get_StringContainsAspNetReplacement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AllInstances.ToBoolean">
            <summary>设置 ConstantWrapper.ToBoolean() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AllInstances.ToInt32">
            <summary>设置 ConstantWrapper.ToInt32() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AllInstances.ToInteger">
            <summary>设置 ConstantWrapper.ToInteger() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AllInstances.ToNumber">
            <summary>设置 ConstantWrapper.ToNumber() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AllInstances.ToString01">
            <summary>设置 ConstantWrapper.ToString() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AllInstances.ToUInt32">
            <summary>设置 ConstantWrapper.ToUInt32() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AllInstances.ValueGet">
            <summary>设置 ConstantWrapper.get_Value() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapper.AllInstances.ValueSetObject">
            <summary>设置 ConstantWrapper.set_Value(Object value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapperPP">
            <summary>Microsoft.Ajax.Utilities.ConstantWrapperPP 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapperPP.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapperPP.#ctor(Microsoft.Ajax.Utilities.ConstantWrapperPP)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapperPP.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapperPP.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapperPP.AcceptIVisitor">
            <summary>设置 ConstantWrapperPP.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapperPP.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapperPP.ConstructorContextJSParser">
            <summary>设置 ConstantWrapperPP.ConstantWrapperPP(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapperPP.ForceCommentsGet">
            <summary>设置 ConstantWrapperPP.get_ForceComments() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapperPP.ForceCommentsSetBoolean">
            <summary>设置 ConstantWrapperPP.set_ForceComments(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapperPP.VarNameGet">
            <summary>设置 ConstantWrapperPP.get_VarName() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapperPP.VarNameSetString">
            <summary>设置 ConstantWrapperPP.set_VarName(String value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapperPP.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapperPP.AllInstances.AcceptIVisitor">
            <summary>设置 ConstantWrapperPP.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapperPP.AllInstances.ForceCommentsGet">
            <summary>设置 ConstantWrapperPP.get_ForceComments() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapperPP.AllInstances.ForceCommentsSetBoolean">
            <summary>设置 ConstantWrapperPP.set_ForceComments(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapperPP.AllInstances.VarNameGet">
            <summary>设置 ConstantWrapperPP.get_VarName() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimConstantWrapperPP.AllInstances.VarNameSetString">
            <summary>设置 ConstantWrapperPP.set_VarName(String value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimContext">
            <summary>Microsoft.Ajax.Utilities.Context 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimContext.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimContext.#ctor(Microsoft.Ajax.Utilities.Context)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimContext.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimContext.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.ChangeFileContextString">
            <summary>设置 Context.ChangeFileContext(String fileContext) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.Clone">
            <summary>设置 Context.Clone() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.CodeGet">
            <summary>设置 Context.get_Code() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.CombineWithContext">
            <summary>设置 Context.CombineWith(Context other) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.ConstructorDocumentContext">
            <summary>设置 Context.Context(DocumentContext document) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.ConstructorDocumentContextInt32Int32Int32Int32Int32Int32JSToken">
            <summary>设置 Context.Context(DocumentContext document, Int32 startLineNumber, Int32 startLinePosition, Int32 startPosition, Int32 endLineNumber, Int32 endLinePosition, Int32 endPosition, JSToken token) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.ConstructorJSParser">
            <summary>设置 Context.Context(JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.DocumentGet">
            <summary>设置 Context.get_Document() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.DocumentSetDocumentContext">
            <summary>设置 Context.set_Document(DocumentContext value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.EndColumnGet">
            <summary>设置 Context.get_EndColumn() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.EndLineNumberGet">
            <summary>设置 Context.get_EndLineNumber() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.EndLineNumberSetInt32">
            <summary>设置 Context.set_EndLineNumber(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.EndLinePositionGet">
            <summary>设置 Context.get_EndLinePosition() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.EndLinePositionSetInt32">
            <summary>设置 Context.set_EndLinePosition(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.EndPositionGet">
            <summary>设置 Context.get_EndPosition() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.EndPositionSetInt32">
            <summary>设置 Context.set_EndPosition(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.FlattenToEnd">
            <summary>设置 Context.FlattenToEnd() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.FlattenToStart">
            <summary>设置 Context.FlattenToStart() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.HandleErrorJSError">
            <summary>设置 Context.HandleError(JSError errorId) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.HandleErrorJSErrorBoolean">
            <summary>设置 Context.HandleError(JSError errorId, Boolean forceToError) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.HasCodeGet">
            <summary>设置 Context.get_HasCode() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.IsBeforeContext">
            <summary>设置 Context.IsBefore(Context other) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.OutputColumnGet">
            <summary>设置 Context.get_OutputColumn() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.OutputColumnSetInt32">
            <summary>设置 Context.set_OutputColumn(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.OutputLineGet">
            <summary>设置 Context.get_OutputLine() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.OutputLineSetInt32">
            <summary>设置 Context.set_OutputLine(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.ReportUndefinedLookup">
            <summary>设置 Context.ReportUndefined(Lookup lookup) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.SourceOffsetEndGet">
            <summary>设置 Context.get_SourceOffsetEnd() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.SourceOffsetEndSetInt32">
            <summary>设置 Context.set_SourceOffsetEnd(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.SourceOffsetStartGet">
            <summary>设置 Context.get_SourceOffsetStart() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.SourceOffsetStartSetInt32">
            <summary>设置 Context.set_SourceOffsetStart(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.StartColumnGet">
            <summary>设置 Context.get_StartColumn() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.StartLineNumberGet">
            <summary>设置 Context.get_StartLineNumber() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.StartLineNumberSetInt32">
            <summary>设置 Context.set_StartLineNumber(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.StartLinePositionGet">
            <summary>设置 Context.get_StartLinePosition() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.StartLinePositionSetInt32">
            <summary>设置 Context.set_StartLinePosition(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.StartPositionGet">
            <summary>设置 Context.get_StartPosition() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.StartPositionSetInt32">
            <summary>设置 Context.set_StartPosition(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.ToString">
            <summary>设置 Context.ToString() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.TokenGet">
            <summary>设置 Context.get_Token() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.TokenSetJSToken">
            <summary>设置 Context.set_Token(JSToken value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.UpdateWithContext">
            <summary>设置 Context.UpdateWith(Context other) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext._ctorb__0String">
            <summary>设置 Context.&lt;.ctor&gt;b__0(String s) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.ChangeFileContextString">
            <summary>设置 Context.ChangeFileContext(String fileContext) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.Clone">
            <summary>设置 Context.Clone() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.CodeGet">
            <summary>设置 Context.get_Code() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.CombineWithContext">
            <summary>设置 Context.CombineWith(Context other) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.DocumentGet">
            <summary>设置 Context.get_Document() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.DocumentSetDocumentContext">
            <summary>设置 Context.set_Document(DocumentContext value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.EndColumnGet">
            <summary>设置 Context.get_EndColumn() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.EndLineNumberGet">
            <summary>设置 Context.get_EndLineNumber() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.EndLineNumberSetInt32">
            <summary>设置 Context.set_EndLineNumber(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.EndLinePositionGet">
            <summary>设置 Context.get_EndLinePosition() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.EndLinePositionSetInt32">
            <summary>设置 Context.set_EndLinePosition(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.EndPositionGet">
            <summary>设置 Context.get_EndPosition() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.EndPositionSetInt32">
            <summary>设置 Context.set_EndPosition(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.FlattenToEnd">
            <summary>设置 Context.FlattenToEnd() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.FlattenToStart">
            <summary>设置 Context.FlattenToStart() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.HandleErrorJSError">
            <summary>设置 Context.HandleError(JSError errorId) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.HandleErrorJSErrorBoolean">
            <summary>设置 Context.HandleError(JSError errorId, Boolean forceToError) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.HasCodeGet">
            <summary>设置 Context.get_HasCode() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.IsBeforeContext">
            <summary>设置 Context.IsBefore(Context other) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.OutputColumnGet">
            <summary>设置 Context.get_OutputColumn() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.OutputColumnSetInt32">
            <summary>设置 Context.set_OutputColumn(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.OutputLineGet">
            <summary>设置 Context.get_OutputLine() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.OutputLineSetInt32">
            <summary>设置 Context.set_OutputLine(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.ReportUndefinedLookup">
            <summary>设置 Context.ReportUndefined(Lookup lookup) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.SourceOffsetEndGet">
            <summary>设置 Context.get_SourceOffsetEnd() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.SourceOffsetEndSetInt32">
            <summary>设置 Context.set_SourceOffsetEnd(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.SourceOffsetStartGet">
            <summary>设置 Context.get_SourceOffsetStart() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.SourceOffsetStartSetInt32">
            <summary>设置 Context.set_SourceOffsetStart(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.StartColumnGet">
            <summary>设置 Context.get_StartColumn() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.StartLineNumberGet">
            <summary>设置 Context.get_StartLineNumber() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.StartLineNumberSetInt32">
            <summary>设置 Context.set_StartLineNumber(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.StartLinePositionGet">
            <summary>设置 Context.get_StartLinePosition() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.StartLinePositionSetInt32">
            <summary>设置 Context.set_StartLinePosition(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.StartPositionGet">
            <summary>设置 Context.get_StartPosition() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.StartPositionSetInt32">
            <summary>设置 Context.set_StartPosition(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.ToString01">
            <summary>设置 Context.ToString() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.TokenGet">
            <summary>设置 Context.get_Token() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.TokenSetJSToken">
            <summary>设置 Context.set_Token(JSToken value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContext.AllInstances.UpdateWithContext">
            <summary>设置 Context.UpdateWith(Context other) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimContextError">
            <summary>Microsoft.Ajax.Utilities.ContextError 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimContextError.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimContextError.#ctor(Microsoft.Ajax.Utilities.ContextError)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimContextError.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimContextError.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.ConstructorBooleanInt32StringStringStringStringInt32Int32Int32Int32String">
            <summary>设置 ContextError.ContextError(Boolean isError, Int32 severity, String subcategory, String errorCode, String helpKeyword, String file, Int32 startLine, Int32 startColumn, Int32 endLine, Int32 endColumn, String message) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.EndColumnGet">
            <summary>设置 ContextError.get_EndColumn() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.EndColumnSetInt32">
            <summary>设置 ContextError.set_EndColumn(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.EndLineGet">
            <summary>设置 ContextError.get_EndLine() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.EndLineSetInt32">
            <summary>设置 ContextError.set_EndLine(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.ErrorCodeGet">
            <summary>设置 ContextError.get_ErrorCode() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.ErrorCodeSetString">
            <summary>设置 ContextError.set_ErrorCode(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.FileGet">
            <summary>设置 ContextError.get_File() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.FileSetString">
            <summary>设置 ContextError.set_File(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.HelpKeywordGet">
            <summary>设置 ContextError.get_HelpKeyword() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.HelpKeywordSetString">
            <summary>设置 ContextError.set_HelpKeyword(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.IsErrorGet">
            <summary>设置 ContextError.get_IsError() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.IsErrorSetBoolean">
            <summary>设置 ContextError.set_IsError(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.MessageGet">
            <summary>设置 ContextError.get_Message() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.MessageSetString">
            <summary>设置 ContextError.set_Message(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.SeverityGet">
            <summary>设置 ContextError.get_Severity() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.SeveritySetInt32">
            <summary>设置 ContextError.set_Severity(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.StartColumnGet">
            <summary>设置 ContextError.get_StartColumn() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.StartColumnSetInt32">
            <summary>设置 ContextError.set_StartColumn(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.StartLineGet">
            <summary>设置 ContextError.get_StartLine() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.StartLineSetInt32">
            <summary>设置 ContextError.set_StartLine(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.SubcategoryGet">
            <summary>设置 ContextError.get_Subcategory() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.SubcategorySetString">
            <summary>设置 ContextError.set_Subcategory(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.ToString">
            <summary>设置 ContextError.ToString() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimContextError.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.AllInstances.EndColumnGet">
            <summary>设置 ContextError.get_EndColumn() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.AllInstances.EndColumnSetInt32">
            <summary>设置 ContextError.set_EndColumn(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.AllInstances.EndLineGet">
            <summary>设置 ContextError.get_EndLine() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.AllInstances.EndLineSetInt32">
            <summary>设置 ContextError.set_EndLine(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.AllInstances.ErrorCodeGet">
            <summary>设置 ContextError.get_ErrorCode() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.AllInstances.ErrorCodeSetString">
            <summary>设置 ContextError.set_ErrorCode(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.AllInstances.FileGet">
            <summary>设置 ContextError.get_File() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.AllInstances.FileSetString">
            <summary>设置 ContextError.set_File(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.AllInstances.HelpKeywordGet">
            <summary>设置 ContextError.get_HelpKeyword() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.AllInstances.HelpKeywordSetString">
            <summary>设置 ContextError.set_HelpKeyword(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.AllInstances.IsErrorGet">
            <summary>设置 ContextError.get_IsError() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.AllInstances.IsErrorSetBoolean">
            <summary>设置 ContextError.set_IsError(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.AllInstances.MessageGet">
            <summary>设置 ContextError.get_Message() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.AllInstances.MessageSetString">
            <summary>设置 ContextError.set_Message(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.AllInstances.SeverityGet">
            <summary>设置 ContextError.get_Severity() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.AllInstances.SeveritySetInt32">
            <summary>设置 ContextError.set_Severity(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.AllInstances.StartColumnGet">
            <summary>设置 ContextError.get_StartColumn() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.AllInstances.StartColumnSetInt32">
            <summary>设置 ContextError.set_StartColumn(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.AllInstances.StartLineGet">
            <summary>设置 ContextError.get_StartLine() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.AllInstances.StartLineSetInt32">
            <summary>设置 ContextError.set_StartLine(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.AllInstances.SubcategoryGet">
            <summary>设置 ContextError.get_Subcategory() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.AllInstances.SubcategorySetString">
            <summary>设置 ContextError.set_Subcategory(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContextError.AllInstances.ToString01">
            <summary>设置 ContextError.ToString() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimContinueNode">
            <summary>Microsoft.Ajax.Utilities.ContinueNode 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimContinueNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimContinueNode.#ctor(Microsoft.Ajax.Utilities.ContinueNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimContinueNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimContinueNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContinueNode.AcceptIVisitor">
            <summary>设置 ContinueNode.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContinueNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContinueNode.ConstructorContextJSParser">
            <summary>设置 ContinueNode.ContinueNode(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContinueNode.LabelContextGet">
            <summary>设置 ContinueNode.get_LabelContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContinueNode.LabelContextSetContext">
            <summary>设置 ContinueNode.set_LabelContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContinueNode.LabelGet">
            <summary>设置 ContinueNode.get_Label() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContinueNode.LabelSetString">
            <summary>设置 ContinueNode.set_Label(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContinueNode.NestLevelGet">
            <summary>设置 ContinueNode.get_NestLevel() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContinueNode.NestLevelSetInt32">
            <summary>设置 ContinueNode.set_NestLevel(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimContinueNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContinueNode.AllInstances.AcceptIVisitor">
            <summary>设置 ContinueNode.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContinueNode.AllInstances.LabelContextGet">
            <summary>设置 ContinueNode.get_LabelContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContinueNode.AllInstances.LabelContextSetContext">
            <summary>设置 ContinueNode.set_LabelContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContinueNode.AllInstances.LabelGet">
            <summary>设置 ContinueNode.get_Label() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContinueNode.AllInstances.LabelSetString">
            <summary>设置 ContinueNode.set_Label(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContinueNode.AllInstances.NestLevelGet">
            <summary>设置 ContinueNode.get_NestLevel() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimContinueNode.AllInstances.NestLevelSetInt32">
            <summary>设置 ContinueNode.set_NestLevel(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimCrunchEnumerator">
            <summary>Microsoft.Ajax.Utilities.CrunchEnumerator 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCrunchEnumerator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCrunchEnumerator.#ctor(Microsoft.Ajax.Utilities.CrunchEnumerator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCrunchEnumerator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCrunchEnumerator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCrunchEnumerator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCrunchEnumerator.ConstructorIEnumerableOfString">
            <summary>设置 CrunchEnumerator.CrunchEnumerator(IEnumerable`1&lt;String&gt; avoidNames) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCrunchEnumerator.CrunchedLabelInt32">
            <summary>设置 CrunchEnumerator.CrunchedLabel(Int32 nestLevel) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCrunchEnumerator.CurrentNameGet">
            <summary>设置 CrunchEnumerator.get_CurrentName() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCrunchEnumerator.FirstLettersGet">
            <summary>设置 CrunchEnumerator.get_FirstLetters() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCrunchEnumerator.FirstLettersSetString">
            <summary>设置 CrunchEnumerator.set_FirstLetters(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCrunchEnumerator.GenerateNameFromNumberInt32">
            <summary>设置 CrunchEnumerator.GenerateNameFromNumber(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCrunchEnumerator.NextName">
            <summary>设置 CrunchEnumerator.NextName() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCrunchEnumerator.PartLettersGet">
            <summary>设置 CrunchEnumerator.get_PartLetters() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCrunchEnumerator.PartLettersSetString">
            <summary>设置 CrunchEnumerator.set_PartLetters(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCrunchEnumerator.StaticConstructor">
            <summary>设置 CrunchEnumerator.CrunchEnumerator() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimCrunchEnumerator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCrunchEnumerator.AllInstances.CurrentNameGet">
            <summary>设置 CrunchEnumerator.get_CurrentName() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCrunchEnumerator.AllInstances.NextName">
            <summary>设置 CrunchEnumerator.NextName() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimCssErrorEventArgs">
            <summary>Microsoft.Ajax.Utilities.CssErrorEventArgs 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCssErrorEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCssErrorEventArgs.#ctor(Microsoft.Ajax.Utilities.CssErrorEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCssErrorEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCssErrorEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssErrorEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssErrorEventArgs.ConstructorCssExceptionContextError">
            <summary>设置 CssErrorEventArgs.CssErrorEventArgs(CssException exc, ContextError error) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssErrorEventArgs.ErrorGet">
            <summary>设置 CssErrorEventArgs.get_Error() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssErrorEventArgs.ErrorSetContextError">
            <summary>设置 CssErrorEventArgs.set_Error(ContextError value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssErrorEventArgs.ExceptionGet">
            <summary>设置 CssErrorEventArgs.get_Exception() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssErrorEventArgs.ExceptionSetCssException">
            <summary>设置 CssErrorEventArgs.set_Exception(CssException value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimCssErrorEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssErrorEventArgs.AllInstances.ErrorGet">
            <summary>设置 CssErrorEventArgs.get_Error() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssErrorEventArgs.AllInstances.ErrorSetContextError">
            <summary>设置 CssErrorEventArgs.set_Error(ContextError value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssErrorEventArgs.AllInstances.ExceptionGet">
            <summary>设置 CssErrorEventArgs.get_Exception() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssErrorEventArgs.AllInstances.ExceptionSetCssException">
            <summary>设置 CssErrorEventArgs.set_Exception(CssException value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimCssException">
            <summary>Microsoft.Ajax.Utilities.CssException 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCssException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCssException.#ctor(Microsoft.Ajax.Utilities.CssException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCssException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCssException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssException.CharGet">
            <summary>设置 CssException.get_Char() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssException.CharSetInt32">
            <summary>设置 CssException.set_Char(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssException.ConstructorInt32StringInt32Int32Int32String">
            <summary>设置 CssException.CssException(Int32 errorNum, String source, Int32 severity, Int32 line, Int32 pos, String message) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssException.ErrorGet">
            <summary>设置 CssException.get_Error() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssException.ErrorSetInt32">
            <summary>设置 CssException.set_Error(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssException.LineGet">
            <summary>设置 CssException.get_Line() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssException.LineSetInt32">
            <summary>设置 CssException.set_Line(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssException.MessageGet">
            <summary>设置 CssException.get_Message() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssException.MessageSetString">
            <summary>设置 CssException.set_Message(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssException.OriginatorGet">
            <summary>设置 CssException.get_Originator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssException.OriginatorSetString">
            <summary>设置 CssException.set_Originator(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssException.SeverityGet">
            <summary>设置 CssException.get_Severity() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssException.SeveritySetInt32">
            <summary>设置 CssException.set_Severity(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimCssException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssException.AllInstances.CharGet">
            <summary>设置 CssException.get_Char() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssException.AllInstances.CharSetInt32">
            <summary>设置 CssException.set_Char(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssException.AllInstances.ErrorGet">
            <summary>设置 CssException.get_Error() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssException.AllInstances.ErrorSetInt32">
            <summary>设置 CssException.set_Error(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssException.AllInstances.LineGet">
            <summary>设置 CssException.get_Line() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssException.AllInstances.LineSetInt32">
            <summary>设置 CssException.set_Line(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssException.AllInstances.MessageGet">
            <summary>设置 CssException.get_Message() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssException.AllInstances.MessageSetString">
            <summary>设置 CssException.set_Message(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssException.AllInstances.OriginatorGet">
            <summary>设置 CssException.get_Originator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssException.AllInstances.OriginatorSetString">
            <summary>设置 CssException.set_Originator(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssException.AllInstances.SeverityGet">
            <summary>设置 CssException.get_Severity() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssException.AllInstances.SeveritySetInt32">
            <summary>设置 CssException.set_Severity(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimCssParser">
            <summary>Microsoft.Ajax.Utilities.CssParser 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.#ctor(Microsoft.Ajax.Utilities.CssParser)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AddNewLine">
            <summary>设置 CssParser.AddNewLine() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AppendCurrent">
            <summary>设置 CssParser.AppendCurrent() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AppendObject">
            <summary>设置 CssParser.Append(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.CommentContainsTextString">
            <summary>设置 CssParser.CommentContainsText(String comment) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.Constructor">
            <summary>设置 CssParser.CssParser() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.CrunchHexColorStringCssColorBoolean">
            <summary>设置 CssParser.CrunchHexColor(String hexColor, CssColor colorNames, Boolean noAbbr) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.CssErrorAddEventHandlerOfCssErrorEventArgs">
            <summary>设置 CssParser.add_CssError(EventHandler`1&lt;CssErrorEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.CssErrorRemoveEventHandlerOfCssErrorEventArgs">
            <summary>设置 CssParser.remove_CssError(EventHandler`1&lt;CssErrorEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.CurrentTokenTextGet">
            <summary>设置 CssParser.get_CurrentTokenText() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.EscapeCharacterStringBuilderChar">
            <summary>设置 CssParser.EscapeCharacter(StringBuilder sb, Char character) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.FileContextGet">
            <summary>设置 CssParser.get_FileContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.FileContextSetString">
            <summary>设置 CssParser.set_FileContext(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.GetRootString">
            <summary>设置 CssParser.GetRoot(String text) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.GetSeverityStringInt32">
            <summary>设置 CssParser.GetSeverityString(Int32 severity) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.HandleCharsetString">
            <summary>设置 CssParser.HandleCharset(String source) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.Indent">
            <summary>设置 CssParser.Indent() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.JSSettingsGet">
            <summary>设置 CssParser.get_JSSettings() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.JSSettingsSetCodeSettings">
            <summary>设置 CssParser.set_JSSettings(CodeSettings value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.MightContainColorNamesString">
            <summary>设置 CssParser.MightContainColorNames(String propertyName) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.NeedsSpaceAfterString">
            <summary>设置 CssParser.NeedsSpaceAfter(String text) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.NeedsSpaceBeforeString">
            <summary>设置 CssParser.NeedsSpaceBefore(String text) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.NewLine">
            <summary>设置 CssParser.NewLine() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.NextSignificantToken">
            <summary>设置 CssParser.NextSignificantToken() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.NormalizeImportantCommentString">
            <summary>设置 CssParser.NormalizeImportantComment(String source) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.NormalizedValueReplacementCommentString">
            <summary>设置 CssParser.NormalizedValueReplacementComment(String source) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.OnCssErrorCssException">
            <summary>设置 CssParser.OnCssError(CssException exception) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.ParseKeyFrameBlocks">
            <summary>设置 CssParser.ParseKeyFrameBlocks() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.ParseMediaQueryExpression">
            <summary>设置 CssParser.ParseMediaQueryExpression() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.ParseSCDOCDCComments">
            <summary>设置 CssParser.ParseSCDOCDCComments() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.ParseString">
            <summary>设置 CssParser.Parse(String source) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.ReportErrorInt32CssErrorCodeObjectArray">
            <summary>设置 CssParser.ReportError(Int32 severity, CssErrorCode errorNumber, Object[] arguments) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.SettingsGet">
            <summary>设置 CssParser.get_Settings() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.SettingsSetCssSettings">
            <summary>设置 CssParser.set_Settings(CssSettings value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.SkipIfSpace">
            <summary>设置 CssParser.SkipIfSpace() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.SkipSemicolons">
            <summary>设置 CssParser.SkipSemicolons() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.SkipSpace">
            <summary>设置 CssParser.SkipSpace() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.SkipSpaceComment">
            <summary>设置 CssParser.SkipSpaceComment() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.SkipToClose">
            <summary>设置 CssParser.SkipToClose() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.SkipToEndOfDeclaration">
            <summary>设置 CssParser.SkipToEndOfDeclaration() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.SkipToEndOfStatement">
            <summary>设置 CssParser.SkipToEndOfStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.StaticConstructor">
            <summary>设置 CssParser.CssParser() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.Unindent">
            <summary>设置 CssParser.Unindent() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.ValidateNamespaceString">
            <summary>设置 CssParser.ValidateNamespace(String namespaceIdent) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser._NeedsSpaceAfterb__aString">
            <summary>设置 CssParser.&lt;NeedsSpaceAfter&gt;b__a(String t) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser._NeedsSpaceBeforeb__8String">
            <summary>设置 CssParser.&lt;NeedsSpaceBefore&gt;b__8(String t) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AllInstances.AddNewLine">
            <summary>设置 CssParser.AddNewLine() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AllInstances.AppendCurrent">
            <summary>设置 CssParser.AppendCurrent() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AllInstances.AppendObject">
            <summary>设置 CssParser.Append(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AllInstances.CssErrorAddEventHandlerOfCssErrorEventArgs">
            <summary>设置 CssParser.add_CssError(EventHandler`1&lt;CssErrorEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AllInstances.CssErrorRemoveEventHandlerOfCssErrorEventArgs">
            <summary>设置 CssParser.remove_CssError(EventHandler`1&lt;CssErrorEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AllInstances.CurrentTokenTextGet">
            <summary>设置 CssParser.get_CurrentTokenText() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AllInstances.FileContextGet">
            <summary>设置 CssParser.get_FileContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AllInstances.FileContextSetString">
            <summary>设置 CssParser.set_FileContext(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AllInstances.HandleCharsetString">
            <summary>设置 CssParser.HandleCharset(String source) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AllInstances.Indent">
            <summary>设置 CssParser.Indent() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AllInstances.JSSettingsGet">
            <summary>设置 CssParser.get_JSSettings() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AllInstances.JSSettingsSetCodeSettings">
            <summary>设置 CssParser.set_JSSettings(CodeSettings value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AllInstances.NewLine">
            <summary>设置 CssParser.NewLine() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AllInstances.NextSignificantToken">
            <summary>设置 CssParser.NextSignificantToken() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AllInstances.NormalizeImportantCommentString">
            <summary>设置 CssParser.NormalizeImportantComment(String source) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AllInstances.OnCssErrorCssException">
            <summary>设置 CssParser.OnCssError(CssException exception) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AllInstances.ParseKeyFrameBlocks">
            <summary>设置 CssParser.ParseKeyFrameBlocks() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AllInstances.ParseMediaQueryExpression">
            <summary>设置 CssParser.ParseMediaQueryExpression() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AllInstances.ParseSCDOCDCComments">
            <summary>设置 CssParser.ParseSCDOCDCComments() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AllInstances.ParseString">
            <summary>设置 CssParser.Parse(String source) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AllInstances.ReportErrorInt32CssErrorCodeObjectArray">
            <summary>设置 CssParser.ReportError(Int32 severity, CssErrorCode errorNumber, Object[] arguments) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AllInstances.SettingsGet">
            <summary>设置 CssParser.get_Settings() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AllInstances.SettingsSetCssSettings">
            <summary>设置 CssParser.set_Settings(CssSettings value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AllInstances.SkipIfSpace">
            <summary>设置 CssParser.SkipIfSpace() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AllInstances.SkipSemicolons">
            <summary>设置 CssParser.SkipSemicolons() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AllInstances.SkipSpace">
            <summary>设置 CssParser.SkipSpace() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AllInstances.SkipSpaceComment">
            <summary>设置 CssParser.SkipSpaceComment() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AllInstances.SkipToClose">
            <summary>设置 CssParser.SkipToClose() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AllInstances.SkipToEndOfDeclaration">
            <summary>设置 CssParser.SkipToEndOfDeclaration() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AllInstances.SkipToEndOfStatement">
            <summary>设置 CssParser.SkipToEndOfStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AllInstances.Unindent">
            <summary>设置 CssParser.Unindent() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssParser.AllInstances.ValidateNamespaceString">
            <summary>设置 CssParser.ValidateNamespace(String namespaceIdent) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimCssSettings">
            <summary>Microsoft.Ajax.Utilities.CssSettings 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCssSettings.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCssSettings.#ctor(Microsoft.Ajax.Utilities.CssSettings)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCssSettings.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCssSettings.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssSettings.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssSettings.Clone">
            <summary>设置 CssSettings.Clone() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssSettings.ColorNamesGet">
            <summary>设置 CssSettings.get_ColorNames() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssSettings.ColorNamesSetCssColor">
            <summary>设置 CssSettings.set_ColorNames(CssColor value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssSettings.CommentModeGet">
            <summary>设置 CssSettings.get_CommentMode() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssSettings.CommentModeSetCssComment">
            <summary>设置 CssSettings.set_CommentMode(CssComment value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssSettings.Constructor">
            <summary>设置 CssSettings.CssSettings() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssSettings.CssTypeGet">
            <summary>设置 CssSettings.get_CssType() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssSettings.CssTypeSetCssType">
            <summary>设置 CssSettings.set_CssType(CssType value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssSettings.MinifyExpressionsGet">
            <summary>设置 CssSettings.get_MinifyExpressions() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssSettings.MinifyExpressionsSetBoolean">
            <summary>设置 CssSettings.set_MinifyExpressions(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimCssSettings.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssSettings.AllInstances.Clone">
            <summary>设置 CssSettings.Clone() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssSettings.AllInstances.ColorNamesGet">
            <summary>设置 CssSettings.get_ColorNames() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssSettings.AllInstances.ColorNamesSetCssColor">
            <summary>设置 CssSettings.set_ColorNames(CssColor value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssSettings.AllInstances.CommentModeGet">
            <summary>设置 CssSettings.get_CommentMode() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssSettings.AllInstances.CommentModeSetCssComment">
            <summary>设置 CssSettings.set_CommentMode(CssComment value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssSettings.AllInstances.CssTypeGet">
            <summary>设置 CssSettings.get_CssType() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssSettings.AllInstances.CssTypeSetCssType">
            <summary>设置 CssSettings.set_CssType(CssType value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssSettings.AllInstances.MinifyExpressionsGet">
            <summary>设置 CssSettings.get_MinifyExpressions() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCssSettings.AllInstances.MinifyExpressionsSetBoolean">
            <summary>设置 CssSettings.set_MinifyExpressions(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimCustomNode">
            <summary>Microsoft.Ajax.Utilities.CustomNode 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCustomNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCustomNode.#ctor(Microsoft.Ajax.Utilities.CustomNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCustomNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimCustomNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCustomNode.AcceptIVisitor">
            <summary>设置 CustomNode.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCustomNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCustomNode.ConstructorContextJSParser">
            <summary>设置 CustomNode.CustomNode(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCustomNode.ToCode">
            <summary>设置 CustomNode.ToCode() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimCustomNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCustomNode.AllInstances.AcceptIVisitor">
            <summary>设置 CustomNode.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimCustomNode.AllInstances.ToCode">
            <summary>设置 CustomNode.ToCode() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimDebuggerNode">
            <summary>Microsoft.Ajax.Utilities.DebuggerNode 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimDebuggerNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimDebuggerNode.#ctor(Microsoft.Ajax.Utilities.DebuggerNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimDebuggerNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimDebuggerNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDebuggerNode.AcceptIVisitor">
            <summary>设置 DebuggerNode.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDebuggerNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDebuggerNode.ConstructorContextJSParser">
            <summary>设置 DebuggerNode.DebuggerNode(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDebuggerNode.IsDebuggerStatementGet">
            <summary>设置 DebuggerNode.get_IsDebuggerStatement() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimDebuggerNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDebuggerNode.AllInstances.AcceptIVisitor">
            <summary>设置 DebuggerNode.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDebuggerNode.AllInstances.IsDebuggerStatementGet">
            <summary>设置 DebuggerNode.get_IsDebuggerStatement() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration">
            <summary>Microsoft.Ajax.Utilities.Declaration 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.#ctor(Microsoft.Ajax.Utilities.Declaration)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.Bind(System.Collections.Generic.IEnumerable{Microsoft.Ajax.Utilities.VariableDeclaration})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.AppendAstNode">
            <summary>设置 Declaration.Append(AstNode elem) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.ChildrenGet">
            <summary>设置 Declaration.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.ConstructorContextJSParser">
            <summary>设置 Declaration.Declaration(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.ContainsInOperatorGet">
            <summary>设置 Declaration.get_ContainsInOperator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.ContainsString">
            <summary>设置 Declaration.Contains(String name) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.CountGet">
            <summary>设置 Declaration.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.GetEnumerator">
            <summary>设置 Declaration.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.HandleDuplicatesString">
            <summary>设置 Declaration.HandleDuplicates(String name) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.InsertAtInt32AstNode">
            <summary>设置 Declaration.InsertAt(Int32 index, AstNode elem) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.ItemGetInt32">
            <summary>设置 Declaration.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.ItemSetInt32VariableDeclaration">
            <summary>设置 Declaration.set_Item(Int32 index, VariableDeclaration value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.RemoveAtInt32">
            <summary>设置 Declaration.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.RemoveVariableDeclaration">
            <summary>设置 Declaration.Remove(VariableDeclaration variableDeclaration) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.ReplaceChildAstNodeAstNode">
            <summary>设置 Declaration.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.ScopeGet">
            <summary>设置 Declaration.get_Scope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.ScopeSetActivationObject">
            <summary>设置 Declaration.set_Scope(ActivationObject value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 Declaration.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration._RemoveAtb__5VariableDeclaration">
            <summary>设置 Declaration.&lt;RemoveAt&gt;b__5(VariableDeclaration n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration._ReplaceChildb__1VariableDeclaration">
            <summary>设置 Declaration.&lt;ReplaceChild&gt;b__1(VariableDeclaration n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration._ReplaceChildb__2VariableDeclaration">
            <summary>设置 Declaration.&lt;ReplaceChild&gt;b__2(VariableDeclaration n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration._set_Itemb__0VariableDeclaration">
            <summary>设置 Declaration.&lt;set_Item&gt;b__0(VariableDeclaration n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.AllInstances.AppendAstNode">
            <summary>设置 Declaration.Append(AstNode elem) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.AllInstances.ChildrenGet">
            <summary>设置 Declaration.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.AllInstances.ContainsInOperatorGet">
            <summary>设置 Declaration.get_ContainsInOperator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.AllInstances.ContainsString">
            <summary>设置 Declaration.Contains(String name) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.AllInstances.CountGet">
            <summary>设置 Declaration.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.AllInstances.GetEnumerator">
            <summary>设置 Declaration.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.AllInstances.HandleDuplicatesString">
            <summary>设置 Declaration.HandleDuplicates(String name) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.AllInstances.InsertAtInt32AstNode">
            <summary>设置 Declaration.InsertAt(Int32 index, AstNode elem) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.AllInstances.ItemGetInt32">
            <summary>设置 Declaration.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.AllInstances.ItemSetInt32VariableDeclaration">
            <summary>设置 Declaration.set_Item(Int32 index, VariableDeclaration value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.AllInstances.RemoveAtInt32">
            <summary>设置 Declaration.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.AllInstances.RemoveVariableDeclaration">
            <summary>设置 Declaration.Remove(VariableDeclaration variableDeclaration) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.AllInstances.ReplaceChildAstNodeAstNode">
            <summary>设置 Declaration.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.AllInstances.ScopeGet">
            <summary>设置 Declaration.get_Scope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.AllInstances.ScopeSetActivationObject">
            <summary>设置 Declaration.set_Scope(ActivationObject value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 Declaration.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.AllInstances._RemoveAtb__5VariableDeclaration">
            <summary>设置 Declaration.&lt;RemoveAt&gt;b__5(VariableDeclaration n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.AllInstances._ReplaceChildb__1VariableDeclaration">
            <summary>设置 Declaration.&lt;ReplaceChild&gt;b__1(VariableDeclaration n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.AllInstances._ReplaceChildb__2VariableDeclaration">
            <summary>设置 Declaration.&lt;ReplaceChild&gt;b__2(VariableDeclaration n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDeclaration.AllInstances._set_Itemb__0VariableDeclaration">
            <summary>设置 Declaration.&lt;set_Item&gt;b__0(VariableDeclaration n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimDetachReferences">
            <summary>Microsoft.Ajax.Utilities.DetachReferences 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimDetachReferences.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimDetachReferences.#ctor(Microsoft.Ajax.Utilities.DetachReferences)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimDetachReferences.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimDetachReferences.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimDetachReferences.Bind(Microsoft.Ajax.Utilities.IVisitor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDetachReferences.ApplyAstNode">
            <summary>设置 DetachReferences.Apply(AstNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDetachReferences.ApplyAstNodeArray">
            <summary>设置 DetachReferences.Apply(AstNode[] nodes) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDetachReferences.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDetachReferences.Constructor">
            <summary>设置 DetachReferences.DetachReferences() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDetachReferences.StaticConstructor">
            <summary>设置 DetachReferences.DetachReferences() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDetachReferences.VisitLookup">
            <summary>设置 DetachReferences.Visit(Lookup node) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimDetachReferences.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDetachReferences.AllInstances.VisitLookup">
            <summary>设置 DetachReferences.Visit(Lookup node) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimDirectivePrologue">
            <summary>Microsoft.Ajax.Utilities.DirectivePrologue 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimDirectivePrologue.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimDirectivePrologue.#ctor(Microsoft.Ajax.Utilities.DirectivePrologue)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimDirectivePrologue.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimDirectivePrologue.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDirectivePrologue.AcceptIVisitor">
            <summary>设置 DirectivePrologue.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDirectivePrologue.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDirectivePrologue.ConstructorStringContextJSParser">
            <summary>设置 DirectivePrologue.DirectivePrologue(String value, Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDirectivePrologue.IsConstantGet">
            <summary>设置 DirectivePrologue.get_IsConstant() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDirectivePrologue.IsExpressionGet">
            <summary>设置 DirectivePrologue.get_IsExpression() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDirectivePrologue.IsRedundantGet">
            <summary>设置 DirectivePrologue.get_IsRedundant() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDirectivePrologue.IsRedundantSetBoolean">
            <summary>设置 DirectivePrologue.set_IsRedundant(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDirectivePrologue.RequiresSeparatorGet">
            <summary>设置 DirectivePrologue.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDirectivePrologue.UseStrictGet">
            <summary>设置 DirectivePrologue.get_UseStrict() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDirectivePrologue.UseStrictSetBoolean">
            <summary>设置 DirectivePrologue.set_UseStrict(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimDirectivePrologue.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDirectivePrologue.AllInstances.AcceptIVisitor">
            <summary>设置 DirectivePrologue.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDirectivePrologue.AllInstances.IsConstantGet">
            <summary>设置 DirectivePrologue.get_IsConstant() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDirectivePrologue.AllInstances.IsExpressionGet">
            <summary>设置 DirectivePrologue.get_IsExpression() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDirectivePrologue.AllInstances.IsRedundantGet">
            <summary>设置 DirectivePrologue.get_IsRedundant() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDirectivePrologue.AllInstances.IsRedundantSetBoolean">
            <summary>设置 DirectivePrologue.set_IsRedundant(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDirectivePrologue.AllInstances.RequiresSeparatorGet">
            <summary>设置 DirectivePrologue.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDirectivePrologue.AllInstances.UseStrictGet">
            <summary>设置 DirectivePrologue.get_UseStrict() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDirectivePrologue.AllInstances.UseStrictSetBoolean">
            <summary>设置 DirectivePrologue.set_UseStrict(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimDoWhile">
            <summary>Microsoft.Ajax.Utilities.DoWhile 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimDoWhile.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimDoWhile.#ctor(Microsoft.Ajax.Utilities.DoWhile)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimDoWhile.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimDoWhile.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDoWhile.AcceptIVisitor">
            <summary>设置 DoWhile.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDoWhile.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDoWhile.ChildrenGet">
            <summary>设置 DoWhile.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDoWhile.ConditionGet">
            <summary>设置 DoWhile.get_Condition() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDoWhile.ConditionSetAstNode">
            <summary>设置 DoWhile.set_Condition(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDoWhile.ConstructorContextJSParser">
            <summary>设置 DoWhile.DoWhile(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDoWhile.ReplaceChildAstNodeAstNode">
            <summary>设置 DoWhile.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDoWhile.RequiresSeparatorGet">
            <summary>设置 DoWhile.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDoWhile.WhileContextGet">
            <summary>设置 DoWhile.get_WhileContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDoWhile.WhileContextSetContext">
            <summary>设置 DoWhile.set_WhileContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDoWhile._set_Conditionb__2AstNode">
            <summary>设置 DoWhile.&lt;set_Condition&gt;b__2(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDoWhile._set_Conditionb__3AstNode">
            <summary>设置 DoWhile.&lt;set_Condition&gt;b__3(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimDoWhile.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDoWhile.AllInstances.AcceptIVisitor">
            <summary>设置 DoWhile.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDoWhile.AllInstances.ChildrenGet">
            <summary>设置 DoWhile.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDoWhile.AllInstances.ConditionGet">
            <summary>设置 DoWhile.get_Condition() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDoWhile.AllInstances.ConditionSetAstNode">
            <summary>设置 DoWhile.set_Condition(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDoWhile.AllInstances.ReplaceChildAstNodeAstNode">
            <summary>设置 DoWhile.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDoWhile.AllInstances.RequiresSeparatorGet">
            <summary>设置 DoWhile.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDoWhile.AllInstances.WhileContextGet">
            <summary>设置 DoWhile.get_WhileContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDoWhile.AllInstances.WhileContextSetContext">
            <summary>设置 DoWhile.set_WhileContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDoWhile.AllInstances._set_Conditionb__2AstNode">
            <summary>设置 DoWhile.&lt;set_Condition&gt;b__2(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDoWhile.AllInstances._set_Conditionb__3AstNode">
            <summary>设置 DoWhile.&lt;set_Condition&gt;b__3(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimDocumentContext">
            <summary>Microsoft.Ajax.Utilities.DocumentContext 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimDocumentContext.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimDocumentContext.#ctor(Microsoft.Ajax.Utilities.DocumentContext)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimDocumentContext.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimDocumentContext.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDocumentContext.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDocumentContext.ConstructorJSParser">
            <summary>设置 DocumentContext.DocumentContext(JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDocumentContext.ConstructorJSParserString">
            <summary>设置 DocumentContext.DocumentContext(JSParser parser, String source) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDocumentContext.DifferentFileContextString">
            <summary>设置 DocumentContext.DifferentFileContext(String fileContext) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDocumentContext.FileContextGet">
            <summary>设置 DocumentContext.get_FileContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDocumentContext.FileContextSetString">
            <summary>设置 DocumentContext.set_FileContext(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDocumentContext.HandleErrorJScriptException">
            <summary>设置 DocumentContext.HandleError(JScriptException error) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDocumentContext.HasAlreadySeenErrorForString">
            <summary>设置 DocumentContext.HasAlreadySeenErrorFor(String varName) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDocumentContext.IsGeneratedGet">
            <summary>设置 DocumentContext.get_IsGenerated() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDocumentContext.IsGeneratedSetBoolean">
            <summary>设置 DocumentContext.set_IsGenerated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDocumentContext.ReportUndefinedUndefinedReferenceException">
            <summary>设置 DocumentContext.ReportUndefined(UndefinedReferenceException ex) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDocumentContext.SourceGet">
            <summary>设置 DocumentContext.get_Source() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDocumentContext.SourceSetString">
            <summary>设置 DocumentContext.set_Source(String value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimDocumentContext.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDocumentContext.AllInstances.DifferentFileContextString">
            <summary>设置 DocumentContext.DifferentFileContext(String fileContext) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDocumentContext.AllInstances.FileContextGet">
            <summary>设置 DocumentContext.get_FileContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDocumentContext.AllInstances.FileContextSetString">
            <summary>设置 DocumentContext.set_FileContext(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDocumentContext.AllInstances.HandleErrorJScriptException">
            <summary>设置 DocumentContext.HandleError(JScriptException error) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDocumentContext.AllInstances.HasAlreadySeenErrorForString">
            <summary>设置 DocumentContext.HasAlreadySeenErrorFor(String varName) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDocumentContext.AllInstances.IsGeneratedGet">
            <summary>设置 DocumentContext.get_IsGenerated() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDocumentContext.AllInstances.IsGeneratedSetBoolean">
            <summary>设置 DocumentContext.set_IsGenerated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDocumentContext.AllInstances.ReportUndefinedUndefinedReferenceException">
            <summary>设置 DocumentContext.ReportUndefined(UndefinedReferenceException ex) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDocumentContext.AllInstances.SourceGet">
            <summary>设置 DocumentContext.get_Source() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimDocumentContext.AllInstances.SourceSetString">
            <summary>设置 DocumentContext.set_Source(String value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimEmptyStatement">
            <summary>Microsoft.Ajax.Utilities.EmptyStatement 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimEmptyStatement.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimEmptyStatement.#ctor(Microsoft.Ajax.Utilities.EmptyStatement)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimEmptyStatement.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimEmptyStatement.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimEmptyStatement.AcceptIVisitor">
            <summary>设置 EmptyStatement.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimEmptyStatement.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimEmptyStatement.ConstructorContextJSParser">
            <summary>设置 EmptyStatement.EmptyStatement(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimEmptyStatement.RequiresSeparatorGet">
            <summary>设置 EmptyStatement.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimEmptyStatement.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimEmptyStatement.AllInstances.AcceptIVisitor">
            <summary>设置 EmptyStatement.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimEmptyStatement.AllInstances.RequiresSeparatorGet">
            <summary>设置 EmptyStatement.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimExpression">
            <summary>Microsoft.Ajax.Utilities.Expression 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimExpression.#ctor(Microsoft.Ajax.Utilities.Expression)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimExpression.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimExpression.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimExpression.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimExpression.ConstructorContextJSParser">
            <summary>设置 Expression.Expression(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimExpression.IsExpressionGet">
            <summary>设置 Expression.get_IsExpression() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimExpression.PrecedenceGet">
            <summary>设置 Expression.get_Precedence() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimExpression.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimExpression.AllInstances.IsExpressionGet">
            <summary>设置 Expression.get_IsExpression() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimExpression.AllInstances.PrecedenceGet">
            <summary>设置 Expression.get_Precedence() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimForIn">
            <summary>Microsoft.Ajax.Utilities.ForIn 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimForIn.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimForIn.#ctor(Microsoft.Ajax.Utilities.ForIn)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimForIn.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimForIn.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn.AcceptIVisitor">
            <summary>设置 ForIn.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn.BlockScopeGet">
            <summary>设置 ForIn.get_BlockScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn.BlockScopeSetBlockScope">
            <summary>设置 ForIn.set_BlockScope(BlockScope value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn.ChildrenGet">
            <summary>设置 ForIn.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn.CollectionGet">
            <summary>设置 ForIn.get_Collection() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn.CollectionSetAstNode">
            <summary>设置 ForIn.set_Collection(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn.ConstructorContextJSParser">
            <summary>设置 ForIn.ForIn(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn.OperatorContextGet">
            <summary>设置 ForIn.get_OperatorContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn.OperatorContextSetContext">
            <summary>设置 ForIn.set_OperatorContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn.ReplaceChildAstNodeAstNode">
            <summary>设置 ForIn.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn.RequiresSeparatorGet">
            <summary>设置 ForIn.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn.TerminatingContextGet">
            <summary>设置 ForIn.get_TerminatingContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn.VariableGet">
            <summary>设置 ForIn.get_Variable() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn.VariableSetAstNode">
            <summary>设置 ForIn.set_Variable(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn._get_TerminatingContextb__4Block">
            <summary>设置 ForIn.&lt;get_TerminatingContext&gt;b__4(Block b) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn._set_Collectionb__2AstNode">
            <summary>设置 ForIn.&lt;set_Collection&gt;b__2(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn._set_Collectionb__3AstNode">
            <summary>设置 ForIn.&lt;set_Collection&gt;b__3(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn._set_Variableb__0AstNode">
            <summary>设置 ForIn.&lt;set_Variable&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn._set_Variableb__1AstNode">
            <summary>设置 ForIn.&lt;set_Variable&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimForIn.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn.AllInstances.AcceptIVisitor">
            <summary>设置 ForIn.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn.AllInstances.BlockScopeGet">
            <summary>设置 ForIn.get_BlockScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn.AllInstances.BlockScopeSetBlockScope">
            <summary>设置 ForIn.set_BlockScope(BlockScope value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn.AllInstances.ChildrenGet">
            <summary>设置 ForIn.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn.AllInstances.CollectionGet">
            <summary>设置 ForIn.get_Collection() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn.AllInstances.CollectionSetAstNode">
            <summary>设置 ForIn.set_Collection(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn.AllInstances.OperatorContextGet">
            <summary>设置 ForIn.get_OperatorContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn.AllInstances.OperatorContextSetContext">
            <summary>设置 ForIn.set_OperatorContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn.AllInstances.ReplaceChildAstNodeAstNode">
            <summary>设置 ForIn.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn.AllInstances.RequiresSeparatorGet">
            <summary>设置 ForIn.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn.AllInstances.TerminatingContextGet">
            <summary>设置 ForIn.get_TerminatingContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn.AllInstances.VariableGet">
            <summary>设置 ForIn.get_Variable() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn.AllInstances.VariableSetAstNode">
            <summary>设置 ForIn.set_Variable(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn.AllInstances._set_Collectionb__2AstNode">
            <summary>设置 ForIn.&lt;set_Collection&gt;b__2(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn.AllInstances._set_Collectionb__3AstNode">
            <summary>设置 ForIn.&lt;set_Collection&gt;b__3(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn.AllInstances._set_Variableb__0AstNode">
            <summary>设置 ForIn.&lt;set_Variable&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForIn.AllInstances._set_Variableb__1AstNode">
            <summary>设置 ForIn.&lt;set_Variable&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimForNode">
            <summary>Microsoft.Ajax.Utilities.ForNode 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimForNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimForNode.#ctor(Microsoft.Ajax.Utilities.ForNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimForNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimForNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.AcceptIVisitor">
            <summary>设置 ForNode.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.BlockScopeGet">
            <summary>设置 ForNode.get_BlockScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.BlockScopeSetBlockScope">
            <summary>设置 ForNode.set_BlockScope(BlockScope value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.ChildrenGet">
            <summary>设置 ForNode.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.ConditionGet">
            <summary>设置 ForNode.get_Condition() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.ConditionSetAstNode">
            <summary>设置 ForNode.set_Condition(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.ConstructorContextJSParser">
            <summary>设置 ForNode.ForNode(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.IncrementerGet">
            <summary>设置 ForNode.get_Incrementer() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.IncrementerSetAstNode">
            <summary>设置 ForNode.set_Incrementer(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.InitializerGet">
            <summary>设置 ForNode.get_Initializer() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.InitializerSetAstNode">
            <summary>设置 ForNode.set_Initializer(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.ReplaceChildAstNodeAstNode">
            <summary>设置 ForNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.RequiresSeparatorGet">
            <summary>设置 ForNode.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.Separator1ContextGet">
            <summary>设置 ForNode.get_Separator1Context() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.Separator1ContextSetContext">
            <summary>设置 ForNode.set_Separator1Context(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.Separator2ContextGet">
            <summary>设置 ForNode.get_Separator2Context() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.Separator2ContextSetContext">
            <summary>设置 ForNode.set_Separator2Context(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.TerminatingContextGet">
            <summary>设置 ForNode.get_TerminatingContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode._get_TerminatingContextb__6Block">
            <summary>设置 ForNode.&lt;get_TerminatingContext&gt;b__6(Block b) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode._set_Conditionb__2AstNode">
            <summary>设置 ForNode.&lt;set_Condition&gt;b__2(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode._set_Conditionb__3AstNode">
            <summary>设置 ForNode.&lt;set_Condition&gt;b__3(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode._set_Incrementerb__4AstNode">
            <summary>设置 ForNode.&lt;set_Incrementer&gt;b__4(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode._set_Incrementerb__5AstNode">
            <summary>设置 ForNode.&lt;set_Incrementer&gt;b__5(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode._set_Initializerb__0AstNode">
            <summary>设置 ForNode.&lt;set_Initializer&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode._set_Initializerb__1AstNode">
            <summary>设置 ForNode.&lt;set_Initializer&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimForNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.AllInstances.AcceptIVisitor">
            <summary>设置 ForNode.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.AllInstances.BlockScopeGet">
            <summary>设置 ForNode.get_BlockScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.AllInstances.BlockScopeSetBlockScope">
            <summary>设置 ForNode.set_BlockScope(BlockScope value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.AllInstances.ChildrenGet">
            <summary>设置 ForNode.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.AllInstances.ConditionGet">
            <summary>设置 ForNode.get_Condition() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.AllInstances.ConditionSetAstNode">
            <summary>设置 ForNode.set_Condition(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.AllInstances.IncrementerGet">
            <summary>设置 ForNode.get_Incrementer() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.AllInstances.IncrementerSetAstNode">
            <summary>设置 ForNode.set_Incrementer(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.AllInstances.InitializerGet">
            <summary>设置 ForNode.get_Initializer() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.AllInstances.InitializerSetAstNode">
            <summary>设置 ForNode.set_Initializer(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.AllInstances.ReplaceChildAstNodeAstNode">
            <summary>设置 ForNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.AllInstances.RequiresSeparatorGet">
            <summary>设置 ForNode.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.AllInstances.Separator1ContextGet">
            <summary>设置 ForNode.get_Separator1Context() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.AllInstances.Separator1ContextSetContext">
            <summary>设置 ForNode.set_Separator1Context(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.AllInstances.Separator2ContextGet">
            <summary>设置 ForNode.get_Separator2Context() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.AllInstances.Separator2ContextSetContext">
            <summary>设置 ForNode.set_Separator2Context(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.AllInstances.TerminatingContextGet">
            <summary>设置 ForNode.get_TerminatingContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.AllInstances._set_Conditionb__2AstNode">
            <summary>设置 ForNode.&lt;set_Condition&gt;b__2(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.AllInstances._set_Conditionb__3AstNode">
            <summary>设置 ForNode.&lt;set_Condition&gt;b__3(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.AllInstances._set_Incrementerb__4AstNode">
            <summary>设置 ForNode.&lt;set_Incrementer&gt;b__4(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.AllInstances._set_Incrementerb__5AstNode">
            <summary>设置 ForNode.&lt;set_Incrementer&gt;b__5(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.AllInstances._set_Initializerb__0AstNode">
            <summary>设置 ForNode.&lt;set_Initializer&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimForNode.AllInstances._set_Initializerb__1AstNode">
            <summary>设置 ForNode.&lt;set_Initializer&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject">
            <summary>Microsoft.Ajax.Utilities.FunctionObject 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.#ctor(Microsoft.Ajax.Utilities.FunctionObject)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.Bind(Microsoft.Ajax.Utilities.INameDeclaration)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AcceptIVisitor">
            <summary>设置 FunctionObject.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.BodyGet">
            <summary>设置 FunctionObject.get_Body() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.BodySetBlock">
            <summary>设置 FunctionObject.set_Body(Block value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.ChildrenGet">
            <summary>设置 FunctionObject.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.ConstructorContextJSParser">
            <summary>设置 FunctionObject.FunctionObject(Context functionContext, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.EnclosingScopeGet">
            <summary>设置 FunctionObject.get_EnclosingScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.FunctionScopeGet">
            <summary>设置 FunctionObject.get_FunctionScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.FunctionScopeSetFunctionScope">
            <summary>设置 FunctionObject.set_FunctionScope(FunctionScope value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.FunctionTypeGet">
            <summary>设置 FunctionObject.get_FunctionType() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.FunctionTypeSetFunctionType">
            <summary>设置 FunctionObject.set_FunctionType(FunctionType value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.IdContextGet">
            <summary>设置 FunctionObject.get_IdContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.IdContextSetContext">
            <summary>设置 FunctionObject.set_IdContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.InitializerGet">
            <summary>设置 FunctionObject.get_Initializer() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.IsArgumentTrimmableJSVariableField">
            <summary>设置 FunctionObject.IsArgumentTrimmable(JSVariableField targetArgumentField) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.IsExpressionGet">
            <summary>设置 FunctionObject.get_IsExpression() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.IsReferencedGet">
            <summary>设置 FunctionObject.get_IsReferenced() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.IsSourceElementGet">
            <summary>设置 FunctionObject.get_IsSourceElement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.IsSourceElementSetBoolean">
            <summary>设置 FunctionObject.set_IsSourceElement(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.NameContextGet">
            <summary>设置 FunctionObject.get_NameContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.NameGet">
            <summary>设置 FunctionObject.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.NameGuessGet">
            <summary>设置 FunctionObject.get_NameGuess() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.NameGuessSetString">
            <summary>设置 FunctionObject.set_NameGuess(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.NameSetString">
            <summary>设置 FunctionObject.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.ParameterDeclarationsGet">
            <summary>设置 FunctionObject.get_ParameterDeclarations() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.ParameterDeclarationsSetAstNodeList">
            <summary>设置 FunctionObject.set_ParameterDeclarations(AstNodeList value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.ParametersContextGet">
            <summary>设置 FunctionObject.get_ParametersContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.ParametersContextSetContext">
            <summary>设置 FunctionObject.set_ParametersContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.PrecedenceGet">
            <summary>设置 FunctionObject.get_Precedence() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.RefCountGet">
            <summary>设置 FunctionObject.get_RefCount() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.RenameNotAllowedGet">
            <summary>设置 FunctionObject.get_RenameNotAllowed() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.ReplaceChildAstNodeAstNode">
            <summary>设置 FunctionObject.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.RequiresSeparatorGet">
            <summary>设置 FunctionObject.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.SafeIsReferencedHashSetOfFunctionObject">
            <summary>设置 FunctionObject.SafeIsReferenced(HashSet`1&lt;FunctionObject&gt; visited) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.VariableFieldGet">
            <summary>设置 FunctionObject.get_VariableField() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.VariableFieldSetJSVariableField">
            <summary>设置 FunctionObject.set_VariableField(JSVariableField value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject._IsArgumentTrimmableb__4ParameterDeclaration">
            <summary>设置 FunctionObject.&lt;IsArgumentTrimmable&gt;b__4(ParameterDeclaration p) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject._set_Bodyb__0Block">
            <summary>设置 FunctionObject.&lt;set_Body&gt;b__0(Block n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject._set_Bodyb__1Block">
            <summary>设置 FunctionObject.&lt;set_Body&gt;b__1(Block n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject._set_ParameterDeclarationsb__2AstNodeList">
            <summary>设置 FunctionObject.&lt;set_ParameterDeclarations&gt;b__2(AstNodeList n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject._set_ParameterDeclarationsb__3AstNodeList">
            <summary>设置 FunctionObject.&lt;set_ParameterDeclarations&gt;b__3(AstNodeList n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances.AcceptIVisitor">
            <summary>设置 FunctionObject.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances.BodyGet">
            <summary>设置 FunctionObject.get_Body() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances.BodySetBlock">
            <summary>设置 FunctionObject.set_Body(Block value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances.ChildrenGet">
            <summary>设置 FunctionObject.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances.EnclosingScopeGet">
            <summary>设置 FunctionObject.get_EnclosingScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances.FunctionScopeGet">
            <summary>设置 FunctionObject.get_FunctionScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances.FunctionScopeSetFunctionScope">
            <summary>设置 FunctionObject.set_FunctionScope(FunctionScope value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances.FunctionTypeGet">
            <summary>设置 FunctionObject.get_FunctionType() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances.FunctionTypeSetFunctionType">
            <summary>设置 FunctionObject.set_FunctionType(FunctionType value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances.IdContextGet">
            <summary>设置 FunctionObject.get_IdContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances.IdContextSetContext">
            <summary>设置 FunctionObject.set_IdContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances.InitializerGet">
            <summary>设置 FunctionObject.get_Initializer() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances.IsArgumentTrimmableJSVariableField">
            <summary>设置 FunctionObject.IsArgumentTrimmable(JSVariableField targetArgumentField) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances.IsExpressionGet">
            <summary>设置 FunctionObject.get_IsExpression() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances.IsReferencedGet">
            <summary>设置 FunctionObject.get_IsReferenced() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances.IsSourceElementGet">
            <summary>设置 FunctionObject.get_IsSourceElement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances.IsSourceElementSetBoolean">
            <summary>设置 FunctionObject.set_IsSourceElement(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances.NameContextGet">
            <summary>设置 FunctionObject.get_NameContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances.NameGet">
            <summary>设置 FunctionObject.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances.NameGuessGet">
            <summary>设置 FunctionObject.get_NameGuess() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances.NameGuessSetString">
            <summary>设置 FunctionObject.set_NameGuess(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances.NameSetString">
            <summary>设置 FunctionObject.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances.ParameterDeclarationsGet">
            <summary>设置 FunctionObject.get_ParameterDeclarations() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances.ParameterDeclarationsSetAstNodeList">
            <summary>设置 FunctionObject.set_ParameterDeclarations(AstNodeList value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances.ParametersContextGet">
            <summary>设置 FunctionObject.get_ParametersContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances.ParametersContextSetContext">
            <summary>设置 FunctionObject.set_ParametersContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances.PrecedenceGet">
            <summary>设置 FunctionObject.get_Precedence() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances.RefCountGet">
            <summary>设置 FunctionObject.get_RefCount() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances.RenameNotAllowedGet">
            <summary>设置 FunctionObject.get_RenameNotAllowed() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances.ReplaceChildAstNodeAstNode">
            <summary>设置 FunctionObject.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances.RequiresSeparatorGet">
            <summary>设置 FunctionObject.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances.SafeIsReferencedHashSetOfFunctionObject">
            <summary>设置 FunctionObject.SafeIsReferenced(HashSet`1&lt;FunctionObject&gt; visited) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances.VariableFieldGet">
            <summary>设置 FunctionObject.get_VariableField() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances.VariableFieldSetJSVariableField">
            <summary>设置 FunctionObject.set_VariableField(JSVariableField value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances._set_Bodyb__0Block">
            <summary>设置 FunctionObject.&lt;set_Body&gt;b__0(Block n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances._set_Bodyb__1Block">
            <summary>设置 FunctionObject.&lt;set_Body&gt;b__1(Block n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances._set_ParameterDeclarationsb__2AstNodeList">
            <summary>设置 FunctionObject.&lt;set_ParameterDeclarations&gt;b__2(AstNodeList n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionObject.AllInstances._set_ParameterDeclarationsb__3AstNodeList">
            <summary>设置 FunctionObject.&lt;set_ParameterDeclarations&gt;b__3(AstNodeList n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimFunctionScope">
            <summary>Microsoft.Ajax.Utilities.FunctionScope 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimFunctionScope.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimFunctionScope.#ctor(Microsoft.Ajax.Utilities.FunctionScope)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimFunctionScope.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimFunctionScope.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionScope.AddReferenceActivationObject">
            <summary>设置 FunctionScope.AddReference(ActivationObject scope) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionScope.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionScope.ConstructorActivationObjectBooleanCodeSettingsFunctionObject">
            <summary>设置 FunctionScope.FunctionScope(ActivationObject parent, Boolean isExpression, CodeSettings settings, FunctionObject funcObj) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionScope.CreateFieldStringObjectFieldAttributes">
            <summary>设置 FunctionScope.CreateField(String name, Object value, FieldAttributes attributes) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionScope.DeclareScope">
            <summary>设置 FunctionScope.DeclareScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionScope.DefineArgumentsObject">
            <summary>设置 FunctionScope.DefineArgumentsObject() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionScope.DefineFunctionExpressionName">
            <summary>设置 FunctionScope.DefineFunctionExpressionName() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionScope.DefineParameters">
            <summary>设置 FunctionScope.DefineParameters() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionScope.FunctionObjectGet">
            <summary>设置 FunctionScope.get_FunctionObject() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionScope.FunctionObjectSetFunctionObject">
            <summary>设置 FunctionScope.set_FunctionObject(FunctionObject value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimFunctionScope.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionScope.AllInstances.AddReferenceActivationObject">
            <summary>设置 FunctionScope.AddReference(ActivationObject scope) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionScope.AllInstances.CreateFieldStringObjectFieldAttributes">
            <summary>设置 FunctionScope.CreateField(String name, Object value, FieldAttributes attributes) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionScope.AllInstances.DeclareScope">
            <summary>设置 FunctionScope.DeclareScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionScope.AllInstances.DefineArgumentsObject">
            <summary>设置 FunctionScope.DefineArgumentsObject() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionScope.AllInstances.DefineFunctionExpressionName">
            <summary>设置 FunctionScope.DefineFunctionExpressionName() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionScope.AllInstances.DefineParameters">
            <summary>设置 FunctionScope.DefineParameters() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionScope.AllInstances.FunctionObjectGet">
            <summary>设置 FunctionScope.get_FunctionObject() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimFunctionScope.AllInstances.FunctionObjectSetFunctionObject">
            <summary>设置 FunctionScope.set_FunctionObject(FunctionObject value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimGetterSetter">
            <summary>Microsoft.Ajax.Utilities.GetterSetter 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimGetterSetter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimGetterSetter.#ctor(Microsoft.Ajax.Utilities.GetterSetter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimGetterSetter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimGetterSetter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGetterSetter.AcceptIVisitor">
            <summary>设置 GetterSetter.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGetterSetter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGetterSetter.ConstructorStringBooleanContextJSParser">
            <summary>设置 GetterSetter.GetterSetter(String identifier, Boolean isGetter, Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGetterSetter.IsGetterGet">
            <summary>设置 GetterSetter.get_IsGetter() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGetterSetter.IsGetterSetBoolean">
            <summary>设置 GetterSetter.set_IsGetter(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGetterSetter.ToString">
            <summary>设置 GetterSetter.ToString() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimGetterSetter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGetterSetter.AllInstances.AcceptIVisitor">
            <summary>设置 GetterSetter.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGetterSetter.AllInstances.IsGetterGet">
            <summary>设置 GetterSetter.get_IsGetter() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGetterSetter.AllInstances.IsGetterSetBoolean">
            <summary>设置 GetterSetter.set_IsGetter(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGetterSetter.AllInstances.ToString01">
            <summary>设置 GetterSetter.ToString() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimGlobalDefineEventArgs">
            <summary>Microsoft.Ajax.Utilities.GlobalDefineEventArgs 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimGlobalDefineEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimGlobalDefineEventArgs.#ctor(Microsoft.Ajax.Utilities.GlobalDefineEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimGlobalDefineEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimGlobalDefineEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGlobalDefineEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGlobalDefineEventArgs.Constructor">
            <summary>设置 GlobalDefineEventArgs.GlobalDefineEventArgs() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGlobalDefineEventArgs.NameGet">
            <summary>设置 GlobalDefineEventArgs.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGlobalDefineEventArgs.NameSetString">
            <summary>设置 GlobalDefineEventArgs.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimGlobalDefineEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGlobalDefineEventArgs.AllInstances.NameGet">
            <summary>设置 GlobalDefineEventArgs.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGlobalDefineEventArgs.AllInstances.NameSetString">
            <summary>设置 GlobalDefineEventArgs.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimGlobalScope">
            <summary>Microsoft.Ajax.Utilities.GlobalScope 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimGlobalScope.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimGlobalScope.#ctor(Microsoft.Ajax.Utilities.GlobalScope)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimGlobalScope.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimGlobalScope.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGlobalScope.AddUndefinedReferenceUndefinedReferenceException">
            <summary>设置 GlobalScope.AddUndefinedReference(UndefinedReferenceException exception) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGlobalScope.AnalyzeScope">
            <summary>设置 GlobalScope.AnalyzeScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGlobalScope.AutoRenameFields">
            <summary>设置 GlobalScope.AutoRenameFields() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGlobalScope.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGlobalScope.ConstructorCodeSettings">
            <summary>设置 GlobalScope.GlobalScope(CodeSettings settings) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGlobalScope.CreateFieldJSVariableField">
            <summary>设置 GlobalScope.CreateField(JSVariableField outerField) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGlobalScope.CreateFieldStringObjectFieldAttributes">
            <summary>设置 GlobalScope.CreateField(String name, Object value, FieldAttributes attributes) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGlobalScope.DeclareScope">
            <summary>设置 GlobalScope.DeclareScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGlobalScope.ItemGetString">
            <summary>设置 GlobalScope.get_Item(String name) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGlobalScope.ResolveFromCollectionStringHashSetOfStringFieldTypeBoolean">
            <summary>设置 GlobalScope.ResolveFromCollection(String name, HashSet`1&lt;String&gt; collection, FieldType fieldType, Boolean isFunction) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGlobalScope.SetAssumedGlobalsCodeSettings">
            <summary>设置 GlobalScope.SetAssumedGlobals(CodeSettings settings) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGlobalScope.UndefinedReferencesGet">
            <summary>设置 GlobalScope.get_UndefinedReferences() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimGlobalScope.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGlobalScope.AllInstances.AddUndefinedReferenceUndefinedReferenceException">
            <summary>设置 GlobalScope.AddUndefinedReference(UndefinedReferenceException exception) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGlobalScope.AllInstances.AnalyzeScope">
            <summary>设置 GlobalScope.AnalyzeScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGlobalScope.AllInstances.AutoRenameFields">
            <summary>设置 GlobalScope.AutoRenameFields() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGlobalScope.AllInstances.CreateFieldJSVariableField">
            <summary>设置 GlobalScope.CreateField(JSVariableField outerField) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGlobalScope.AllInstances.CreateFieldStringObjectFieldAttributes">
            <summary>设置 GlobalScope.CreateField(String name, Object value, FieldAttributes attributes) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGlobalScope.AllInstances.DeclareScope">
            <summary>设置 GlobalScope.DeclareScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGlobalScope.AllInstances.ItemGetString">
            <summary>设置 GlobalScope.get_Item(String name) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGlobalScope.AllInstances.ResolveFromCollectionStringHashSetOfStringFieldTypeBoolean">
            <summary>设置 GlobalScope.ResolveFromCollection(String name, HashSet`1&lt;String&gt; collection, FieldType fieldType, Boolean isFunction) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGlobalScope.AllInstances.SetAssumedGlobalsCodeSettings">
            <summary>设置 GlobalScope.SetAssumedGlobals(CodeSettings settings) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGlobalScope.AllInstances.UndefinedReferencesGet">
            <summary>设置 GlobalScope.get_UndefinedReferences() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimGroupingOperator">
            <summary>Microsoft.Ajax.Utilities.GroupingOperator 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimGroupingOperator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimGroupingOperator.#ctor(Microsoft.Ajax.Utilities.GroupingOperator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimGroupingOperator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimGroupingOperator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGroupingOperator.AcceptIVisitor">
            <summary>设置 GroupingOperator.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGroupingOperator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGroupingOperator.ChildrenGet">
            <summary>设置 GroupingOperator.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGroupingOperator.ConstructorContextJSParser">
            <summary>设置 GroupingOperator.GroupingOperator(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGroupingOperator.FindPrimitiveType">
            <summary>设置 GroupingOperator.FindPrimitiveType() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGroupingOperator.IsConstantGet">
            <summary>设置 GroupingOperator.get_IsConstant() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGroupingOperator.IsEquivalentToAstNode">
            <summary>设置 GroupingOperator.IsEquivalentTo(AstNode otherNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGroupingOperator.OperandGet">
            <summary>设置 GroupingOperator.get_Operand() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGroupingOperator.OperandSetAstNode">
            <summary>设置 GroupingOperator.set_Operand(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGroupingOperator.PrecedenceGet">
            <summary>设置 GroupingOperator.get_Precedence() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGroupingOperator.ReplaceChildAstNodeAstNode">
            <summary>设置 GroupingOperator.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGroupingOperator.ToString">
            <summary>设置 GroupingOperator.ToString() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGroupingOperator._get_IsConstantb__2AstNode">
            <summary>设置 GroupingOperator.&lt;get_IsConstant&gt;b__2(AstNode o) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGroupingOperator._set_Operandb__0AstNode">
            <summary>设置 GroupingOperator.&lt;set_Operand&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGroupingOperator._set_Operandb__1AstNode">
            <summary>设置 GroupingOperator.&lt;set_Operand&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimGroupingOperator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGroupingOperator.AllInstances.AcceptIVisitor">
            <summary>设置 GroupingOperator.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGroupingOperator.AllInstances.ChildrenGet">
            <summary>设置 GroupingOperator.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGroupingOperator.AllInstances.FindPrimitiveType">
            <summary>设置 GroupingOperator.FindPrimitiveType() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGroupingOperator.AllInstances.IsConstantGet">
            <summary>设置 GroupingOperator.get_IsConstant() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGroupingOperator.AllInstances.IsEquivalentToAstNode">
            <summary>设置 GroupingOperator.IsEquivalentTo(AstNode otherNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGroupingOperator.AllInstances.OperandGet">
            <summary>设置 GroupingOperator.get_Operand() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGroupingOperator.AllInstances.OperandSetAstNode">
            <summary>设置 GroupingOperator.set_Operand(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGroupingOperator.AllInstances.PrecedenceGet">
            <summary>设置 GroupingOperator.get_Precedence() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGroupingOperator.AllInstances.ReplaceChildAstNodeAstNode">
            <summary>设置 GroupingOperator.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGroupingOperator.AllInstances.ToString01">
            <summary>设置 GroupingOperator.ToString() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGroupingOperator.AllInstances._set_Operandb__0AstNode">
            <summary>设置 GroupingOperator.&lt;set_Operand&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimGroupingOperator.AllInstances._set_Operandb__1AstNode">
            <summary>设置 GroupingOperator.&lt;set_Operand&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimIfNode">
            <summary>Microsoft.Ajax.Utilities.IfNode 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.#ctor(Microsoft.Ajax.Utilities.IfNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.AcceptIVisitor">
            <summary>设置 IfNode.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.ChildrenGet">
            <summary>设置 IfNode.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.ConditionGet">
            <summary>设置 IfNode.get_Condition() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.ConditionSetAstNode">
            <summary>设置 IfNode.set_Condition(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.ConstructorContextJSParser">
            <summary>设置 IfNode.IfNode(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.ElseContextGet">
            <summary>设置 IfNode.get_ElseContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.ElseContextSetContext">
            <summary>设置 IfNode.set_ElseContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.FalseBlockGet">
            <summary>设置 IfNode.get_FalseBlock() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.FalseBlockSetBlock">
            <summary>设置 IfNode.set_FalseBlock(Block value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.ReplaceChildAstNodeAstNode">
            <summary>设置 IfNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.RequiresSeparatorGet">
            <summary>设置 IfNode.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.SwapBranches">
            <summary>设置 IfNode.SwapBranches() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.TerminatingContextGet">
            <summary>设置 IfNode.get_TerminatingContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.TrueBlockGet">
            <summary>设置 IfNode.get_TrueBlock() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.TrueBlockSetBlock">
            <summary>设置 IfNode.set_TrueBlock(Block value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode._get_TerminatingContextb__6Block">
            <summary>设置 IfNode.&lt;get_TerminatingContext&gt;b__6(Block b) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode._set_Conditionb__0AstNode">
            <summary>设置 IfNode.&lt;set_Condition&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode._set_Conditionb__1AstNode">
            <summary>设置 IfNode.&lt;set_Condition&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode._set_FalseBlockb__4Block">
            <summary>设置 IfNode.&lt;set_FalseBlock&gt;b__4(Block n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode._set_FalseBlockb__5Block">
            <summary>设置 IfNode.&lt;set_FalseBlock&gt;b__5(Block n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode._set_TrueBlockb__2Block">
            <summary>设置 IfNode.&lt;set_TrueBlock&gt;b__2(Block n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode._set_TrueBlockb__3Block">
            <summary>设置 IfNode.&lt;set_TrueBlock&gt;b__3(Block n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.AllInstances.AcceptIVisitor">
            <summary>设置 IfNode.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.AllInstances.ChildrenGet">
            <summary>设置 IfNode.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.AllInstances.ConditionGet">
            <summary>设置 IfNode.get_Condition() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.AllInstances.ConditionSetAstNode">
            <summary>设置 IfNode.set_Condition(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.AllInstances.ElseContextGet">
            <summary>设置 IfNode.get_ElseContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.AllInstances.ElseContextSetContext">
            <summary>设置 IfNode.set_ElseContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.AllInstances.FalseBlockGet">
            <summary>设置 IfNode.get_FalseBlock() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.AllInstances.FalseBlockSetBlock">
            <summary>设置 IfNode.set_FalseBlock(Block value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.AllInstances.ReplaceChildAstNodeAstNode">
            <summary>设置 IfNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.AllInstances.RequiresSeparatorGet">
            <summary>设置 IfNode.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.AllInstances.SwapBranches">
            <summary>设置 IfNode.SwapBranches() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.AllInstances.TerminatingContextGet">
            <summary>设置 IfNode.get_TerminatingContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.AllInstances.TrueBlockGet">
            <summary>设置 IfNode.get_TrueBlock() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.AllInstances.TrueBlockSetBlock">
            <summary>设置 IfNode.set_TrueBlock(Block value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.AllInstances._set_Conditionb__0AstNode">
            <summary>设置 IfNode.&lt;set_Condition&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.AllInstances._set_Conditionb__1AstNode">
            <summary>设置 IfNode.&lt;set_Condition&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.AllInstances._set_FalseBlockb__4Block">
            <summary>设置 IfNode.&lt;set_FalseBlock&gt;b__4(Block n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.AllInstances._set_FalseBlockb__5Block">
            <summary>设置 IfNode.&lt;set_FalseBlock&gt;b__5(Block n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.AllInstances._set_TrueBlockb__2Block">
            <summary>设置 IfNode.&lt;set_TrueBlock&gt;b__2(Block n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIfNode.AllInstances._set_TrueBlockb__3Block">
            <summary>设置 IfNode.&lt;set_TrueBlock&gt;b__3(Block n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimImportantComment">
            <summary>Microsoft.Ajax.Utilities.ImportantComment 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimImportantComment.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimImportantComment.#ctor(Microsoft.Ajax.Utilities.ImportantComment)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimImportantComment.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimImportantComment.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimImportantComment.AcceptIVisitor">
            <summary>设置 ImportantComment.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimImportantComment.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimImportantComment.CommentGet">
            <summary>设置 ImportantComment.get_Comment() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimImportantComment.CommentSetString">
            <summary>设置 ImportantComment.set_Comment(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimImportantComment.ConstructorContextJSParser">
            <summary>设置 ImportantComment.ImportantComment(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimImportantComment.RequiresSeparatorGet">
            <summary>设置 ImportantComment.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimImportantComment.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimImportantComment.AllInstances.AcceptIVisitor">
            <summary>设置 ImportantComment.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimImportantComment.AllInstances.CommentGet">
            <summary>设置 ImportantComment.get_Comment() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimImportantComment.AllInstances.CommentSetString">
            <summary>设置 ImportantComment.set_Comment(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimImportantComment.AllInstances.RequiresSeparatorGet">
            <summary>设置 ImportantComment.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimInvalidSwitchEventArgs">
            <summary>Microsoft.Ajax.Utilities.InvalidSwitchEventArgs 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimInvalidSwitchEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimInvalidSwitchEventArgs.#ctor(Microsoft.Ajax.Utilities.InvalidSwitchEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimInvalidSwitchEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimInvalidSwitchEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimInvalidSwitchEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimInvalidSwitchEventArgs.Constructor">
            <summary>设置 InvalidSwitchEventArgs.InvalidSwitchEventArgs() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimInvalidSwitchEventArgs.ParameterPartGet">
            <summary>设置 InvalidSwitchEventArgs.get_ParameterPart() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimInvalidSwitchEventArgs.ParameterPartSetString">
            <summary>设置 InvalidSwitchEventArgs.set_ParameterPart(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimInvalidSwitchEventArgs.SwitchPartGet">
            <summary>设置 InvalidSwitchEventArgs.get_SwitchPart() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimInvalidSwitchEventArgs.SwitchPartSetString">
            <summary>设置 InvalidSwitchEventArgs.set_SwitchPart(String value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimInvalidSwitchEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimInvalidSwitchEventArgs.AllInstances.ParameterPartGet">
            <summary>设置 InvalidSwitchEventArgs.get_ParameterPart() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimInvalidSwitchEventArgs.AllInstances.ParameterPartSetString">
            <summary>设置 InvalidSwitchEventArgs.set_ParameterPart(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimInvalidSwitchEventArgs.AllInstances.SwitchPartGet">
            <summary>设置 InvalidSwitchEventArgs.get_SwitchPart() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimInvalidSwitchEventArgs.AllInstances.SwitchPartSetString">
            <summary>设置 InvalidSwitchEventArgs.set_SwitchPart(String value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimIterationStatement">
            <summary>Microsoft.Ajax.Utilities.IterationStatement 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimIterationStatement.#ctor(Microsoft.Ajax.Utilities.IterationStatement)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimIterationStatement.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimIterationStatement.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIterationStatement.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIterationStatement.BodyGet">
            <summary>设置 IterationStatement.get_Body() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIterationStatement.BodySetBlock">
            <summary>设置 IterationStatement.set_Body(Block value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIterationStatement.ConstructorContextJSParser">
            <summary>设置 IterationStatement.IterationStatement(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIterationStatement._set_Bodyb__0Block">
            <summary>设置 IterationStatement.&lt;set_Body&gt;b__0(Block n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIterationStatement._set_Bodyb__1Block">
            <summary>设置 IterationStatement.&lt;set_Body&gt;b__1(Block n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimIterationStatement.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIterationStatement.AllInstances.BodyGet">
            <summary>设置 IterationStatement.get_Body() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIterationStatement.AllInstances.BodySetBlock">
            <summary>设置 IterationStatement.set_Body(Block value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIterationStatement.AllInstances._set_Bodyb__0Block">
            <summary>设置 IterationStatement.&lt;set_Body&gt;b__0(Block n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimIterationStatement.AllInstances._set_Bodyb__1Block">
            <summary>设置 IterationStatement.&lt;set_Body&gt;b__1(Block n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimJSEncoderFallback">
            <summary>Microsoft.Ajax.Utilities.JSEncoderFallback 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimJSEncoderFallback.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimJSEncoderFallback.#ctor(Microsoft.Ajax.Utilities.JSEncoderFallback)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimJSEncoderFallback.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimJSEncoderFallback.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSEncoderFallback.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSEncoderFallback.Constructor">
            <summary>设置 JSEncoderFallback.JSEncoderFallback() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSEncoderFallback.CreateFallbackBuffer">
            <summary>设置 JSEncoderFallback.CreateFallbackBuffer() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSEncoderFallback.MaxCharCountGet">
            <summary>设置 JSEncoderFallback.get_MaxCharCount() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimJSEncoderFallback.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSEncoderFallback.AllInstances.CreateFallbackBuffer">
            <summary>设置 JSEncoderFallback.CreateFallbackBuffer() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSEncoderFallback.AllInstances.MaxCharCountGet">
            <summary>设置 JSEncoderFallback.get_MaxCharCount() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor">
            <summary>Microsoft.Ajax.Utilities.JSONOutputVisitor 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.#ctor(Microsoft.Ajax.Utilities.JSONOutputVisitor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.Bind(Microsoft.Ajax.Utilities.IVisitor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.ApplyTextWriterAstNode">
            <summary>设置 JSONOutputVisitor.Apply(TextWriter writer, AstNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.ConstructorTextWriter">
            <summary>设置 JSONOutputVisitor.JSONOutputVisitor(TextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.GetSmallestRepString">
            <summary>设置 JSONOutputVisitor.GetSmallestRep(String number) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.IsValidGet">
            <summary>设置 JSONOutputVisitor.get_IsValid() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.IsValidSetBoolean">
            <summary>设置 JSONOutputVisitor.set_IsValid(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.OutputNumberDoubleContext">
            <summary>设置 JSONOutputVisitor.OutputNumber(Double numericValue, Context originalContext) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.OutputStringString">
            <summary>设置 JSONOutputVisitor.OutputString(String text) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.StaticConstructor">
            <summary>设置 JSONOutputVisitor.JSONOutputVisitor() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitArrayLiteral">
            <summary>设置 JSONOutputVisitor.Visit(ArrayLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitAspNetBlockNode">
            <summary>设置 JSONOutputVisitor.Visit(AspNetBlockNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitAstNodeList">
            <summary>设置 JSONOutputVisitor.Visit(AstNodeList node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitBinaryOperator">
            <summary>设置 JSONOutputVisitor.Visit(BinaryOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitBlock">
            <summary>设置 JSONOutputVisitor.Visit(Block node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitBreak">
            <summary>设置 JSONOutputVisitor.Visit(Break node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitCallNode">
            <summary>设置 JSONOutputVisitor.Visit(CallNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitConditional">
            <summary>设置 JSONOutputVisitor.Visit(Conditional node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitConditionalCompilationComment">
            <summary>设置 JSONOutputVisitor.Visit(ConditionalCompilationComment node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitConditionalCompilationElse">
            <summary>设置 JSONOutputVisitor.Visit(ConditionalCompilationElse node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitConditionalCompilationElseIf">
            <summary>设置 JSONOutputVisitor.Visit(ConditionalCompilationElseIf node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitConditionalCompilationEnd">
            <summary>设置 JSONOutputVisitor.Visit(ConditionalCompilationEnd node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitConditionalCompilationIf">
            <summary>设置 JSONOutputVisitor.Visit(ConditionalCompilationIf node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitConditionalCompilationOn">
            <summary>设置 JSONOutputVisitor.Visit(ConditionalCompilationOn node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitConditionalCompilationSet">
            <summary>设置 JSONOutputVisitor.Visit(ConditionalCompilationSet node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitConstStatement">
            <summary>设置 JSONOutputVisitor.Visit(ConstStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitConstantWrapper">
            <summary>设置 JSONOutputVisitor.Visit(ConstantWrapper node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitConstantWrapperPP">
            <summary>设置 JSONOutputVisitor.Visit(ConstantWrapperPP node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitContinueNode">
            <summary>设置 JSONOutputVisitor.Visit(ContinueNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitCustomNode">
            <summary>设置 JSONOutputVisitor.Visit(CustomNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitDebuggerNode">
            <summary>设置 JSONOutputVisitor.Visit(DebuggerNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitDirectivePrologue">
            <summary>设置 JSONOutputVisitor.Visit(DirectivePrologue node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitDoWhile">
            <summary>设置 JSONOutputVisitor.Visit(DoWhile node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitEmptyStatement">
            <summary>设置 JSONOutputVisitor.Visit(EmptyStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitForIn">
            <summary>设置 JSONOutputVisitor.Visit(ForIn node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitForNode">
            <summary>设置 JSONOutputVisitor.Visit(ForNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitFunctionObject">
            <summary>设置 JSONOutputVisitor.Visit(FunctionObject node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitGetterSetter">
            <summary>设置 JSONOutputVisitor.Visit(GetterSetter node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitGroupingOperator">
            <summary>设置 JSONOutputVisitor.Visit(GroupingOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitIfNode">
            <summary>设置 JSONOutputVisitor.Visit(IfNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitImportantComment">
            <summary>设置 JSONOutputVisitor.Visit(ImportantComment node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitLabeledStatement">
            <summary>设置 JSONOutputVisitor.Visit(LabeledStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitLexicalDeclaration">
            <summary>设置 JSONOutputVisitor.Visit(LexicalDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitLookup">
            <summary>设置 JSONOutputVisitor.Visit(Lookup node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitMember">
            <summary>设置 JSONOutputVisitor.Visit(Member node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitObjectLiteral">
            <summary>设置 JSONOutputVisitor.Visit(ObjectLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitObjectLiteralField">
            <summary>设置 JSONOutputVisitor.Visit(ObjectLiteralField node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitObjectLiteralProperty">
            <summary>设置 JSONOutputVisitor.Visit(ObjectLiteralProperty node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitParameterDeclaration">
            <summary>设置 JSONOutputVisitor.Visit(ParameterDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitRegExpLiteral">
            <summary>设置 JSONOutputVisitor.Visit(RegExpLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitReturnNode">
            <summary>设置 JSONOutputVisitor.Visit(ReturnNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitSwitch">
            <summary>设置 JSONOutputVisitor.Visit(Switch node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitSwitchCase">
            <summary>设置 JSONOutputVisitor.Visit(SwitchCase node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitThisLiteral">
            <summary>设置 JSONOutputVisitor.Visit(ThisLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitThrowNode">
            <summary>设置 JSONOutputVisitor.Visit(ThrowNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitTryNode">
            <summary>设置 JSONOutputVisitor.Visit(TryNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitUnaryOperator">
            <summary>设置 JSONOutputVisitor.Visit(UnaryOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitVar">
            <summary>设置 JSONOutputVisitor.Visit(Var node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitVariableDeclaration">
            <summary>设置 JSONOutputVisitor.Visit(VariableDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitWhileNode">
            <summary>设置 JSONOutputVisitor.Visit(WhileNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.VisitWithNode">
            <summary>设置 JSONOutputVisitor.Visit(WithNode node) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.IsValidGet">
            <summary>设置 JSONOutputVisitor.get_IsValid() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.IsValidSetBoolean">
            <summary>设置 JSONOutputVisitor.set_IsValid(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.OutputNumberDoubleContext">
            <summary>设置 JSONOutputVisitor.OutputNumber(Double numericValue, Context originalContext) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.OutputStringString">
            <summary>设置 JSONOutputVisitor.OutputString(String text) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitArrayLiteral">
            <summary>设置 JSONOutputVisitor.Visit(ArrayLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitAspNetBlockNode">
            <summary>设置 JSONOutputVisitor.Visit(AspNetBlockNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitAstNodeList">
            <summary>设置 JSONOutputVisitor.Visit(AstNodeList node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitBinaryOperator">
            <summary>设置 JSONOutputVisitor.Visit(BinaryOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitBlock">
            <summary>设置 JSONOutputVisitor.Visit(Block node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitBreak">
            <summary>设置 JSONOutputVisitor.Visit(Break node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitCallNode">
            <summary>设置 JSONOutputVisitor.Visit(CallNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitConditional">
            <summary>设置 JSONOutputVisitor.Visit(Conditional node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitConditionalCompilationComment">
            <summary>设置 JSONOutputVisitor.Visit(ConditionalCompilationComment node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitConditionalCompilationElse">
            <summary>设置 JSONOutputVisitor.Visit(ConditionalCompilationElse node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitConditionalCompilationElseIf">
            <summary>设置 JSONOutputVisitor.Visit(ConditionalCompilationElseIf node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitConditionalCompilationEnd">
            <summary>设置 JSONOutputVisitor.Visit(ConditionalCompilationEnd node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitConditionalCompilationIf">
            <summary>设置 JSONOutputVisitor.Visit(ConditionalCompilationIf node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitConditionalCompilationOn">
            <summary>设置 JSONOutputVisitor.Visit(ConditionalCompilationOn node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitConditionalCompilationSet">
            <summary>设置 JSONOutputVisitor.Visit(ConditionalCompilationSet node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitConstStatement">
            <summary>设置 JSONOutputVisitor.Visit(ConstStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitConstantWrapper">
            <summary>设置 JSONOutputVisitor.Visit(ConstantWrapper node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitConstantWrapperPP">
            <summary>设置 JSONOutputVisitor.Visit(ConstantWrapperPP node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitContinueNode">
            <summary>设置 JSONOutputVisitor.Visit(ContinueNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitCustomNode">
            <summary>设置 JSONOutputVisitor.Visit(CustomNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitDebuggerNode">
            <summary>设置 JSONOutputVisitor.Visit(DebuggerNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitDirectivePrologue">
            <summary>设置 JSONOutputVisitor.Visit(DirectivePrologue node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitDoWhile">
            <summary>设置 JSONOutputVisitor.Visit(DoWhile node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitEmptyStatement">
            <summary>设置 JSONOutputVisitor.Visit(EmptyStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitForIn">
            <summary>设置 JSONOutputVisitor.Visit(ForIn node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitForNode">
            <summary>设置 JSONOutputVisitor.Visit(ForNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitFunctionObject">
            <summary>设置 JSONOutputVisitor.Visit(FunctionObject node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitGetterSetter">
            <summary>设置 JSONOutputVisitor.Visit(GetterSetter node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitGroupingOperator">
            <summary>设置 JSONOutputVisitor.Visit(GroupingOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitIfNode">
            <summary>设置 JSONOutputVisitor.Visit(IfNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitImportantComment">
            <summary>设置 JSONOutputVisitor.Visit(ImportantComment node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitLabeledStatement">
            <summary>设置 JSONOutputVisitor.Visit(LabeledStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitLexicalDeclaration">
            <summary>设置 JSONOutputVisitor.Visit(LexicalDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitLookup">
            <summary>设置 JSONOutputVisitor.Visit(Lookup node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitMember">
            <summary>设置 JSONOutputVisitor.Visit(Member node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitObjectLiteral">
            <summary>设置 JSONOutputVisitor.Visit(ObjectLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitObjectLiteralField">
            <summary>设置 JSONOutputVisitor.Visit(ObjectLiteralField node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitObjectLiteralProperty">
            <summary>设置 JSONOutputVisitor.Visit(ObjectLiteralProperty node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitParameterDeclaration">
            <summary>设置 JSONOutputVisitor.Visit(ParameterDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitRegExpLiteral">
            <summary>设置 JSONOutputVisitor.Visit(RegExpLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitReturnNode">
            <summary>设置 JSONOutputVisitor.Visit(ReturnNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitSwitch">
            <summary>设置 JSONOutputVisitor.Visit(Switch node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitSwitchCase">
            <summary>设置 JSONOutputVisitor.Visit(SwitchCase node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitThisLiteral">
            <summary>设置 JSONOutputVisitor.Visit(ThisLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitThrowNode">
            <summary>设置 JSONOutputVisitor.Visit(ThrowNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitTryNode">
            <summary>设置 JSONOutputVisitor.Visit(TryNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitUnaryOperator">
            <summary>设置 JSONOutputVisitor.Visit(UnaryOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitVar">
            <summary>设置 JSONOutputVisitor.Visit(Var node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitVariableDeclaration">
            <summary>设置 JSONOutputVisitor.Visit(VariableDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitWhileNode">
            <summary>设置 JSONOutputVisitor.Visit(WhileNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSONOutputVisitor.AllInstances.VisitWithNode">
            <summary>设置 JSONOutputVisitor.Visit(WithNode node) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimJSParser">
            <summary>Microsoft.Ajax.Utilities.JSParser 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.#ctor(Microsoft.Ajax.Utilities.JSParser)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AppendImportantCommentsBlock">
            <summary>设置 JSParser.AppendImportantComments(Block block) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.CCTooComplicatedContext">
            <summary>设置 JSParser.CCTooComplicated(Context context) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.CompilerErrorAddEventHandlerOfJScriptExceptionEventArgs">
            <summary>设置 JSParser.add_CompilerError(EventHandler`1&lt;JScriptExceptionEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.CompilerErrorRemoveEventHandlerOfJScriptExceptionEventArgs">
            <summary>设置 JSParser.remove_CompilerError(EventHandler`1&lt;JScriptExceptionEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ConstructorString">
            <summary>设置 JSParser.JSParser(String source) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ConvertNumericLiteralToDoubleStringBooleanDoubleOut">
            <summary>设置 JSParser.ConvertNumericLiteralToDouble(String str, Boolean isInteger, Double&amp; doubleValue) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.CreateExpressionNodeContextAstNodeAstNode">
            <summary>设置 JSParser.CreateExpressionNode(Context op, AstNode operand1, AstNode operand2) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.CurrentPositionContext">
            <summary>设置 JSParser.CurrentPositionContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.DebugLookupsGet">
            <summary>设置 JSParser.get_DebugLookups() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.DebugLookupsSetICollectionOfString">
            <summary>设置 JSParser.set_DebugLookups(ICollection`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.EOFErrorJSError">
            <summary>设置 JSParser.EOFError(JSError errorId) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.EchoWriterGet">
            <summary>设置 JSParser.get_EchoWriter() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.EchoWriterSetTextWriter">
            <summary>设置 JSParser.set_EchoWriter(TextWriter value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.FileContextGet">
            <summary>设置 JSParser.get_FileContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.FileContextSetString">
            <summary>设置 JSParser.set_FileContext(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.GetNextToken">
            <summary>设置 JSParser.GetNextToken() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.GetSeverityStringInt32">
            <summary>设置 JSParser.GetSeverityString(Int32 severity) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.GlobalScopeGet">
            <summary>设置 JSParser.get_GlobalScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.GlobalScopeSetGlobalScope">
            <summary>设置 JSParser.set_GlobalScope(GlobalScope value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.IndexOfTokenJSTokenArrayJSToken">
            <summary>设置 JSParser.IndexOfToken(JSToken[] tokens, JSToken token) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.InitializeScannerCodeSettings">
            <summary>设置 JSParser.InitializeScanner(CodeSettings settings) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.MemberExpressionAstNodeListOfContext">
            <summary>设置 JSParser.MemberExpression(AstNode expression, List`1&lt;Context&gt; newContexts) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.OnCompilerErrorJScriptException">
            <summary>设置 JSParser.OnCompilerError(JScriptException se) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.OnUndefinedReferenceUndefinedReferenceException">
            <summary>设置 JSParser.OnUndefinedReference(UndefinedReferenceException ex) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ParseBlock">
            <summary>设置 JSParser.ParseBlock() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ParseBreakStatement">
            <summary>设置 JSParser.ParseBreakStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ParseCodeSettings">
            <summary>设置 JSParser.Parse(CodeSettings settings) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ParseConditionalCompilationIfBoolean">
            <summary>设置 JSParser.ParseConditionalCompilationIf(Boolean isElseIf) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ParseConditionalCompilationSet">
            <summary>设置 JSParser.ParseConditionalCompilationSet() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ParseContinueStatement">
            <summary>设置 JSParser.ParseContinueStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ParseDebuggerStatement">
            <summary>设置 JSParser.ParseDebuggerStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ParseDoStatement">
            <summary>设置 JSParser.ParseDoStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ParseExpression">
            <summary>设置 JSParser.ParseExpression() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ParseExpressionAstNodeBooleanBooleanJSToken">
            <summary>设置 JSParser.ParseExpression(AstNode leftHandSide, Boolean single, Boolean bCanAssign, JSToken inToken) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ParseExpressionBoolean">
            <summary>设置 JSParser.ParseExpression(Boolean single) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ParseExpressionBooleanJSToken">
            <summary>设置 JSParser.ParseExpression(Boolean single, JSToken inToken) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ParseExpressionCodeSettings">
            <summary>设置 JSParser.ParseExpression(CodeSettings settings) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ParseExpressionListJSToken">
            <summary>设置 JSParser.ParseExpressionList(JSToken terminator) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ParseForStatement">
            <summary>设置 JSParser.ParseForStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ParseFunctionFunctionTypeContext">
            <summary>设置 JSParser.ParseFunction(FunctionType functionType, Context fncCtx) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ParseIdentifierInitializerJSToken">
            <summary>设置 JSParser.ParseIdentifierInitializer(JSToken inToken) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ParseIfStatement">
            <summary>设置 JSParser.ParseIfStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ParseLeftHandSideExpressionBoolean">
            <summary>设置 JSParser.ParseLeftHandSideExpression(Boolean isMinus) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ParsePostfixExpressionAstNodeBooleanOut">
            <summary>设置 JSParser.ParsePostfixExpression(AstNode ast, Boolean&amp; isLeftHandSideExpr) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ParseReturnStatement">
            <summary>设置 JSParser.ParseReturnStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ParseStatementBooleanBoolean">
            <summary>设置 JSParser.ParseStatement(Boolean fSourceElement, Boolean skipImportantComment) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ParseStatementLevelConditionalCommentBoolean">
            <summary>设置 JSParser.ParseStatementLevelConditionalComment(Boolean fSourceElement) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ParseStatements">
            <summary>设置 JSParser.ParseStatements() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ParseSwitchStatement">
            <summary>设置 JSParser.ParseSwitchStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ParseThrowStatement">
            <summary>设置 JSParser.ParseThrowStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ParseTryStatement">
            <summary>设置 JSParser.ParseTryStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ParseVariableStatement">
            <summary>设置 JSParser.ParseVariableStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ParseWhileStatement">
            <summary>设置 JSParser.ParseWhileStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ParseWithStatement">
            <summary>设置 JSParser.ParseWithStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.PeekToken">
            <summary>设置 JSParser.PeekToken() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.PreprocessOnlyCodeSettings">
            <summary>设置 JSParser.PreprocessOnly(CodeSettings settings) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.PreprocessOnlyCodeSettingsTextWriter">
            <summary>设置 JSParser.PreprocessOnly(CodeSettings settings, TextWriter outputStream) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ReportErrorJSError">
            <summary>设置 JSParser.ReportError(JSError errorId) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ReportErrorJSErrorBoolean">
            <summary>设置 JSParser.ReportError(JSError errorId, Boolean skipToken) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ReportErrorJSErrorContextBoolean">
            <summary>设置 JSParser.ReportError(JSError errorId, Context context, Boolean skipToken) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ScanNextToken">
            <summary>设置 JSParser.ScanNextToken() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.ScanRegularExpression">
            <summary>设置 JSParser.ScanRegularExpression() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.SettingsGet">
            <summary>设置 JSParser.get_Settings() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.SkipTokensAndThrow">
            <summary>设置 JSParser.SkipTokensAndThrow() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.SkipTokensAndThrowAstNode">
            <summary>设置 JSParser.SkipTokensAndThrow(AstNode partialAST) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.TokenInListJSTokenArrayJSToken">
            <summary>设置 JSParser.TokenInList(JSToken[] tokens, JSToken token) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.UndefinedReferenceAddEventHandlerOfUndefinedReferenceEventArgs">
            <summary>设置 JSParser.add_UndefinedReference(EventHandler`1&lt;UndefinedReferenceEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.UndefinedReferenceRemoveEventHandlerOfUndefinedReferenceEventArgs">
            <summary>设置 JSParser.remove_UndefinedReference(EventHandler`1&lt;UndefinedReferenceEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser._ParseBreakStatementb__2eContext">
            <summary>设置 JSParser.&lt;ParseBreakStatement&gt;b__2e(Context c) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser._ParseContinueStatementb__2cContext">
            <summary>设置 JSParser.&lt;ParseContinueStatement&gt;b__2c(Context c) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser._ParseDebuggerStatementb__17Context">
            <summary>设置 JSParser.&lt;ParseDebuggerStatement&gt;b__17(Context c) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser._ParseExpressionListb__7dAstNode">
            <summary>设置 JSParser.&lt;ParseExpressionList&gt;b__7d(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser._ParseFunctionb__44ParameterDeclaration">
            <summary>设置 JSParser.&lt;ParseFunction&gt;b__44(ParameterDeclaration p) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser._ParseFunctionb__45Lookup">
            <summary>设置 JSParser.&lt;ParseFunction&gt;b__45(Lookup n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser._ParseFunctionb__46Lookup">
            <summary>设置 JSParser.&lt;ParseFunction&gt;b__46(Lookup n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser._ParseFunctionb__47Lookup">
            <summary>设置 JSParser.&lt;ParseFunction&gt;b__47(Lookup n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser._ParseFunctionb__48Lookup">
            <summary>设置 JSParser.&lt;ParseFunction&gt;b__48(Lookup n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser._ParseLeftHandSideExpressionb__6fAstNode">
            <summary>设置 JSParser.&lt;ParseLeftHandSideExpression&gt;b__6f(AstNode v) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser._ParseLeftHandSideExpressionb__70ObjectLiteralProperty">
            <summary>设置 JSParser.&lt;ParseLeftHandSideExpression&gt;b__70(ObjectLiteralProperty p) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser._ParseLeftHandSideExpressionb__71AstNode">
            <summary>设置 JSParser.&lt;ParseLeftHandSideExpression&gt;b__71(AstNode v) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser._ParseReturnStatementb__30Context">
            <summary>设置 JSParser.&lt;ParseReturnStatement&gt;b__30(Context c) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser._ParseStatementb__bContext">
            <summary>设置 JSParser.&lt;ParseStatement&gt;b__b(Context c) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser._ParseStatementb__cAstNode">
            <summary>设置 JSParser.&lt;ParseStatement&gt;b__c(AstNode s) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser._ParseStatementb__dAstNode">
            <summary>设置 JSParser.&lt;ParseStatement&gt;b__d(AstNode s) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser._ParseStatementb__eContext">
            <summary>设置 JSParser.&lt;ParseStatement&gt;b__e(Context c) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser._ParseThrowStatementb__38Context">
            <summary>设置 JSParser.&lt;ParseThrowStatement&gt;b__38(Context c) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser._ParseVariableStatementb__1aAstNode">
            <summary>设置 JSParser.&lt;ParseVariableStatement&gt;b__1a(AstNode d) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser._ParseVariableStatementb__1bContext">
            <summary>设置 JSParser.&lt;ParseVariableStatement&gt;b__1b(Context c) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser._ScanNextTokenb__81TextWriter">
            <summary>设置 JSParser.&lt;ScanNextToken&gt;b__81(TextWriter w) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser._ctorb__0ObjectGlobalDefineEventArgs">
            <summary>设置 JSParser.&lt;.ctor&gt;b__0(Object sender, GlobalDefineEventArgs ea) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser._ctorb__1ObjectNewModuleEventArgs">
            <summary>设置 JSParser.&lt;.ctor&gt;b__1(Object sender, NewModuleEventArgs ea) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.AppendImportantCommentsBlock">
            <summary>设置 JSParser.AppendImportantComments(Block block) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.CCTooComplicatedContext">
            <summary>设置 JSParser.CCTooComplicated(Context context) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.CompilerErrorAddEventHandlerOfJScriptExceptionEventArgs">
            <summary>设置 JSParser.add_CompilerError(EventHandler`1&lt;JScriptExceptionEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.CompilerErrorRemoveEventHandlerOfJScriptExceptionEventArgs">
            <summary>设置 JSParser.remove_CompilerError(EventHandler`1&lt;JScriptExceptionEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ConvertNumericLiteralToDoubleStringBooleanDoubleOut">
            <summary>设置 JSParser.ConvertNumericLiteralToDouble(String str, Boolean isInteger, Double&amp; doubleValue) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.CreateExpressionNodeContextAstNodeAstNode">
            <summary>设置 JSParser.CreateExpressionNode(Context op, AstNode operand1, AstNode operand2) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.CurrentPositionContext">
            <summary>设置 JSParser.CurrentPositionContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.DebugLookupsGet">
            <summary>设置 JSParser.get_DebugLookups() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.DebugLookupsSetICollectionOfString">
            <summary>设置 JSParser.set_DebugLookups(ICollection`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.EOFErrorJSError">
            <summary>设置 JSParser.EOFError(JSError errorId) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.EchoWriterGet">
            <summary>设置 JSParser.get_EchoWriter() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.EchoWriterSetTextWriter">
            <summary>设置 JSParser.set_EchoWriter(TextWriter value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.FileContextGet">
            <summary>设置 JSParser.get_FileContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.FileContextSetString">
            <summary>设置 JSParser.set_FileContext(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.GetNextToken">
            <summary>设置 JSParser.GetNextToken() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.GlobalScopeGet">
            <summary>设置 JSParser.get_GlobalScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.GlobalScopeSetGlobalScope">
            <summary>设置 JSParser.set_GlobalScope(GlobalScope value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.IndexOfTokenJSTokenArrayJSToken">
            <summary>设置 JSParser.IndexOfToken(JSToken[] tokens, JSToken token) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.InitializeScannerCodeSettings">
            <summary>设置 JSParser.InitializeScanner(CodeSettings settings) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.MemberExpressionAstNodeListOfContext">
            <summary>设置 JSParser.MemberExpression(AstNode expression, List`1&lt;Context&gt; newContexts) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.OnCompilerErrorJScriptException">
            <summary>设置 JSParser.OnCompilerError(JScriptException se) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.OnUndefinedReferenceUndefinedReferenceException">
            <summary>设置 JSParser.OnUndefinedReference(UndefinedReferenceException ex) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ParseBlock">
            <summary>设置 JSParser.ParseBlock() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ParseBreakStatement">
            <summary>设置 JSParser.ParseBreakStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ParseCodeSettings">
            <summary>设置 JSParser.Parse(CodeSettings settings) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ParseConditionalCompilationIfBoolean">
            <summary>设置 JSParser.ParseConditionalCompilationIf(Boolean isElseIf) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ParseConditionalCompilationSet">
            <summary>设置 JSParser.ParseConditionalCompilationSet() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ParseContinueStatement">
            <summary>设置 JSParser.ParseContinueStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ParseDebuggerStatement">
            <summary>设置 JSParser.ParseDebuggerStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ParseDoStatement">
            <summary>设置 JSParser.ParseDoStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ParseExpression">
            <summary>设置 JSParser.ParseExpression() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ParseExpressionAstNodeBooleanBooleanJSToken">
            <summary>设置 JSParser.ParseExpression(AstNode leftHandSide, Boolean single, Boolean bCanAssign, JSToken inToken) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ParseExpressionBoolean">
            <summary>设置 JSParser.ParseExpression(Boolean single) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ParseExpressionBooleanJSToken">
            <summary>设置 JSParser.ParseExpression(Boolean single, JSToken inToken) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ParseExpressionCodeSettings">
            <summary>设置 JSParser.ParseExpression(CodeSettings settings) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ParseExpressionListJSToken">
            <summary>设置 JSParser.ParseExpressionList(JSToken terminator) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ParseForStatement">
            <summary>设置 JSParser.ParseForStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ParseFunctionFunctionTypeContext">
            <summary>设置 JSParser.ParseFunction(FunctionType functionType, Context fncCtx) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ParseIdentifierInitializerJSToken">
            <summary>设置 JSParser.ParseIdentifierInitializer(JSToken inToken) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ParseIfStatement">
            <summary>设置 JSParser.ParseIfStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ParseLeftHandSideExpressionBoolean">
            <summary>设置 JSParser.ParseLeftHandSideExpression(Boolean isMinus) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ParsePostfixExpressionAstNodeBooleanOut">
            <summary>设置 JSParser.ParsePostfixExpression(AstNode ast, Boolean&amp; isLeftHandSideExpr) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ParseReturnStatement">
            <summary>设置 JSParser.ParseReturnStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ParseStatementBooleanBoolean">
            <summary>设置 JSParser.ParseStatement(Boolean fSourceElement, Boolean skipImportantComment) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ParseStatementLevelConditionalCommentBoolean">
            <summary>设置 JSParser.ParseStatementLevelConditionalComment(Boolean fSourceElement) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ParseStatements">
            <summary>设置 JSParser.ParseStatements() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ParseSwitchStatement">
            <summary>设置 JSParser.ParseSwitchStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ParseThrowStatement">
            <summary>设置 JSParser.ParseThrowStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ParseTryStatement">
            <summary>设置 JSParser.ParseTryStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ParseUnaryExpressionBooleanOutBoolean">
            <summary>设置 JSParser.ParseUnaryExpression(Boolean&amp; isLeftHandSideExpr, Boolean isMinus) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ParseVariableStatement">
            <summary>设置 JSParser.ParseVariableStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ParseWhileStatement">
            <summary>设置 JSParser.ParseWhileStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ParseWithStatement">
            <summary>设置 JSParser.ParseWithStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.PeekToken">
            <summary>设置 JSParser.PeekToken() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.PreprocessOnlyCodeSettings">
            <summary>设置 JSParser.PreprocessOnly(CodeSettings settings) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.PreprocessOnlyCodeSettingsTextWriter">
            <summary>设置 JSParser.PreprocessOnly(CodeSettings settings, TextWriter outputStream) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ReportErrorJSError">
            <summary>设置 JSParser.ReportError(JSError errorId) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ReportErrorJSErrorBoolean">
            <summary>设置 JSParser.ReportError(JSError errorId, Boolean skipToken) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ReportErrorJSErrorContextBoolean">
            <summary>设置 JSParser.ReportError(JSError errorId, Context context, Boolean skipToken) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ScanNextToken">
            <summary>设置 JSParser.ScanNextToken() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.ScanRegularExpression">
            <summary>设置 JSParser.ScanRegularExpression() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.SettingsGet">
            <summary>设置 JSParser.get_Settings() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.SkipTokensAndThrow">
            <summary>设置 JSParser.SkipTokensAndThrow() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.SkipTokensAndThrowAstNode">
            <summary>设置 JSParser.SkipTokensAndThrow(AstNode partialAST) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.TokenInListJSTokenArrayJSToken">
            <summary>设置 JSParser.TokenInList(JSToken[] tokens, JSToken token) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.UndefinedReferenceAddEventHandlerOfUndefinedReferenceEventArgs">
            <summary>设置 JSParser.add_UndefinedReference(EventHandler`1&lt;UndefinedReferenceEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances.UndefinedReferenceRemoveEventHandlerOfUndefinedReferenceEventArgs">
            <summary>设置 JSParser.remove_UndefinedReference(EventHandler`1&lt;UndefinedReferenceEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances._ParseExpressionListb__7dAstNode">
            <summary>设置 JSParser.&lt;ParseExpressionList&gt;b__7d(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances._ParseFunctionb__44ParameterDeclaration">
            <summary>设置 JSParser.&lt;ParseFunction&gt;b__44(ParameterDeclaration p) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances._ParseLeftHandSideExpressionb__70ObjectLiteralProperty">
            <summary>设置 JSParser.&lt;ParseLeftHandSideExpression&gt;b__70(ObjectLiteralProperty p) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances._ParseStatementb__cAstNode">
            <summary>设置 JSParser.&lt;ParseStatement&gt;b__c(AstNode s) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances._ParseStatementb__dAstNode">
            <summary>设置 JSParser.&lt;ParseStatement&gt;b__d(AstNode s) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances._ParseVariableStatementb__1aAstNode">
            <summary>设置 JSParser.&lt;ParseVariableStatement&gt;b__1a(AstNode d) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances._ScanNextTokenb__81TextWriter">
            <summary>设置 JSParser.&lt;ScanNextToken&gt;b__81(TextWriter w) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances._ctorb__0ObjectGlobalDefineEventArgs">
            <summary>设置 JSParser.&lt;.ctor&gt;b__0(Object sender, GlobalDefineEventArgs ea) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSParser.AllInstances._ctorb__1ObjectNewModuleEventArgs">
            <summary>设置 JSParser.&lt;.ctor&gt;b__1(Object sender, NewModuleEventArgs ea) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner">
            <summary>Microsoft.Ajax.Utilities.JSScanner 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.#ctor(Microsoft.Ajax.Utilities.JSScanner)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllowEmbeddedAspNetBlocksGet">
            <summary>设置 JSScanner.get_AllowEmbeddedAspNetBlocks() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllowEmbeddedAspNetBlocksSetBoolean">
            <summary>设置 JSScanner.set_AllowEmbeddedAspNetBlocks(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.CheckCaseInsensitiveSubstringString">
            <summary>设置 JSScanner.CheckCaseInsensitiveSubstring(String target) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.CheckForNumericBadEndingJSToken">
            <summary>设置 JSScanner.CheckForNumericBadEnding(JSToken token) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.CheckForOperatorSortedDictionaryOfStringFuncOfStringStringBoolean">
            <summary>设置 JSScanner.CheckForOperator(SortedDictionary`2&lt;String,Func`3&lt;String,String,Boolean&gt;&gt; operators) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.CheckSubstringInt32String">
            <summary>设置 JSScanner.CheckSubstring(Int32 startIndex, String target) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.Clone">
            <summary>设置 JSScanner.Clone() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.ConstructorContext">
            <summary>设置 JSScanner.JSScanner(Context sourceContext) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.ConstructorIDictionaryOfStringString">
            <summary>设置 JSScanner.JSScanner(IDictionary`2&lt;String,String&gt; defines) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.CurrentLineGet">
            <summary>设置 JSScanner.get_CurrentLine() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.DebugLookupCollectionGet">
            <summary>设置 JSScanner.get_DebugLookupCollection() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.DebugLookupCollectionSetICollectionOfString">
            <summary>设置 JSScanner.set_DebugLookupCollection(ICollection`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.GetCharInt32">
            <summary>设置 JSScanner.GetChar(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.GetHexValueChar">
            <summary>设置 JSScanner.GetHexValue(Char hex) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.GetOperatorPrecedenceContext">
            <summary>设置 JSScanner.GetOperatorPrecedence(Context op) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.GlobalDefineAddEventHandlerOfGlobalDefineEventArgs">
            <summary>设置 JSScanner.add_GlobalDefine(EventHandler`1&lt;GlobalDefineEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.GlobalDefineRemoveEventHandlerOfGlobalDefineEventArgs">
            <summary>设置 JSScanner.remove_GlobalDefine(EventHandler`1&lt;GlobalDefineEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.HandleErrorJSError">
            <summary>设置 JSScanner.HandleError(JSError error) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.IdentifierGet">
            <summary>设置 JSScanner.get_Identifier() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.IgnoreConditionalCompilationGet">
            <summary>设置 JSScanner.get_IgnoreConditionalCompilation() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.IgnoreConditionalCompilationSetBoolean">
            <summary>设置 JSScanner.set_IgnoreConditionalCompilation(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.IllegalCharacter">
            <summary>设置 JSScanner.IllegalCharacter() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.InitOperatorsPrec">
            <summary>设置 JSScanner.InitOperatorsPrec() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.IsAsciiLetterChar">
            <summary>设置 JSScanner.IsAsciiLetter(Char c) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.IsAssignmentOperatorJSToken">
            <summary>设置 JSScanner.IsAssignmentOperator(JSToken token) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.IsAtEndOfLineGet">
            <summary>设置 JSScanner.get_IsAtEndOfLine() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.IsBlankSpaceChar">
            <summary>设置 JSScanner.IsBlankSpace(Char c) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.IsDigitChar">
            <summary>设置 JSScanner.IsDigit(Char c) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.IsEndLineOrEOFCharInt32">
            <summary>设置 JSScanner.IsEndLineOrEOF(Char c, Int32 increment) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.IsEndOfFileGet">
            <summary>设置 JSScanner.get_IsEndOfFile() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.IsHexDigitChar">
            <summary>设置 JSScanner.IsHexDigit(Char c) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.IsIdentifierPartCharChar">
            <summary>设置 JSScanner.IsIdentifierPartChar(Char c) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.IsIdentifierStartCharCharRef">
            <summary>设置 JSScanner.IsIdentifierStartChar(Char&amp; c) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.IsKeywordStringBoolean">
            <summary>设置 JSScanner.IsKeyword(String name, Boolean strictMode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.IsLineTerminatorCharInt32">
            <summary>设置 JSScanner.IsLineTerminator(Char c, Int32 increment) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.IsProcessableOperatorJSToken">
            <summary>设置 JSScanner.IsProcessableOperator(JSToken token) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.IsRightAssociativeOperatorJSToken">
            <summary>设置 JSScanner.IsRightAssociativeOperator(JSToken token) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.IsSafeIdentifierPartChar">
            <summary>设置 JSScanner.IsSafeIdentifierPart(Char letter) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.IsSafeIdentifierStartChar">
            <summary>设置 JSScanner.IsSafeIdentifierStart(Char letter) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.IsSafeIdentifierString">
            <summary>设置 JSScanner.IsSafeIdentifier(String name) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.IsValidIdentifierPartChar">
            <summary>设置 JSScanner.IsValidIdentifierPart(Char letter) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.IsValidIdentifierPartString">
            <summary>设置 JSScanner.IsValidIdentifierPart(String text) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.IsValidIdentifierStartChar">
            <summary>设置 JSScanner.IsValidIdentifierStart(Char letter) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.IsValidIdentifierString">
            <summary>设置 JSScanner.IsValidIdentifier(String name) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.LiteralHasIssuesGet">
            <summary>设置 JSScanner.get_LiteralHasIssues() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.NewModuleAddEventHandlerOfNewModuleEventArgs">
            <summary>设置 JSScanner.add_NewModule(EventHandler`1&lt;NewModuleEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.NewModuleRemoveEventHandlerOfNewModuleEventArgs">
            <summary>设置 JSScanner.remove_NewModule(EventHandler`1&lt;NewModuleEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.OnGlobalDefineString">
            <summary>设置 JSScanner.OnGlobalDefine(String name) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.OnNewModuleString">
            <summary>设置 JSScanner.OnNewModule(String newModule) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.PPScanIdentifierBoolean">
            <summary>设置 JSScanner.PPScanIdentifier(Boolean forceUpper) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.PPScanIntegerInt32Out">
            <summary>设置 JSScanner.PPScanInteger(Int32&amp; intValue) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.PPSkipToDirectiveStringArray">
            <summary>设置 JSScanner.PPSkipToDirective(String[] endStrings) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.PeekUnicodeEscapeInt32CharRef">
            <summary>设置 JSScanner.PeekUnicodeEscape(Int32 index, Char&amp; ch) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.PeekUnicodeEscapeStringCharRef">
            <summary>设置 JSScanner.PeekUnicodeEscape(String str, Char&amp; ch) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.ScanAspNetBlock">
            <summary>设置 JSScanner.ScanAspNetBlock() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.ScanDebugDirective">
            <summary>设置 JSScanner.ScanDebugDirective() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.ScanDefineDirective">
            <summary>设置 JSScanner.ScanDefineDirective() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.ScanElseDirective">
            <summary>设置 JSScanner.ScanElseDirective() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.ScanEndIfDirective">
            <summary>设置 JSScanner.ScanEndIfDirective() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.ScanGlobalsDirective">
            <summary>设置 JSScanner.ScanGlobalsDirective() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.ScanHexDigitInt32Ref">
            <summary>设置 JSScanner.ScanHexDigit(Int32&amp; esc) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.ScanIdentifier">
            <summary>设置 JSScanner.ScanIdentifier() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.ScanIfDirective">
            <summary>设置 JSScanner.ScanIfDirective() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.ScanLineTerminatorChar">
            <summary>设置 JSScanner.ScanLineTerminator(Char ch) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.ScanNextTokenBoolean">
            <summary>设置 JSScanner.ScanNextToken(Boolean scanForRegularExpressionLiterals) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.ScanNumberChar">
            <summary>设置 JSScanner.ScanNumber(Char leadChar) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.ScanPreprocessingDirective">
            <summary>设置 JSScanner.ScanPreprocessingDirective() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.ScanRegExp">
            <summary>设置 JSScanner.ScanRegExp() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.ScanRegExpFlags">
            <summary>设置 JSScanner.ScanRegExpFlags() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.ScanSourceDirective">
            <summary>设置 JSScanner.ScanSourceDirective() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.ScanStringChar">
            <summary>设置 JSScanner.ScanString(Char delimiter) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.ScanUndefineDirective">
            <summary>设置 JSScanner.ScanUndefineDirective() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.SetPreprocessorDefinesIDictionaryOfStringString">
            <summary>设置 JSScanner.SetPreprocessorDefines(IDictionary`2&lt;String,String&gt; defines) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.SkipAspNetReplacement">
            <summary>设置 JSScanner.SkipAspNetReplacement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.SkipBlanks">
            <summary>设置 JSScanner.SkipBlanks() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.SkipMultilineComment">
            <summary>设置 JSScanner.SkipMultilineComment() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.SkipOneLineTerminator">
            <summary>设置 JSScanner.SkipOneLineTerminator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.SkipSingleLineComment">
            <summary>设置 JSScanner.SkipSingleLineComment() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.SkipToEndOfLine">
            <summary>设置 JSScanner.SkipToEndOfLine() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.StartLinePositionGet">
            <summary>设置 JSScanner.get_StartLinePosition() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.StaticConstructor">
            <summary>设置 JSScanner.JSScanner() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.StringLiteralValueGet">
            <summary>设置 JSScanner.get_StringLiteralValue() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.StripAssignmentJSToken">
            <summary>设置 JSScanner.StripAssignment(JSToken assignOp) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.StripDebugCommentBlocksGet">
            <summary>设置 JSScanner.get_StripDebugCommentBlocks() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.StripDebugCommentBlocksSetBoolean">
            <summary>设置 JSScanner.set_StripDebugCommentBlocks(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.SuppressErrorsGet">
            <summary>设置 JSScanner.get_SuppressErrors() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.SuppressErrorsSetBoolean">
            <summary>设置 JSScanner.set_SuppressErrors(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.UsePreprocessorDefinesGet">
            <summary>设置 JSScanner.get_UsePreprocessorDefines() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.UsePreprocessorDefinesSetBoolean">
            <summary>设置 JSScanner.set_UsePreprocessorDefines(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.AllowEmbeddedAspNetBlocksGet">
            <summary>设置 JSScanner.get_AllowEmbeddedAspNetBlocks() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.AllowEmbeddedAspNetBlocksSetBoolean">
            <summary>设置 JSScanner.set_AllowEmbeddedAspNetBlocks(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.CheckCaseInsensitiveSubstringString">
            <summary>设置 JSScanner.CheckCaseInsensitiveSubstring(String target) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.CheckForNumericBadEndingJSToken">
            <summary>设置 JSScanner.CheckForNumericBadEnding(JSToken token) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.CheckForOperatorSortedDictionaryOfStringFuncOfStringStringBoolean">
            <summary>设置 JSScanner.CheckForOperator(SortedDictionary`2&lt;String,Func`3&lt;String,String,Boolean&gt;&gt; operators) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.CheckSubstringInt32String">
            <summary>设置 JSScanner.CheckSubstring(Int32 startIndex, String target) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.Clone">
            <summary>设置 JSScanner.Clone() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.CurrentLineGet">
            <summary>设置 JSScanner.get_CurrentLine() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.DebugLookupCollectionGet">
            <summary>设置 JSScanner.get_DebugLookupCollection() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.DebugLookupCollectionSetICollectionOfString">
            <summary>设置 JSScanner.set_DebugLookupCollection(ICollection`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.GetCharInt32">
            <summary>设置 JSScanner.GetChar(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.GlobalDefineAddEventHandlerOfGlobalDefineEventArgs">
            <summary>设置 JSScanner.add_GlobalDefine(EventHandler`1&lt;GlobalDefineEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.GlobalDefineRemoveEventHandlerOfGlobalDefineEventArgs">
            <summary>设置 JSScanner.remove_GlobalDefine(EventHandler`1&lt;GlobalDefineEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.HandleErrorJSError">
            <summary>设置 JSScanner.HandleError(JSError error) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.IdentifierGet">
            <summary>设置 JSScanner.get_Identifier() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.IgnoreConditionalCompilationGet">
            <summary>设置 JSScanner.get_IgnoreConditionalCompilation() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.IgnoreConditionalCompilationSetBoolean">
            <summary>设置 JSScanner.set_IgnoreConditionalCompilation(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.IllegalCharacter">
            <summary>设置 JSScanner.IllegalCharacter() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.IsAtEndOfLineGet">
            <summary>设置 JSScanner.get_IsAtEndOfLine() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.IsEndLineOrEOFCharInt32">
            <summary>设置 JSScanner.IsEndLineOrEOF(Char c, Int32 increment) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.IsEndOfFileGet">
            <summary>设置 JSScanner.get_IsEndOfFile() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.IsIdentifierPartCharChar">
            <summary>设置 JSScanner.IsIdentifierPartChar(Char c) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.IsIdentifierStartCharCharRef">
            <summary>设置 JSScanner.IsIdentifierStartChar(Char&amp; c) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.IsLineTerminatorCharInt32">
            <summary>设置 JSScanner.IsLineTerminator(Char c, Int32 increment) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.LiteralHasIssuesGet">
            <summary>设置 JSScanner.get_LiteralHasIssues() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.NewModuleAddEventHandlerOfNewModuleEventArgs">
            <summary>设置 JSScanner.add_NewModule(EventHandler`1&lt;NewModuleEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.NewModuleRemoveEventHandlerOfNewModuleEventArgs">
            <summary>设置 JSScanner.remove_NewModule(EventHandler`1&lt;NewModuleEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.OnGlobalDefineString">
            <summary>设置 JSScanner.OnGlobalDefine(String name) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.OnNewModuleString">
            <summary>设置 JSScanner.OnNewModule(String newModule) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.PPScanIdentifierBoolean">
            <summary>设置 JSScanner.PPScanIdentifier(Boolean forceUpper) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.PPScanIntegerInt32Out">
            <summary>设置 JSScanner.PPScanInteger(Int32&amp; intValue) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.PPSkipToDirectiveStringArray">
            <summary>设置 JSScanner.PPSkipToDirective(String[] endStrings) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.PeekUnicodeEscapeInt32CharRef">
            <summary>设置 JSScanner.PeekUnicodeEscape(Int32 index, Char&amp; ch) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.ScanAspNetBlock">
            <summary>设置 JSScanner.ScanAspNetBlock() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.ScanDebugDirective">
            <summary>设置 JSScanner.ScanDebugDirective() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.ScanDefineDirective">
            <summary>设置 JSScanner.ScanDefineDirective() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.ScanElseDirective">
            <summary>设置 JSScanner.ScanElseDirective() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.ScanEndIfDirective">
            <summary>设置 JSScanner.ScanEndIfDirective() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.ScanGlobalsDirective">
            <summary>设置 JSScanner.ScanGlobalsDirective() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.ScanHexDigitInt32Ref">
            <summary>设置 JSScanner.ScanHexDigit(Int32&amp; esc) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.ScanIdentifier">
            <summary>设置 JSScanner.ScanIdentifier() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.ScanIfDirective">
            <summary>设置 JSScanner.ScanIfDirective() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.ScanLineTerminatorChar">
            <summary>设置 JSScanner.ScanLineTerminator(Char ch) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.ScanNextTokenBoolean">
            <summary>设置 JSScanner.ScanNextToken(Boolean scanForRegularExpressionLiterals) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.ScanNumberChar">
            <summary>设置 JSScanner.ScanNumber(Char leadChar) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.ScanPreprocessingDirective">
            <summary>设置 JSScanner.ScanPreprocessingDirective() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.ScanRegExp">
            <summary>设置 JSScanner.ScanRegExp() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.ScanRegExpFlags">
            <summary>设置 JSScanner.ScanRegExpFlags() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.ScanSourceDirective">
            <summary>设置 JSScanner.ScanSourceDirective() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.ScanStringChar">
            <summary>设置 JSScanner.ScanString(Char delimiter) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.ScanUndefineDirective">
            <summary>设置 JSScanner.ScanUndefineDirective() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.SetPreprocessorDefinesIDictionaryOfStringString">
            <summary>设置 JSScanner.SetPreprocessorDefines(IDictionary`2&lt;String,String&gt; defines) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.SkipAspNetReplacement">
            <summary>设置 JSScanner.SkipAspNetReplacement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.SkipBlanks">
            <summary>设置 JSScanner.SkipBlanks() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.SkipMultilineComment">
            <summary>设置 JSScanner.SkipMultilineComment() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.SkipOneLineTerminator">
            <summary>设置 JSScanner.SkipOneLineTerminator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.SkipSingleLineComment">
            <summary>设置 JSScanner.SkipSingleLineComment() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.SkipToEndOfLine">
            <summary>设置 JSScanner.SkipToEndOfLine() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.StartLinePositionGet">
            <summary>设置 JSScanner.get_StartLinePosition() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.StringLiteralValueGet">
            <summary>设置 JSScanner.get_StringLiteralValue() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.StripDebugCommentBlocksGet">
            <summary>设置 JSScanner.get_StripDebugCommentBlocks() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.StripDebugCommentBlocksSetBoolean">
            <summary>设置 JSScanner.set_StripDebugCommentBlocks(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.SuppressErrorsGet">
            <summary>设置 JSScanner.get_SuppressErrors() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.SuppressErrorsSetBoolean">
            <summary>设置 JSScanner.set_SuppressErrors(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.UsePreprocessorDefinesGet">
            <summary>设置 JSScanner.get_UsePreprocessorDefines() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSScanner.AllInstances.UsePreprocessorDefinesSetBoolean">
            <summary>设置 JSScanner.set_UsePreprocessorDefines(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField">
            <summary>Microsoft.Ajax.Utilities.JSVariableField 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.#ctor(Microsoft.Ajax.Utilities.JSVariableField)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AddReferenceINameReference">
            <summary>设置 JSVariableField.AddReference(INameReference reference) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AddReferencesIEnumerableOfINameReference">
            <summary>设置 JSVariableField.AddReferences(IEnumerable`1&lt;INameReference&gt; references) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AttributesGet">
            <summary>设置 JSVariableField.get_Attributes() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AttributesSetFieldAttributes">
            <summary>设置 JSVariableField.set_Attributes(FieldAttributes value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.CanCrunchGet">
            <summary>设置 JSVariableField.get_CanCrunch() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.CanCrunchSetBoolean">
            <summary>设置 JSVariableField.set_CanCrunch(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.ConstructorFieldTypeJSVariableField">
            <summary>设置 JSVariableField.JSVariableField(FieldType fieldType, JSVariableField outerField) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.ConstructorFieldTypeStringFieldAttributesObject">
            <summary>设置 JSVariableField.JSVariableField(FieldType fieldType, String name, FieldAttributes fieldAttributes, Object value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.CrunchedNameGet">
            <summary>设置 JSVariableField.get_CrunchedName() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.CrunchedNameSetString">
            <summary>设置 JSVariableField.set_CrunchedName(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.DeclarationsGet">
            <summary>设置 JSVariableField.get_Declarations() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.Detach">
            <summary>设置 JSVariableField.Detach() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.FieldTypeGet">
            <summary>设置 JSVariableField.get_FieldType() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.FieldTypeSetFieldType">
            <summary>设置 JSVariableField.set_FieldType(FieldType value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.FieldValueGet">
            <summary>设置 JSVariableField.get_FieldValue() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.FieldValueSetObject">
            <summary>设置 JSVariableField.set_FieldValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.GetHashCode">
            <summary>设置 JSVariableField.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.GhostedFieldGet">
            <summary>设置 JSVariableField.get_GhostedField() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.GhostedFieldSetJSVariableField">
            <summary>设置 JSVariableField.set_GhostedField(JSVariableField value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.HasNoReferencesGet">
            <summary>设置 JSVariableField.get_HasNoReferences() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.HasNoReferencesSetBoolean">
            <summary>设置 JSVariableField.set_HasNoReferences(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.InitializationOnlyGet">
            <summary>设置 JSVariableField.get_InitializationOnly() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.InitializationOnlySetBoolean">
            <summary>设置 JSVariableField.set_InitializationOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.IsAmbiguousGet">
            <summary>设置 JSVariableField.get_IsAmbiguous() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.IsAmbiguousSetBoolean">
            <summary>设置 JSVariableField.set_IsAmbiguous(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.IsDeclaredGet">
            <summary>设置 JSVariableField.get_IsDeclared() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.IsDeclaredSetBoolean">
            <summary>设置 JSVariableField.set_IsDeclared(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.IsFunctionGet">
            <summary>设置 JSVariableField.get_IsFunction() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.IsFunctionSetBoolean">
            <summary>设置 JSVariableField.set_IsFunction(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.IsGeneratedGet">
            <summary>设置 JSVariableField.get_IsGenerated() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.IsGeneratedSetBoolean">
            <summary>设置 JSVariableField.set_IsGenerated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.IsLiteralGet">
            <summary>设置 JSVariableField.get_IsLiteral() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.IsOuterReferenceGet">
            <summary>设置 JSVariableField.get_IsOuterReference() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.IsPlaceholderGet">
            <summary>设置 JSVariableField.get_IsPlaceholder() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.IsPlaceholderSetBoolean">
            <summary>设置 JSVariableField.set_IsPlaceholder(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.IsReferencedGet">
            <summary>设置 JSVariableField.get_IsReferenced() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.IsReferencedInnerScopeGet">
            <summary>设置 JSVariableField.get_IsReferencedInnerScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.IsSameFieldJSVariableField">
            <summary>设置 JSVariableField.IsSameField(JSVariableField otherField) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.NameGet">
            <summary>设置 JSVariableField.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.NameSetString">
            <summary>设置 JSVariableField.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.OnlyDeclarationGet">
            <summary>设置 JSVariableField.get_OnlyDeclaration() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.OnlyReferenceGet">
            <summary>设置 JSVariableField.get_OnlyReference() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.OriginalContextGet">
            <summary>设置 JSVariableField.get_OriginalContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.OriginalContextSetContext">
            <summary>设置 JSVariableField.set_OriginalContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.OuterFieldGet">
            <summary>设置 JSVariableField.get_OuterField() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.OuterFieldSetJSVariableField">
            <summary>设置 JSVariableField.set_OuterField(JSVariableField value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.OwningScopeGet">
            <summary>设置 JSVariableField.get_OwningScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.OwningScopeSetActivationObject">
            <summary>设置 JSVariableField.set_OwningScope(ActivationObject value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.PositionGet">
            <summary>设置 JSVariableField.get_Position() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.PositionSetInt32">
            <summary>设置 JSVariableField.set_Position(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.RefCountGet">
            <summary>设置 JSVariableField.get_RefCount() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.ReferencesGet">
            <summary>设置 JSVariableField.get_References() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.SetFieldsBasedOnTypeFieldType">
            <summary>设置 JSVariableField.SetFieldsBasedOnType(FieldType fieldType) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.ToString">
            <summary>设置 JSVariableField.ToString() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.WasRemovedGet">
            <summary>设置 JSVariableField.get_WasRemoved() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.WasRemovedSetBoolean">
            <summary>设置 JSVariableField.set_WasRemoved(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.AddReferenceINameReference">
            <summary>设置 JSVariableField.AddReference(INameReference reference) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.AddReferencesIEnumerableOfINameReference">
            <summary>设置 JSVariableField.AddReferences(IEnumerable`1&lt;INameReference&gt; references) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.AttributesGet">
            <summary>设置 JSVariableField.get_Attributes() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.AttributesSetFieldAttributes">
            <summary>设置 JSVariableField.set_Attributes(FieldAttributes value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.CanCrunchGet">
            <summary>设置 JSVariableField.get_CanCrunch() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.CanCrunchSetBoolean">
            <summary>设置 JSVariableField.set_CanCrunch(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.CrunchedNameGet">
            <summary>设置 JSVariableField.get_CrunchedName() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.CrunchedNameSetString">
            <summary>设置 JSVariableField.set_CrunchedName(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.DeclarationsGet">
            <summary>设置 JSVariableField.get_Declarations() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.Detach">
            <summary>设置 JSVariableField.Detach() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.FieldTypeGet">
            <summary>设置 JSVariableField.get_FieldType() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.FieldTypeSetFieldType">
            <summary>设置 JSVariableField.set_FieldType(FieldType value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.FieldValueGet">
            <summary>设置 JSVariableField.get_FieldValue() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.FieldValueSetObject">
            <summary>设置 JSVariableField.set_FieldValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.GetHashCode01">
            <summary>设置 JSVariableField.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.GhostedFieldGet">
            <summary>设置 JSVariableField.get_GhostedField() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.GhostedFieldSetJSVariableField">
            <summary>设置 JSVariableField.set_GhostedField(JSVariableField value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.HasNoReferencesGet">
            <summary>设置 JSVariableField.get_HasNoReferences() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.HasNoReferencesSetBoolean">
            <summary>设置 JSVariableField.set_HasNoReferences(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.InitializationOnlyGet">
            <summary>设置 JSVariableField.get_InitializationOnly() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.InitializationOnlySetBoolean">
            <summary>设置 JSVariableField.set_InitializationOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.IsAmbiguousGet">
            <summary>设置 JSVariableField.get_IsAmbiguous() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.IsAmbiguousSetBoolean">
            <summary>设置 JSVariableField.set_IsAmbiguous(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.IsDeclaredGet">
            <summary>设置 JSVariableField.get_IsDeclared() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.IsDeclaredSetBoolean">
            <summary>设置 JSVariableField.set_IsDeclared(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.IsFunctionGet">
            <summary>设置 JSVariableField.get_IsFunction() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.IsFunctionSetBoolean">
            <summary>设置 JSVariableField.set_IsFunction(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.IsGeneratedGet">
            <summary>设置 JSVariableField.get_IsGenerated() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.IsGeneratedSetBoolean">
            <summary>设置 JSVariableField.set_IsGenerated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.IsLiteralGet">
            <summary>设置 JSVariableField.get_IsLiteral() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.IsOuterReferenceGet">
            <summary>设置 JSVariableField.get_IsOuterReference() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.IsPlaceholderGet">
            <summary>设置 JSVariableField.get_IsPlaceholder() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.IsPlaceholderSetBoolean">
            <summary>设置 JSVariableField.set_IsPlaceholder(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.IsReferencedGet">
            <summary>设置 JSVariableField.get_IsReferenced() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.IsReferencedInnerScopeGet">
            <summary>设置 JSVariableField.get_IsReferencedInnerScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.IsSameFieldJSVariableField">
            <summary>设置 JSVariableField.IsSameField(JSVariableField otherField) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.NameGet">
            <summary>设置 JSVariableField.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.NameSetString">
            <summary>设置 JSVariableField.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.OnlyDeclarationGet">
            <summary>设置 JSVariableField.get_OnlyDeclaration() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.OnlyReferenceGet">
            <summary>设置 JSVariableField.get_OnlyReference() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.OriginalContextGet">
            <summary>设置 JSVariableField.get_OriginalContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.OriginalContextSetContext">
            <summary>设置 JSVariableField.set_OriginalContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.OuterFieldGet">
            <summary>设置 JSVariableField.get_OuterField() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.OuterFieldSetJSVariableField">
            <summary>设置 JSVariableField.set_OuterField(JSVariableField value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.OwningScopeGet">
            <summary>设置 JSVariableField.get_OwningScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.OwningScopeSetActivationObject">
            <summary>设置 JSVariableField.set_OwningScope(ActivationObject value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.PositionGet">
            <summary>设置 JSVariableField.get_Position() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.PositionSetInt32">
            <summary>设置 JSVariableField.set_Position(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.RefCountGet">
            <summary>设置 JSVariableField.get_RefCount() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.ReferencesGet">
            <summary>设置 JSVariableField.get_References() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.SetFieldsBasedOnTypeFieldType">
            <summary>设置 JSVariableField.SetFieldsBasedOnType(FieldType fieldType) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.ToString01">
            <summary>设置 JSVariableField.ToString() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.WasRemovedGet">
            <summary>设置 JSVariableField.get_WasRemoved() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJSVariableField.AllInstances.WasRemovedSetBoolean">
            <summary>设置 JSVariableField.set_WasRemoved(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException">
            <summary>Microsoft.Ajax.Utilities.JScriptException 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.#ctor(Microsoft.Ajax.Utilities.JScriptException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.CanRecoverGet">
            <summary>设置 JScriptException.get_CanRecover() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.CanRecoverSetBoolean">
            <summary>设置 JScriptException.set_CanRecover(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.ColumnGet">
            <summary>设置 JScriptException.get_Column() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.ConstructorJSErrorContext">
            <summary>设置 JScriptException.JScriptException(JSError errorNumber, Context context) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.EndColumnGet">
            <summary>设置 JScriptException.get_EndColumn() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.EndLineGet">
            <summary>设置 JScriptException.get_EndLine() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.ErrorCodeGet">
            <summary>设置 JScriptException.get_ErrorCode() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.ErrorCodeSetJSError">
            <summary>设置 JScriptException.set_ErrorCode(JSError value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.ErrorSegmentGet">
            <summary>设置 JScriptException.get_ErrorSegment() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.FileContextGet">
            <summary>设置 JScriptException.get_FileContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.FileContextSetString">
            <summary>设置 JScriptException.set_FileContext(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.FullSourceGet">
            <summary>设置 JScriptException.get_FullSource() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.GetSeverityJSError">
            <summary>设置 JScriptException.GetSeverity(JSError errorCode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.IsErrorGet">
            <summary>设置 JScriptException.get_IsError() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.IsErrorSetBoolean">
            <summary>设置 JScriptException.set_IsError(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.LineGet">
            <summary>设置 JScriptException.get_Line() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.LineTextGet">
            <summary>设置 JScriptException.get_LineText() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.MessageGet">
            <summary>设置 JScriptException.get_Message() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.SeverityGet">
            <summary>设置 JScriptException.get_Severity() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.StartColumnGet">
            <summary>设置 JScriptException.get_StartColumn() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.ValueGet">
            <summary>设置 JScriptException.get_Value() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.ValueSetString">
            <summary>设置 JScriptException.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException._get_Messageb__0Context">
            <summary>设置 JScriptException.&lt;get_Message&gt;b__0(Context c) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.AllInstances.CanRecoverGet">
            <summary>设置 JScriptException.get_CanRecover() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.AllInstances.CanRecoverSetBoolean">
            <summary>设置 JScriptException.set_CanRecover(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.AllInstances.ColumnGet">
            <summary>设置 JScriptException.get_Column() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.AllInstances.EndColumnGet">
            <summary>设置 JScriptException.get_EndColumn() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.AllInstances.EndLineGet">
            <summary>设置 JScriptException.get_EndLine() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.AllInstances.ErrorCodeGet">
            <summary>设置 JScriptException.get_ErrorCode() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.AllInstances.ErrorCodeSetJSError">
            <summary>设置 JScriptException.set_ErrorCode(JSError value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.AllInstances.ErrorSegmentGet">
            <summary>设置 JScriptException.get_ErrorSegment() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.AllInstances.FileContextGet">
            <summary>设置 JScriptException.get_FileContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.AllInstances.FileContextSetString">
            <summary>设置 JScriptException.set_FileContext(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.AllInstances.FullSourceGet">
            <summary>设置 JScriptException.get_FullSource() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.AllInstances.IsErrorGet">
            <summary>设置 JScriptException.get_IsError() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.AllInstances.IsErrorSetBoolean">
            <summary>设置 JScriptException.set_IsError(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.AllInstances.LineGet">
            <summary>设置 JScriptException.get_Line() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.AllInstances.LineTextGet">
            <summary>设置 JScriptException.get_LineText() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.AllInstances.MessageGet">
            <summary>设置 JScriptException.get_Message() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.AllInstances.SeverityGet">
            <summary>设置 JScriptException.get_Severity() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.AllInstances.StartColumnGet">
            <summary>设置 JScriptException.get_StartColumn() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.AllInstances.ValueGet">
            <summary>设置 JScriptException.get_Value() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptException.AllInstances.ValueSetString">
            <summary>设置 JScriptException.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimJScriptExceptionEventArgs">
            <summary>Microsoft.Ajax.Utilities.JScriptExceptionEventArgs 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimJScriptExceptionEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimJScriptExceptionEventArgs.#ctor(Microsoft.Ajax.Utilities.JScriptExceptionEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimJScriptExceptionEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimJScriptExceptionEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptExceptionEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptExceptionEventArgs.ConstructorJScriptExceptionContextError">
            <summary>设置 JScriptExceptionEventArgs.JScriptExceptionEventArgs(JScriptException exception, ContextError error) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptExceptionEventArgs.ErrorGet">
            <summary>设置 JScriptExceptionEventArgs.get_Error() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptExceptionEventArgs.ErrorSetContextError">
            <summary>设置 JScriptExceptionEventArgs.set_Error(ContextError value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptExceptionEventArgs.ExceptionGet">
            <summary>设置 JScriptExceptionEventArgs.get_Exception() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptExceptionEventArgs.ExceptionSetJScriptException">
            <summary>设置 JScriptExceptionEventArgs.set_Exception(JScriptException value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimJScriptExceptionEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptExceptionEventArgs.AllInstances.ErrorGet">
            <summary>设置 JScriptExceptionEventArgs.get_Error() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptExceptionEventArgs.AllInstances.ErrorSetContextError">
            <summary>设置 JScriptExceptionEventArgs.set_Error(ContextError value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptExceptionEventArgs.AllInstances.ExceptionGet">
            <summary>设置 JScriptExceptionEventArgs.get_Exception() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimJScriptExceptionEventArgs.AllInstances.ExceptionSetJScriptException">
            <summary>设置 JScriptExceptionEventArgs.set_Exception(JScriptException value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement">
            <summary>Microsoft.Ajax.Utilities.LabeledStatement 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement.#ctor(Microsoft.Ajax.Utilities.LabeledStatement)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement.AcceptIVisitor">
            <summary>设置 LabeledStatement.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement.ChildrenGet">
            <summary>设置 LabeledStatement.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement.ColonContextGet">
            <summary>设置 LabeledStatement.get_ColonContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement.ColonContextSetContext">
            <summary>设置 LabeledStatement.set_ColonContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement.ConstructorContextJSParser">
            <summary>设置 LabeledStatement.LabeledStatement(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement.LabelGet">
            <summary>设置 LabeledStatement.get_Label() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement.LabelSetString">
            <summary>设置 LabeledStatement.set_Label(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement.LeftHandSideGet">
            <summary>设置 LabeledStatement.get_LeftHandSide() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement.NestCountGet">
            <summary>设置 LabeledStatement.get_NestCount() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement.NestCountSetInt32">
            <summary>设置 LabeledStatement.set_NestCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement.ReplaceChildAstNodeAstNode">
            <summary>设置 LabeledStatement.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement.RequiresSeparatorGet">
            <summary>设置 LabeledStatement.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement.StatementGet">
            <summary>设置 LabeledStatement.get_Statement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement.StatementSetAstNode">
            <summary>设置 LabeledStatement.set_Statement(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement._set_Statementb__0AstNode">
            <summary>设置 LabeledStatement.&lt;set_Statement&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement._set_Statementb__1AstNode">
            <summary>设置 LabeledStatement.&lt;set_Statement&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement.AllInstances.AcceptIVisitor">
            <summary>设置 LabeledStatement.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement.AllInstances.ChildrenGet">
            <summary>设置 LabeledStatement.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement.AllInstances.ColonContextGet">
            <summary>设置 LabeledStatement.get_ColonContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement.AllInstances.ColonContextSetContext">
            <summary>设置 LabeledStatement.set_ColonContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement.AllInstances.LabelGet">
            <summary>设置 LabeledStatement.get_Label() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement.AllInstances.LabelSetString">
            <summary>设置 LabeledStatement.set_Label(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement.AllInstances.LeftHandSideGet">
            <summary>设置 LabeledStatement.get_LeftHandSide() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement.AllInstances.NestCountGet">
            <summary>设置 LabeledStatement.get_NestCount() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement.AllInstances.NestCountSetInt32">
            <summary>设置 LabeledStatement.set_NestCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement.AllInstances.ReplaceChildAstNodeAstNode">
            <summary>设置 LabeledStatement.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement.AllInstances.RequiresSeparatorGet">
            <summary>设置 LabeledStatement.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement.AllInstances.StatementGet">
            <summary>设置 LabeledStatement.get_Statement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement.AllInstances.StatementSetAstNode">
            <summary>设置 LabeledStatement.set_Statement(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement.AllInstances._set_Statementb__0AstNode">
            <summary>设置 LabeledStatement.&lt;set_Statement&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLabeledStatement.AllInstances._set_Statementb__1AstNode">
            <summary>设置 LabeledStatement.&lt;set_Statement&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimLexicalDeclaration">
            <summary>Microsoft.Ajax.Utilities.LexicalDeclaration 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimLexicalDeclaration.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimLexicalDeclaration.#ctor(Microsoft.Ajax.Utilities.LexicalDeclaration)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimLexicalDeclaration.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimLexicalDeclaration.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimLexicalDeclaration.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimLexicalDeclaration.Bind(System.Collections.Generic.IEnumerable{Microsoft.Ajax.Utilities.VariableDeclaration})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLexicalDeclaration.AcceptIVisitor">
            <summary>设置 LexicalDeclaration.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLexicalDeclaration.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLexicalDeclaration.ConstructorContextJSParser">
            <summary>设置 LexicalDeclaration.LexicalDeclaration(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLexicalDeclaration.StatementTokenGet">
            <summary>设置 LexicalDeclaration.get_StatementToken() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLexicalDeclaration.StatementTokenSetJSToken">
            <summary>设置 LexicalDeclaration.set_StatementToken(JSToken value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimLexicalDeclaration.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLexicalDeclaration.AllInstances.AcceptIVisitor">
            <summary>设置 LexicalDeclaration.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLexicalDeclaration.AllInstances.StatementTokenGet">
            <summary>设置 LexicalDeclaration.get_StatementToken() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLexicalDeclaration.AllInstances.StatementTokenSetJSToken">
            <summary>设置 LexicalDeclaration.set_StatementToken(JSToken value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot">
            <summary>Microsoft.Ajax.Utilities.LogicalNot 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.#ctor(Microsoft.Ajax.Utilities.LogicalNot)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.Bind(Microsoft.Ajax.Utilities.IVisitor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.Apply">
            <summary>设置 LogicalNot.Apply() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.ApplyAstNodeJSParser">
            <summary>设置 LogicalNot.Apply(AstNode node, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.ConstructorAstNodeJSParser">
            <summary>设置 LogicalNot.LogicalNot(AstNode node, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.ConvertBinaryOperatorBinaryOperator">
            <summary>设置 LogicalNot.ConvertBinaryOperator(BinaryOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.Measure">
            <summary>设置 LogicalNot.Measure() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.MeasureBinaryOperatorBinaryOperator">
            <summary>设置 LogicalNot.MeasureBinaryOperator(BinaryOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.TypicalHandlerAstNode">
            <summary>设置 LogicalNot.TypicalHandler(AstNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.VisitArrayLiteral">
            <summary>设置 LogicalNot.Visit(ArrayLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.VisitAstNodeList">
            <summary>设置 LogicalNot.Visit(AstNodeList node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.VisitBinaryOperator">
            <summary>设置 LogicalNot.Visit(BinaryOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.VisitCallNode">
            <summary>设置 LogicalNot.Visit(CallNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.VisitConditional">
            <summary>设置 LogicalNot.Visit(Conditional node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.VisitConstantWrapper">
            <summary>设置 LogicalNot.Visit(ConstantWrapper node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.VisitGroupingOperator">
            <summary>设置 LogicalNot.Visit(GroupingOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.VisitLookup">
            <summary>设置 LogicalNot.Visit(Lookup node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.VisitMember">
            <summary>设置 LogicalNot.Visit(Member node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.VisitObjectLiteral">
            <summary>设置 LogicalNot.Visit(ObjectLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.VisitRegExpLiteral">
            <summary>设置 LogicalNot.Visit(RegExpLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.VisitThisLiteral">
            <summary>设置 LogicalNot.Visit(ThisLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.VisitUnaryOperator">
            <summary>设置 LogicalNot.Visit(UnaryOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.WrapWithLogicalNotAstNode">
            <summary>设置 LogicalNot.WrapWithLogicalNot(AstNode operand) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.AllInstances.Apply">
            <summary>设置 LogicalNot.Apply() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.AllInstances.ConvertBinaryOperatorBinaryOperator">
            <summary>设置 LogicalNot.ConvertBinaryOperator(BinaryOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.AllInstances.Measure">
            <summary>设置 LogicalNot.Measure() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.AllInstances.MeasureBinaryOperatorBinaryOperator">
            <summary>设置 LogicalNot.MeasureBinaryOperator(BinaryOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.AllInstances.TypicalHandlerAstNode">
            <summary>设置 LogicalNot.TypicalHandler(AstNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.AllInstances.VisitArrayLiteral">
            <summary>设置 LogicalNot.Visit(ArrayLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.AllInstances.VisitAstNodeList">
            <summary>设置 LogicalNot.Visit(AstNodeList node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.AllInstances.VisitBinaryOperator">
            <summary>设置 LogicalNot.Visit(BinaryOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.AllInstances.VisitCallNode">
            <summary>设置 LogicalNot.Visit(CallNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.AllInstances.VisitConditional">
            <summary>设置 LogicalNot.Visit(Conditional node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.AllInstances.VisitConstantWrapper">
            <summary>设置 LogicalNot.Visit(ConstantWrapper node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.AllInstances.VisitGroupingOperator">
            <summary>设置 LogicalNot.Visit(GroupingOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.AllInstances.VisitLookup">
            <summary>设置 LogicalNot.Visit(Lookup node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.AllInstances.VisitMember">
            <summary>设置 LogicalNot.Visit(Member node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.AllInstances.VisitObjectLiteral">
            <summary>设置 LogicalNot.Visit(ObjectLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.AllInstances.VisitRegExpLiteral">
            <summary>设置 LogicalNot.Visit(RegExpLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.AllInstances.VisitThisLiteral">
            <summary>设置 LogicalNot.Visit(ThisLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.AllInstances.VisitUnaryOperator">
            <summary>设置 LogicalNot.Visit(UnaryOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLogicalNot.AllInstances.WrapWithLogicalNotAstNode">
            <summary>设置 LogicalNot.WrapWithLogicalNot(AstNode operand) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimLookup">
            <summary>Microsoft.Ajax.Utilities.Lookup 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimLookup.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimLookup.#ctor(Microsoft.Ajax.Utilities.Lookup)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimLookup.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimLookup.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimLookup.Bind(Microsoft.Ajax.Utilities.INameReference)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.AcceptIVisitor">
            <summary>设置 Lookup.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.AssignmentValueGet">
            <summary>设置 Lookup.get_AssignmentValue() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.ConstructorContextJSParser">
            <summary>设置 Lookup.Lookup(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.GetFunctionGuessAstNode">
            <summary>设置 Lookup.GetFunctionGuess(AstNode target) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.IsAssignmentGet">
            <summary>设置 Lookup.get_IsAssignment() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.IsDebuggerStatementGet">
            <summary>设置 Lookup.get_IsDebuggerStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.IsEquivalentToAstNode">
            <summary>设置 Lookup.IsEquivalentTo(AstNode otherNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.IsGeneratedGet">
            <summary>设置 Lookup.get_IsGenerated() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.IsGeneratedSetBoolean">
            <summary>设置 Lookup.set_IsGenerated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.MatchMemberNameAstNodeStringInt32Int32">
            <summary>设置 Lookup.MatchMemberName(AstNode node, String lookup, Int32 startIndex, Int32 endIndex) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.MatchesMemberChainAstNodeStringInt32">
            <summary>设置 Lookup.MatchesMemberChain(AstNode parent, String lookup, Int32 startIndex) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.NameGet">
            <summary>设置 Lookup.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.NameSetString">
            <summary>设置 Lookup.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.RefTypeGet">
            <summary>设置 Lookup.get_RefType() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.RefTypeSetReferenceType">
            <summary>设置 Lookup.set_RefType(ReferenceType value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.ToString">
            <summary>设置 Lookup.ToString() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.VariableFieldGet">
            <summary>设置 Lookup.get_VariableField() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.VariableFieldSetJSVariableField">
            <summary>设置 Lookup.set_VariableField(JSVariableField value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.VariableScopeGet">
            <summary>设置 Lookup.get_VariableScope() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimLookup.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.AllInstances.AcceptIVisitor">
            <summary>设置 Lookup.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.AllInstances.AssignmentValueGet">
            <summary>设置 Lookup.get_AssignmentValue() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.AllInstances.GetFunctionGuessAstNode">
            <summary>设置 Lookup.GetFunctionGuess(AstNode target) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.AllInstances.IsAssignmentGet">
            <summary>设置 Lookup.get_IsAssignment() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.AllInstances.IsDebuggerStatementGet">
            <summary>设置 Lookup.get_IsDebuggerStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.AllInstances.IsEquivalentToAstNode">
            <summary>设置 Lookup.IsEquivalentTo(AstNode otherNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.AllInstances.IsGeneratedGet">
            <summary>设置 Lookup.get_IsGenerated() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.AllInstances.IsGeneratedSetBoolean">
            <summary>设置 Lookup.set_IsGenerated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.AllInstances.NameGet">
            <summary>设置 Lookup.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.AllInstances.NameSetString">
            <summary>设置 Lookup.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.AllInstances.RefTypeGet">
            <summary>设置 Lookup.get_RefType() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.AllInstances.RefTypeSetReferenceType">
            <summary>设置 Lookup.set_RefType(ReferenceType value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.AllInstances.ToString01">
            <summary>设置 Lookup.ToString() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.AllInstances.VariableFieldGet">
            <summary>设置 Lookup.get_VariableField() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.AllInstances.VariableFieldSetJSVariableField">
            <summary>设置 Lookup.set_VariableField(JSVariableField value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimLookup.AllInstances.VariableScopeGet">
            <summary>设置 Lookup.get_VariableScope() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor">
            <summary>Microsoft.Ajax.Utilities.MatchPropertiesVisitor 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.#ctor(Microsoft.Ajax.Utilities.MatchPropertiesVisitor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.Bind(Microsoft.Ajax.Utilities.IVisitor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.Constructor">
            <summary>设置 MatchPropertiesVisitor.MatchPropertiesVisitor() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.MatchAstNodeString">
            <summary>设置 MatchPropertiesVisitor.Match(AstNode node, String identifiers) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitArrayLiteral">
            <summary>设置 MatchPropertiesVisitor.Visit(ArrayLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitAspNetBlockNode">
            <summary>设置 MatchPropertiesVisitor.Visit(AspNetBlockNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitAstNodeList">
            <summary>设置 MatchPropertiesVisitor.Visit(AstNodeList node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitBinaryOperator">
            <summary>设置 MatchPropertiesVisitor.Visit(BinaryOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitBlock">
            <summary>设置 MatchPropertiesVisitor.Visit(Block node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitBreak">
            <summary>设置 MatchPropertiesVisitor.Visit(Break node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitCallNode">
            <summary>设置 MatchPropertiesVisitor.Visit(CallNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitConditional">
            <summary>设置 MatchPropertiesVisitor.Visit(Conditional node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitConditionalCompilationComment">
            <summary>设置 MatchPropertiesVisitor.Visit(ConditionalCompilationComment node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitConditionalCompilationElse">
            <summary>设置 MatchPropertiesVisitor.Visit(ConditionalCompilationElse node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitConditionalCompilationElseIf">
            <summary>设置 MatchPropertiesVisitor.Visit(ConditionalCompilationElseIf node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitConditionalCompilationEnd">
            <summary>设置 MatchPropertiesVisitor.Visit(ConditionalCompilationEnd node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitConditionalCompilationIf">
            <summary>设置 MatchPropertiesVisitor.Visit(ConditionalCompilationIf node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitConditionalCompilationOn">
            <summary>设置 MatchPropertiesVisitor.Visit(ConditionalCompilationOn node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitConditionalCompilationSet">
            <summary>设置 MatchPropertiesVisitor.Visit(ConditionalCompilationSet node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitConstStatement">
            <summary>设置 MatchPropertiesVisitor.Visit(ConstStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitConstantWrapper">
            <summary>设置 MatchPropertiesVisitor.Visit(ConstantWrapper node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitConstantWrapperPP">
            <summary>设置 MatchPropertiesVisitor.Visit(ConstantWrapperPP node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitContinueNode">
            <summary>设置 MatchPropertiesVisitor.Visit(ContinueNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitCustomNode">
            <summary>设置 MatchPropertiesVisitor.Visit(CustomNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitDebuggerNode">
            <summary>设置 MatchPropertiesVisitor.Visit(DebuggerNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitDirectivePrologue">
            <summary>设置 MatchPropertiesVisitor.Visit(DirectivePrologue node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitDoWhile">
            <summary>设置 MatchPropertiesVisitor.Visit(DoWhile node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitEmptyStatement">
            <summary>设置 MatchPropertiesVisitor.Visit(EmptyStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitForIn">
            <summary>设置 MatchPropertiesVisitor.Visit(ForIn node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitForNode">
            <summary>设置 MatchPropertiesVisitor.Visit(ForNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitFunctionObject">
            <summary>设置 MatchPropertiesVisitor.Visit(FunctionObject node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitGetterSetter">
            <summary>设置 MatchPropertiesVisitor.Visit(GetterSetter node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitGroupingOperator">
            <summary>设置 MatchPropertiesVisitor.Visit(GroupingOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitIfNode">
            <summary>设置 MatchPropertiesVisitor.Visit(IfNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitImportantComment">
            <summary>设置 MatchPropertiesVisitor.Visit(ImportantComment node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitLabeledStatement">
            <summary>设置 MatchPropertiesVisitor.Visit(LabeledStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitLexicalDeclaration">
            <summary>设置 MatchPropertiesVisitor.Visit(LexicalDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitLookup">
            <summary>设置 MatchPropertiesVisitor.Visit(Lookup node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitMember">
            <summary>设置 MatchPropertiesVisitor.Visit(Member node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitObjectLiteral">
            <summary>设置 MatchPropertiesVisitor.Visit(ObjectLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitObjectLiteralField">
            <summary>设置 MatchPropertiesVisitor.Visit(ObjectLiteralField node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitObjectLiteralProperty">
            <summary>设置 MatchPropertiesVisitor.Visit(ObjectLiteralProperty node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitParameterDeclaration">
            <summary>设置 MatchPropertiesVisitor.Visit(ParameterDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitRegExpLiteral">
            <summary>设置 MatchPropertiesVisitor.Visit(RegExpLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitReturnNode">
            <summary>设置 MatchPropertiesVisitor.Visit(ReturnNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitSwitch">
            <summary>设置 MatchPropertiesVisitor.Visit(Switch node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitSwitchCase">
            <summary>设置 MatchPropertiesVisitor.Visit(SwitchCase node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitThisLiteral">
            <summary>设置 MatchPropertiesVisitor.Visit(ThisLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitThrowNode">
            <summary>设置 MatchPropertiesVisitor.Visit(ThrowNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitTryNode">
            <summary>设置 MatchPropertiesVisitor.Visit(TryNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitUnaryOperator">
            <summary>设置 MatchPropertiesVisitor.Visit(UnaryOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitVar">
            <summary>设置 MatchPropertiesVisitor.Visit(Var node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitVariableDeclaration">
            <summary>设置 MatchPropertiesVisitor.Visit(VariableDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitWhileNode">
            <summary>设置 MatchPropertiesVisitor.Visit(WhileNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.VisitWithNode">
            <summary>设置 MatchPropertiesVisitor.Visit(WithNode node) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.MatchAstNodeString">
            <summary>设置 MatchPropertiesVisitor.Match(AstNode node, String identifiers) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitArrayLiteral">
            <summary>设置 MatchPropertiesVisitor.Visit(ArrayLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitAspNetBlockNode">
            <summary>设置 MatchPropertiesVisitor.Visit(AspNetBlockNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitAstNodeList">
            <summary>设置 MatchPropertiesVisitor.Visit(AstNodeList node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitBinaryOperator">
            <summary>设置 MatchPropertiesVisitor.Visit(BinaryOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitBlock">
            <summary>设置 MatchPropertiesVisitor.Visit(Block node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitBreak">
            <summary>设置 MatchPropertiesVisitor.Visit(Break node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitCallNode">
            <summary>设置 MatchPropertiesVisitor.Visit(CallNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitConditional">
            <summary>设置 MatchPropertiesVisitor.Visit(Conditional node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitConditionalCompilationComment">
            <summary>设置 MatchPropertiesVisitor.Visit(ConditionalCompilationComment node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitConditionalCompilationElse">
            <summary>设置 MatchPropertiesVisitor.Visit(ConditionalCompilationElse node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitConditionalCompilationElseIf">
            <summary>设置 MatchPropertiesVisitor.Visit(ConditionalCompilationElseIf node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitConditionalCompilationEnd">
            <summary>设置 MatchPropertiesVisitor.Visit(ConditionalCompilationEnd node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitConditionalCompilationIf">
            <summary>设置 MatchPropertiesVisitor.Visit(ConditionalCompilationIf node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitConditionalCompilationOn">
            <summary>设置 MatchPropertiesVisitor.Visit(ConditionalCompilationOn node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitConditionalCompilationSet">
            <summary>设置 MatchPropertiesVisitor.Visit(ConditionalCompilationSet node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitConstStatement">
            <summary>设置 MatchPropertiesVisitor.Visit(ConstStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitConstantWrapper">
            <summary>设置 MatchPropertiesVisitor.Visit(ConstantWrapper node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitConstantWrapperPP">
            <summary>设置 MatchPropertiesVisitor.Visit(ConstantWrapperPP node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitContinueNode">
            <summary>设置 MatchPropertiesVisitor.Visit(ContinueNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitCustomNode">
            <summary>设置 MatchPropertiesVisitor.Visit(CustomNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitDebuggerNode">
            <summary>设置 MatchPropertiesVisitor.Visit(DebuggerNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitDirectivePrologue">
            <summary>设置 MatchPropertiesVisitor.Visit(DirectivePrologue node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitDoWhile">
            <summary>设置 MatchPropertiesVisitor.Visit(DoWhile node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitEmptyStatement">
            <summary>设置 MatchPropertiesVisitor.Visit(EmptyStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitForIn">
            <summary>设置 MatchPropertiesVisitor.Visit(ForIn node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitForNode">
            <summary>设置 MatchPropertiesVisitor.Visit(ForNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitFunctionObject">
            <summary>设置 MatchPropertiesVisitor.Visit(FunctionObject node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitGetterSetter">
            <summary>设置 MatchPropertiesVisitor.Visit(GetterSetter node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitGroupingOperator">
            <summary>设置 MatchPropertiesVisitor.Visit(GroupingOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitIfNode">
            <summary>设置 MatchPropertiesVisitor.Visit(IfNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitImportantComment">
            <summary>设置 MatchPropertiesVisitor.Visit(ImportantComment node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitLabeledStatement">
            <summary>设置 MatchPropertiesVisitor.Visit(LabeledStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitLexicalDeclaration">
            <summary>设置 MatchPropertiesVisitor.Visit(LexicalDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitLookup">
            <summary>设置 MatchPropertiesVisitor.Visit(Lookup node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitMember">
            <summary>设置 MatchPropertiesVisitor.Visit(Member node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitObjectLiteral">
            <summary>设置 MatchPropertiesVisitor.Visit(ObjectLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitObjectLiteralField">
            <summary>设置 MatchPropertiesVisitor.Visit(ObjectLiteralField node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitObjectLiteralProperty">
            <summary>设置 MatchPropertiesVisitor.Visit(ObjectLiteralProperty node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitParameterDeclaration">
            <summary>设置 MatchPropertiesVisitor.Visit(ParameterDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitRegExpLiteral">
            <summary>设置 MatchPropertiesVisitor.Visit(RegExpLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitReturnNode">
            <summary>设置 MatchPropertiesVisitor.Visit(ReturnNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitSwitch">
            <summary>设置 MatchPropertiesVisitor.Visit(Switch node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitSwitchCase">
            <summary>设置 MatchPropertiesVisitor.Visit(SwitchCase node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitThisLiteral">
            <summary>设置 MatchPropertiesVisitor.Visit(ThisLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitThrowNode">
            <summary>设置 MatchPropertiesVisitor.Visit(ThrowNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitTryNode">
            <summary>设置 MatchPropertiesVisitor.Visit(TryNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitUnaryOperator">
            <summary>设置 MatchPropertiesVisitor.Visit(UnaryOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitVar">
            <summary>设置 MatchPropertiesVisitor.Visit(Var node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitVariableDeclaration">
            <summary>设置 MatchPropertiesVisitor.Visit(VariableDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitWhileNode">
            <summary>设置 MatchPropertiesVisitor.Visit(WhileNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMatchPropertiesVisitor.AllInstances.VisitWithNode">
            <summary>设置 MatchPropertiesVisitor.Visit(WithNode node) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimMember">
            <summary>Microsoft.Ajax.Utilities.Member 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimMember.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimMember.#ctor(Microsoft.Ajax.Utilities.Member)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimMember.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimMember.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMember.AcceptIVisitor">
            <summary>设置 Member.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMember.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMember.ChildrenGet">
            <summary>设置 Member.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMember.ConstructorContextJSParser">
            <summary>设置 Member.Member(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMember.GetFunctionGuessAstNode">
            <summary>设置 Member.GetFunctionGuess(AstNode target) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMember.IsDebuggerStatementGet">
            <summary>设置 Member.get_IsDebuggerStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMember.IsEquivalentToAstNode">
            <summary>设置 Member.IsEquivalentTo(AstNode otherNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMember.LeftHandSideGet">
            <summary>设置 Member.get_LeftHandSide() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMember.NameContextGet">
            <summary>设置 Member.get_NameContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMember.NameContextSetContext">
            <summary>设置 Member.set_NameContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMember.NameGet">
            <summary>设置 Member.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMember.NameSetString">
            <summary>设置 Member.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMember.PrecedenceGet">
            <summary>设置 Member.get_Precedence() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMember.ReplaceChildAstNodeAstNode">
            <summary>设置 Member.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMember.RootGet">
            <summary>设置 Member.get_Root() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMember.RootSetAstNode">
            <summary>设置 Member.set_Root(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMember._set_Rootb__0AstNode">
            <summary>设置 Member.&lt;set_Root&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMember._set_Rootb__1AstNode">
            <summary>设置 Member.&lt;set_Root&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimMember.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMember.AllInstances.AcceptIVisitor">
            <summary>设置 Member.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMember.AllInstances.ChildrenGet">
            <summary>设置 Member.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMember.AllInstances.GetFunctionGuessAstNode">
            <summary>设置 Member.GetFunctionGuess(AstNode target) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMember.AllInstances.IsDebuggerStatementGet">
            <summary>设置 Member.get_IsDebuggerStatement() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMember.AllInstances.IsEquivalentToAstNode">
            <summary>设置 Member.IsEquivalentTo(AstNode otherNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMember.AllInstances.LeftHandSideGet">
            <summary>设置 Member.get_LeftHandSide() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMember.AllInstances.NameContextGet">
            <summary>设置 Member.get_NameContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMember.AllInstances.NameContextSetContext">
            <summary>设置 Member.set_NameContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMember.AllInstances.NameGet">
            <summary>设置 Member.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMember.AllInstances.NameSetString">
            <summary>设置 Member.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMember.AllInstances.PrecedenceGet">
            <summary>设置 Member.get_Precedence() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMember.AllInstances.ReplaceChildAstNodeAstNode">
            <summary>设置 Member.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMember.AllInstances.RootGet">
            <summary>设置 Member.get_Root() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMember.AllInstances.RootSetAstNode">
            <summary>设置 Member.set_Root(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMember.AllInstances._set_Rootb__0AstNode">
            <summary>设置 Member.&lt;set_Root&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMember.AllInstances._set_Rootb__1AstNode">
            <summary>设置 Member.&lt;set_Root&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimMinifier">
            <summary>Microsoft.Ajax.Utilities.Minifier 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimMinifier.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimMinifier.#ctor(Microsoft.Ajax.Utilities.Minifier)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimMinifier.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimMinifier.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMinifier.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMinifier.Constructor">
            <summary>设置 Minifier.Minifier() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMinifier.ErrorListGet">
            <summary>设置 Minifier.get_ErrorList() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMinifier.ErrorsGet">
            <summary>设置 Minifier.get_Errors() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMinifier.FileNameGet">
            <summary>设置 Minifier.get_FileName() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMinifier.FileNameSetString">
            <summary>设置 Minifier.set_FileName(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMinifier.MinifyJavaScriptString">
            <summary>设置 Minifier.MinifyJavaScript(String source) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMinifier.MinifyJavaScriptStringCodeSettings">
            <summary>设置 Minifier.MinifyJavaScript(String source, CodeSettings codeSettings) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMinifier.MinifyStyleSheetString">
            <summary>设置 Minifier.MinifyStyleSheet(String source) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMinifier.MinifyStyleSheetStringCssSettings">
            <summary>设置 Minifier.MinifyStyleSheet(String source, CssSettings settings) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMinifier.MinifyStyleSheetStringCssSettingsCodeSettings">
            <summary>设置 Minifier.MinifyStyleSheet(String source, CssSettings settings, CodeSettings scriptSettings) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMinifier.OnCssErrorObjectCssErrorEventArgs">
            <summary>设置 Minifier.OnCssError(Object sender, CssErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMinifier.OnJavaScriptErrorObjectJScriptExceptionEventArgs">
            <summary>设置 Minifier.OnJavaScriptError(Object sender, JScriptExceptionEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMinifier.WarningLevelGet">
            <summary>设置 Minifier.get_WarningLevel() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMinifier.WarningLevelSetInt32">
            <summary>设置 Minifier.set_WarningLevel(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimMinifier.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMinifier.AllInstances.ErrorListGet">
            <summary>设置 Minifier.get_ErrorList() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMinifier.AllInstances.ErrorsGet">
            <summary>设置 Minifier.get_Errors() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMinifier.AllInstances.FileNameGet">
            <summary>设置 Minifier.get_FileName() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMinifier.AllInstances.FileNameSetString">
            <summary>设置 Minifier.set_FileName(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMinifier.AllInstances.MinifyJavaScriptString">
            <summary>设置 Minifier.MinifyJavaScript(String source) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMinifier.AllInstances.MinifyJavaScriptStringCodeSettings">
            <summary>设置 Minifier.MinifyJavaScript(String source, CodeSettings codeSettings) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMinifier.AllInstances.MinifyStyleSheetString">
            <summary>设置 Minifier.MinifyStyleSheet(String source) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMinifier.AllInstances.MinifyStyleSheetStringCssSettings">
            <summary>设置 Minifier.MinifyStyleSheet(String source, CssSettings settings) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMinifier.AllInstances.MinifyStyleSheetStringCssSettingsCodeSettings">
            <summary>设置 Minifier.MinifyStyleSheet(String source, CssSettings settings, CodeSettings scriptSettings) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMinifier.AllInstances.OnCssErrorObjectCssErrorEventArgs">
            <summary>设置 Minifier.OnCssError(Object sender, CssErrorEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMinifier.AllInstances.OnJavaScriptErrorObjectJScriptExceptionEventArgs">
            <summary>设置 Minifier.OnJavaScriptError(Object sender, JScriptExceptionEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMinifier.AllInstances.WarningLevelGet">
            <summary>设置 Minifier.get_WarningLevel() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMinifier.AllInstances.WarningLevelSetInt32">
            <summary>设置 Minifier.set_WarningLevel(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimMissing">
            <summary>Microsoft.Ajax.Utilities.Missing 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimMissing.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimMissing.#ctor(Microsoft.Ajax.Utilities.Missing)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimMissing.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimMissing.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMissing.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMissing.Constructor">
            <summary>设置 Missing.Missing() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMissing.StaticConstructor">
            <summary>设置 Missing.Missing() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMissing.ToString">
            <summary>设置 Missing.ToString() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMissing.ValueGet">
            <summary>设置 Missing.get_Value() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimMissing.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimMissing.AllInstances.ToString01">
            <summary>设置 Missing.ToString() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimNewModuleEventArgs">
            <summary>Microsoft.Ajax.Utilities.NewModuleEventArgs 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimNewModuleEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimNewModuleEventArgs.#ctor(Microsoft.Ajax.Utilities.NewModuleEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimNewModuleEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimNewModuleEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimNewModuleEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimNewModuleEventArgs.Constructor">
            <summary>设置 NewModuleEventArgs.NewModuleEventArgs() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimNewModuleEventArgs.ModuleGet">
            <summary>设置 NewModuleEventArgs.get_Module() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimNewModuleEventArgs.ModuleSetString">
            <summary>设置 NewModuleEventArgs.set_Module(String value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimNewModuleEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimNewModuleEventArgs.AllInstances.ModuleGet">
            <summary>设置 NewModuleEventArgs.get_Module() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimNewModuleEventArgs.AllInstances.ModuleSetString">
            <summary>设置 NewModuleEventArgs.set_Module(String value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteral">
            <summary>Microsoft.Ajax.Utilities.ObjectLiteral 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteral.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteral.#ctor(Microsoft.Ajax.Utilities.ObjectLiteral)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteral.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteral.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteral.AcceptIVisitor">
            <summary>设置 ObjectLiteral.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteral.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteral.ChildrenGet">
            <summary>设置 ObjectLiteral.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteral.ConstructorContextJSParser">
            <summary>设置 ObjectLiteral.ObjectLiteral(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteral.IsConstantGet">
            <summary>设置 ObjectLiteral.get_IsConstant() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteral.PropertiesGet">
            <summary>设置 ObjectLiteral.get_Properties() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteral.PropertiesSetAstNodeList">
            <summary>设置 ObjectLiteral.set_Properties(AstNodeList value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteral.ReplaceChildAstNodeAstNode">
            <summary>设置 ObjectLiteral.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteral._set_Propertiesb__0AstNodeList">
            <summary>设置 ObjectLiteral.&lt;set_Properties&gt;b__0(AstNodeList n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteral._set_Propertiesb__1AstNodeList">
            <summary>设置 ObjectLiteral.&lt;set_Properties&gt;b__1(AstNodeList n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteral.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteral.AllInstances.AcceptIVisitor">
            <summary>设置 ObjectLiteral.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteral.AllInstances.ChildrenGet">
            <summary>设置 ObjectLiteral.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteral.AllInstances.IsConstantGet">
            <summary>设置 ObjectLiteral.get_IsConstant() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteral.AllInstances.PropertiesGet">
            <summary>设置 ObjectLiteral.get_Properties() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteral.AllInstances.PropertiesSetAstNodeList">
            <summary>设置 ObjectLiteral.set_Properties(AstNodeList value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteral.AllInstances.ReplaceChildAstNodeAstNode">
            <summary>设置 ObjectLiteral.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteral.AllInstances._set_Propertiesb__0AstNodeList">
            <summary>设置 ObjectLiteral.&lt;set_Properties&gt;b__0(AstNodeList n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteral.AllInstances._set_Propertiesb__1AstNodeList">
            <summary>设置 ObjectLiteral.&lt;set_Properties&gt;b__1(AstNodeList n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralField">
            <summary>Microsoft.Ajax.Utilities.ObjectLiteralField 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralField.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralField.#ctor(Microsoft.Ajax.Utilities.ObjectLiteralField)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralField.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralField.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralField.AcceptIVisitor">
            <summary>设置 ObjectLiteralField.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralField.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralField.ColonContextGet">
            <summary>设置 ObjectLiteralField.get_ColonContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralField.ColonContextSetContext">
            <summary>设置 ObjectLiteralField.set_ColonContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralField.ConstructorObjectPrimitiveTypeContextJSParser">
            <summary>设置 ObjectLiteralField.ObjectLiteralField(Object value, PrimitiveType primitiveType, Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralField.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralField.AllInstances.AcceptIVisitor">
            <summary>设置 ObjectLiteralField.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralField.AllInstances.ColonContextGet">
            <summary>设置 ObjectLiteralField.get_ColonContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralField.AllInstances.ColonContextSetContext">
            <summary>设置 ObjectLiteralField.set_ColonContext(Context value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralProperty">
            <summary>Microsoft.Ajax.Utilities.ObjectLiteralProperty 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralProperty.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralProperty.#ctor(Microsoft.Ajax.Utilities.ObjectLiteralProperty)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralProperty.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralProperty.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralProperty.AcceptIVisitor">
            <summary>设置 ObjectLiteralProperty.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralProperty.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralProperty.ChildrenGet">
            <summary>设置 ObjectLiteralProperty.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralProperty.ConstructorContextJSParser">
            <summary>设置 ObjectLiteralProperty.ObjectLiteralProperty(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralProperty.GetFunctionGuessAstNode">
            <summary>设置 ObjectLiteralProperty.GetFunctionGuess(AstNode target) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralProperty.IsConstantGet">
            <summary>设置 ObjectLiteralProperty.get_IsConstant() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralProperty.NameGet">
            <summary>设置 ObjectLiteralProperty.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralProperty.NameSetObjectLiteralField">
            <summary>设置 ObjectLiteralProperty.set_Name(ObjectLiteralField value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralProperty.ReplaceChildAstNodeAstNode">
            <summary>设置 ObjectLiteralProperty.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralProperty.ValueGet">
            <summary>设置 ObjectLiteralProperty.get_Value() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralProperty.ValueSetAstNode">
            <summary>设置 ObjectLiteralProperty.set_Value(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralProperty._set_Nameb__0ObjectLiteralField">
            <summary>设置 ObjectLiteralProperty.&lt;set_Name&gt;b__0(ObjectLiteralField n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralProperty._set_Nameb__1ObjectLiteralField">
            <summary>设置 ObjectLiteralProperty.&lt;set_Name&gt;b__1(ObjectLiteralField n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralProperty._set_Valueb__2AstNode">
            <summary>设置 ObjectLiteralProperty.&lt;set_Value&gt;b__2(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralProperty._set_Valueb__3AstNode">
            <summary>设置 ObjectLiteralProperty.&lt;set_Value&gt;b__3(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralProperty.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralProperty.AllInstances.AcceptIVisitor">
            <summary>设置 ObjectLiteralProperty.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralProperty.AllInstances.ChildrenGet">
            <summary>设置 ObjectLiteralProperty.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralProperty.AllInstances.GetFunctionGuessAstNode">
            <summary>设置 ObjectLiteralProperty.GetFunctionGuess(AstNode target) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralProperty.AllInstances.IsConstantGet">
            <summary>设置 ObjectLiteralProperty.get_IsConstant() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralProperty.AllInstances.NameGet">
            <summary>设置 ObjectLiteralProperty.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralProperty.AllInstances.NameSetObjectLiteralField">
            <summary>设置 ObjectLiteralProperty.set_Name(ObjectLiteralField value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralProperty.AllInstances.ReplaceChildAstNodeAstNode">
            <summary>设置 ObjectLiteralProperty.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralProperty.AllInstances.ValueGet">
            <summary>设置 ObjectLiteralProperty.get_Value() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralProperty.AllInstances.ValueSetAstNode">
            <summary>设置 ObjectLiteralProperty.set_Value(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralProperty.AllInstances._set_Nameb__0ObjectLiteralField">
            <summary>设置 ObjectLiteralProperty.&lt;set_Name&gt;b__0(ObjectLiteralField n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralProperty.AllInstances._set_Nameb__1ObjectLiteralField">
            <summary>设置 ObjectLiteralProperty.&lt;set_Name&gt;b__1(ObjectLiteralField n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralProperty.AllInstances._set_Valueb__2AstNode">
            <summary>设置 ObjectLiteralProperty.&lt;set_Value&gt;b__2(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimObjectLiteralProperty.AllInstances._set_Valueb__3AstNode">
            <summary>设置 ObjectLiteralProperty.&lt;set_Value&gt;b__3(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor">
            <summary>Microsoft.Ajax.Utilities.OutputVisitor 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.#ctor(Microsoft.Ajax.Utilities.OutputVisitor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.Bind(Microsoft.Ajax.Utilities.IVisitor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AcceptNodeWithParensAstNodeBoolean">
            <summary>设置 OutputVisitor.AcceptNodeWithParens(AstNode node, Boolean needsParens) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.ApplyTextWriterAstNodeCodeSettings">
            <summary>设置 OutputVisitor.Apply(TextWriter writer, AstNode node, CodeSettings settings) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.BreakLineBoolean">
            <summary>设置 OutputVisitor.BreakLine(Boolean forceBreak) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.ConstructorTextWriterCodeSettings">
            <summary>设置 OutputVisitor.OutputVisitor(TextWriter writer, CodeSettings settings) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.EndSymbolObject">
            <summary>设置 OutputVisitor.EndSymbol(Object symbol) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.EscapeStringString">
            <summary>设置 OutputVisitor.EscapeString(String text) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.GetSmallestRepString">
            <summary>设置 OutputVisitor.GetSmallestRep(String number) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.Indent">
            <summary>设置 OutputVisitor.Indent() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.InlineSafeStringString">
            <summary>设置 OutputVisitor.InlineSafeString(String text) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.InsertSpaceIfNeededChar">
            <summary>设置 OutputVisitor.InsertSpaceIfNeeded(Char ch) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.InsertSpaceIfNeededString">
            <summary>设置 OutputVisitor.InsertSpaceIfNeeded(String text) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.MarkSegmentAstNodeStringContext">
            <summary>设置 OutputVisitor.MarkSegment(AstNode node, String name, Context context) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.NewLine">
            <summary>设置 OutputVisitor.NewLine() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.NormalOrHexIfSmallerDoubleString">
            <summary>设置 OutputVisitor.NormalOrHexIfSmaller(Double doubleValue, String normal) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.NormalizeNumberDoubleContext">
            <summary>设置 OutputVisitor.NormalizeNumber(Double numericValue, Context originalContext) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.OperatorStringJSToken">
            <summary>设置 OutputVisitor.OperatorString(JSToken token) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.OutputBlockBlock">
            <summary>设置 OutputVisitor.OutputBlock(Block block) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.OutputBlockWithBracesBlock">
            <summary>设置 OutputVisitor.OutputBlockWithBraces(Block block) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.OutputCatchBranchTryNode">
            <summary>设置 OutputVisitor.OutputCatchBranch(TryNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.OutputChar">
            <summary>设置 OutputVisitor.Output(Char ch) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.OutputFinallyBranchTryNode">
            <summary>设置 OutputVisitor.OutputFinallyBranch(TryNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.OutputFunctionArgsAndBodyFunctionObjectBoolean">
            <summary>设置 OutputVisitor.OutputFunctionArgsAndBody(FunctionObject node, Boolean removeUnused) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.OutputPossibleLineBreakChar">
            <summary>设置 OutputVisitor.OutputPossibleLineBreak(Char ch) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.OutputSpaceOrLineBreak">
            <summary>设置 OutputVisitor.OutputSpaceOrLineBreak() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.OutputString">
            <summary>设置 OutputVisitor.Output(String text) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.OutputTryBranchTryNode">
            <summary>设置 OutputVisitor.OutputTryBranch(TryNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.QuoteFactorString">
            <summary>设置 OutputVisitor.QuoteFactor(String text) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.ReplaceableSemicolon">
            <summary>设置 OutputVisitor.ReplaceableSemicolon() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.SetContextOutputPositionContext">
            <summary>设置 OutputVisitor.SetContextOutputPosition(Context context) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.SetContextOutputPositionContextContext">
            <summary>设置 OutputVisitor.SetContextOutputPosition(Context context, Context fromContext) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.SetLastCharStateChar">
            <summary>设置 OutputVisitor.SetLastCharState(Char ch) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.SetLastCharStateString">
            <summary>设置 OutputVisitor.SetLastCharState(String text) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.StartSymbolAstNode">
            <summary>设置 OutputVisitor.StartSymbol(AstNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.StaticConstructor">
            <summary>设置 OutputVisitor.OutputVisitor() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.Unindent">
            <summary>设置 OutputVisitor.Unindent() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitArrayLiteral">
            <summary>设置 OutputVisitor.Visit(ArrayLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitAspNetBlockNode">
            <summary>设置 OutputVisitor.Visit(AspNetBlockNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitAstNodeList">
            <summary>设置 OutputVisitor.Visit(AstNodeList node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitBinaryOperator">
            <summary>设置 OutputVisitor.Visit(BinaryOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitBlock">
            <summary>设置 OutputVisitor.Visit(Block node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitBreak">
            <summary>设置 OutputVisitor.Visit(Break node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitCallNode">
            <summary>设置 OutputVisitor.Visit(CallNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitConditional">
            <summary>设置 OutputVisitor.Visit(Conditional node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitConditionalCompilationComment">
            <summary>设置 OutputVisitor.Visit(ConditionalCompilationComment node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitConditionalCompilationElse">
            <summary>设置 OutputVisitor.Visit(ConditionalCompilationElse node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitConditionalCompilationElseIf">
            <summary>设置 OutputVisitor.Visit(ConditionalCompilationElseIf node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitConditionalCompilationEnd">
            <summary>设置 OutputVisitor.Visit(ConditionalCompilationEnd node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitConditionalCompilationIf">
            <summary>设置 OutputVisitor.Visit(ConditionalCompilationIf node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitConditionalCompilationOn">
            <summary>设置 OutputVisitor.Visit(ConditionalCompilationOn node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitConditionalCompilationSet">
            <summary>设置 OutputVisitor.Visit(ConditionalCompilationSet node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitConstStatement">
            <summary>设置 OutputVisitor.Visit(ConstStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitConstantWrapper">
            <summary>设置 OutputVisitor.Visit(ConstantWrapper node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitConstantWrapperPP">
            <summary>设置 OutputVisitor.Visit(ConstantWrapperPP node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitContinueNode">
            <summary>设置 OutputVisitor.Visit(ContinueNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitCustomNode">
            <summary>设置 OutputVisitor.Visit(CustomNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitDebuggerNode">
            <summary>设置 OutputVisitor.Visit(DebuggerNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitDirectivePrologue">
            <summary>设置 OutputVisitor.Visit(DirectivePrologue node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitDoWhile">
            <summary>设置 OutputVisitor.Visit(DoWhile node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitEmptyStatement">
            <summary>设置 OutputVisitor.Visit(EmptyStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitForIn">
            <summary>设置 OutputVisitor.Visit(ForIn node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitForNode">
            <summary>设置 OutputVisitor.Visit(ForNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitFunctionObject">
            <summary>设置 OutputVisitor.Visit(FunctionObject node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitGetterSetter">
            <summary>设置 OutputVisitor.Visit(GetterSetter node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitGroupingOperator">
            <summary>设置 OutputVisitor.Visit(GroupingOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitIfNode">
            <summary>设置 OutputVisitor.Visit(IfNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitImportantComment">
            <summary>设置 OutputVisitor.Visit(ImportantComment node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitLabeledStatement">
            <summary>设置 OutputVisitor.Visit(LabeledStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitLexicalDeclaration">
            <summary>设置 OutputVisitor.Visit(LexicalDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitLookup">
            <summary>设置 OutputVisitor.Visit(Lookup node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitMember">
            <summary>设置 OutputVisitor.Visit(Member node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitObjectLiteral">
            <summary>设置 OutputVisitor.Visit(ObjectLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitObjectLiteralField">
            <summary>设置 OutputVisitor.Visit(ObjectLiteralField node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitObjectLiteralProperty">
            <summary>设置 OutputVisitor.Visit(ObjectLiteralProperty node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitParameterDeclaration">
            <summary>设置 OutputVisitor.Visit(ParameterDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitRegExpLiteral">
            <summary>设置 OutputVisitor.Visit(RegExpLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitReturnNode">
            <summary>设置 OutputVisitor.Visit(ReturnNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitSwitch">
            <summary>设置 OutputVisitor.Visit(Switch node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitSwitchCase">
            <summary>设置 OutputVisitor.Visit(SwitchCase node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitThisLiteral">
            <summary>设置 OutputVisitor.Visit(ThisLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitThrowNode">
            <summary>设置 OutputVisitor.Visit(ThrowNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitTryNode">
            <summary>设置 OutputVisitor.Visit(TryNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitUnaryOperator">
            <summary>设置 OutputVisitor.Visit(UnaryOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitVar">
            <summary>设置 OutputVisitor.Visit(Var node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitVariableDeclaration">
            <summary>设置 OutputVisitor.Visit(VariableDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitWhileNode">
            <summary>设置 OutputVisitor.Visit(WhileNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.VisitWithNode">
            <summary>设置 OutputVisitor.Visit(WithNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.WriteToStreamChar">
            <summary>设置 OutputVisitor.WriteToStream(Char ch) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.WriteToStreamString">
            <summary>设置 OutputVisitor.WriteToStream(String text) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor._OutputBlockb__16Block">
            <summary>设置 OutputVisitor.&lt;OutputBlock&gt;b__16(Block b) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor._OutputFunctionArgsAndBodyb__10ParameterDeclaration">
            <summary>设置 OutputVisitor.&lt;OutputFunctionArgsAndBody&gt;b__10(ParameterDeclaration p) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor._OutputFunctionArgsAndBodyb__11AstNode">
            <summary>设置 OutputVisitor.&lt;OutputFunctionArgsAndBody&gt;b__11(AstNode p) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor._OutputFunctionArgsAndBodyb__12Block">
            <summary>设置 OutputVisitor.&lt;OutputFunctionArgsAndBody&gt;b__12(Block b) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor._Visitb__4AstNode">
            <summary>设置 OutputVisitor.&lt;Visit&gt;b__4(AstNode e) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor._Visitb__6AstNode">
            <summary>设置 OutputVisitor.&lt;Visit&gt;b__6(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor._Visitb__8Char">
            <summary>设置 OutputVisitor.&lt;Visit&gt;b__8(Char c) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor._Visitb__aAstNode">
            <summary>设置 OutputVisitor.&lt;Visit&gt;b__a(AstNode a) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor._Visitb__cAstNodeList">
            <summary>设置 OutputVisitor.&lt;Visit&gt;b__c(AstNodeList p) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor._Visitb__eJSVariableField">
            <summary>设置 OutputVisitor.&lt;Visit&gt;b__e(JSVariableField f) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.AcceptNodeWithParensAstNodeBoolean">
            <summary>设置 OutputVisitor.AcceptNodeWithParens(AstNode node, Boolean needsParens) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.BreakLineBoolean">
            <summary>设置 OutputVisitor.BreakLine(Boolean forceBreak) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.EndSymbolObject">
            <summary>设置 OutputVisitor.EndSymbol(Object symbol) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.Indent">
            <summary>设置 OutputVisitor.Indent() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.InlineSafeStringString">
            <summary>设置 OutputVisitor.InlineSafeString(String text) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.InsertSpaceIfNeededChar">
            <summary>设置 OutputVisitor.InsertSpaceIfNeeded(Char ch) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.InsertSpaceIfNeededString">
            <summary>设置 OutputVisitor.InsertSpaceIfNeeded(String text) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.MarkSegmentAstNodeStringContext">
            <summary>设置 OutputVisitor.MarkSegment(AstNode node, String name, Context context) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.NewLine">
            <summary>设置 OutputVisitor.NewLine() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.OutputBlockBlock">
            <summary>设置 OutputVisitor.OutputBlock(Block block) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.OutputBlockWithBracesBlock">
            <summary>设置 OutputVisitor.OutputBlockWithBraces(Block block) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.OutputCatchBranchTryNode">
            <summary>设置 OutputVisitor.OutputCatchBranch(TryNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.OutputChar">
            <summary>设置 OutputVisitor.Output(Char ch) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.OutputFinallyBranchTryNode">
            <summary>设置 OutputVisitor.OutputFinallyBranch(TryNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.OutputFunctionArgsAndBodyFunctionObjectBoolean">
            <summary>设置 OutputVisitor.OutputFunctionArgsAndBody(FunctionObject node, Boolean removeUnused) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.OutputPossibleLineBreakChar">
            <summary>设置 OutputVisitor.OutputPossibleLineBreak(Char ch) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.OutputSpaceOrLineBreak">
            <summary>设置 OutputVisitor.OutputSpaceOrLineBreak() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.OutputString">
            <summary>设置 OutputVisitor.Output(String text) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.OutputTryBranchTryNode">
            <summary>设置 OutputVisitor.OutputTryBranch(TryNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.ReplaceableSemicolon">
            <summary>设置 OutputVisitor.ReplaceableSemicolon() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.SetContextOutputPositionContext">
            <summary>设置 OutputVisitor.SetContextOutputPosition(Context context) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.SetLastCharStateChar">
            <summary>设置 OutputVisitor.SetLastCharState(Char ch) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.SetLastCharStateString">
            <summary>设置 OutputVisitor.SetLastCharState(String text) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.StartSymbolAstNode">
            <summary>设置 OutputVisitor.StartSymbol(AstNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.Unindent">
            <summary>设置 OutputVisitor.Unindent() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitArrayLiteral">
            <summary>设置 OutputVisitor.Visit(ArrayLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitAspNetBlockNode">
            <summary>设置 OutputVisitor.Visit(AspNetBlockNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitAstNodeList">
            <summary>设置 OutputVisitor.Visit(AstNodeList node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitBinaryOperator">
            <summary>设置 OutputVisitor.Visit(BinaryOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitBlock">
            <summary>设置 OutputVisitor.Visit(Block node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitBreak">
            <summary>设置 OutputVisitor.Visit(Break node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitCallNode">
            <summary>设置 OutputVisitor.Visit(CallNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitConditional">
            <summary>设置 OutputVisitor.Visit(Conditional node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitConditionalCompilationComment">
            <summary>设置 OutputVisitor.Visit(ConditionalCompilationComment node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitConditionalCompilationElse">
            <summary>设置 OutputVisitor.Visit(ConditionalCompilationElse node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitConditionalCompilationElseIf">
            <summary>设置 OutputVisitor.Visit(ConditionalCompilationElseIf node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitConditionalCompilationEnd">
            <summary>设置 OutputVisitor.Visit(ConditionalCompilationEnd node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitConditionalCompilationIf">
            <summary>设置 OutputVisitor.Visit(ConditionalCompilationIf node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitConditionalCompilationOn">
            <summary>设置 OutputVisitor.Visit(ConditionalCompilationOn node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitConditionalCompilationSet">
            <summary>设置 OutputVisitor.Visit(ConditionalCompilationSet node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitConstStatement">
            <summary>设置 OutputVisitor.Visit(ConstStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitConstantWrapper">
            <summary>设置 OutputVisitor.Visit(ConstantWrapper node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitConstantWrapperPP">
            <summary>设置 OutputVisitor.Visit(ConstantWrapperPP node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitContinueNode">
            <summary>设置 OutputVisitor.Visit(ContinueNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitCustomNode">
            <summary>设置 OutputVisitor.Visit(CustomNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitDebuggerNode">
            <summary>设置 OutputVisitor.Visit(DebuggerNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitDirectivePrologue">
            <summary>设置 OutputVisitor.Visit(DirectivePrologue node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitDoWhile">
            <summary>设置 OutputVisitor.Visit(DoWhile node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitEmptyStatement">
            <summary>设置 OutputVisitor.Visit(EmptyStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitForIn">
            <summary>设置 OutputVisitor.Visit(ForIn node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitForNode">
            <summary>设置 OutputVisitor.Visit(ForNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitFunctionObject">
            <summary>设置 OutputVisitor.Visit(FunctionObject node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitGetterSetter">
            <summary>设置 OutputVisitor.Visit(GetterSetter node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitGroupingOperator">
            <summary>设置 OutputVisitor.Visit(GroupingOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitIfNode">
            <summary>设置 OutputVisitor.Visit(IfNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitImportantComment">
            <summary>设置 OutputVisitor.Visit(ImportantComment node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitLabeledStatement">
            <summary>设置 OutputVisitor.Visit(LabeledStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitLexicalDeclaration">
            <summary>设置 OutputVisitor.Visit(LexicalDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitLookup">
            <summary>设置 OutputVisitor.Visit(Lookup node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitMember">
            <summary>设置 OutputVisitor.Visit(Member node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitObjectLiteral">
            <summary>设置 OutputVisitor.Visit(ObjectLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitObjectLiteralField">
            <summary>设置 OutputVisitor.Visit(ObjectLiteralField node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitObjectLiteralProperty">
            <summary>设置 OutputVisitor.Visit(ObjectLiteralProperty node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitParameterDeclaration">
            <summary>设置 OutputVisitor.Visit(ParameterDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitRegExpLiteral">
            <summary>设置 OutputVisitor.Visit(RegExpLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitReturnNode">
            <summary>设置 OutputVisitor.Visit(ReturnNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitSwitch">
            <summary>设置 OutputVisitor.Visit(Switch node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitSwitchCase">
            <summary>设置 OutputVisitor.Visit(SwitchCase node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitThisLiteral">
            <summary>设置 OutputVisitor.Visit(ThisLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitThrowNode">
            <summary>设置 OutputVisitor.Visit(ThrowNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitTryNode">
            <summary>设置 OutputVisitor.Visit(TryNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitUnaryOperator">
            <summary>设置 OutputVisitor.Visit(UnaryOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitVar">
            <summary>设置 OutputVisitor.Visit(Var node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitVariableDeclaration">
            <summary>设置 OutputVisitor.Visit(VariableDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitWhileNode">
            <summary>设置 OutputVisitor.Visit(WhileNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.VisitWithNode">
            <summary>设置 OutputVisitor.Visit(WithNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.WriteToStreamChar">
            <summary>设置 OutputVisitor.WriteToStream(Char ch) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances.WriteToStreamString">
            <summary>设置 OutputVisitor.WriteToStream(String text) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimOutputVisitor.AllInstances._Visitb__eJSVariableField">
            <summary>设置 OutputVisitor.&lt;Visit&gt;b__e(JSVariableField f) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimParameterDeclaration">
            <summary>Microsoft.Ajax.Utilities.ParameterDeclaration 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimParameterDeclaration.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimParameterDeclaration.#ctor(Microsoft.Ajax.Utilities.ParameterDeclaration)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimParameterDeclaration.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimParameterDeclaration.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimParameterDeclaration.Bind(Microsoft.Ajax.Utilities.INameDeclaration)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimParameterDeclaration.AcceptIVisitor">
            <summary>设置 ParameterDeclaration.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimParameterDeclaration.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimParameterDeclaration.ConstructorContextJSParser">
            <summary>设置 ParameterDeclaration.ParameterDeclaration(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimParameterDeclaration.InitializerGet">
            <summary>设置 ParameterDeclaration.get_Initializer() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimParameterDeclaration.NameContextGet">
            <summary>设置 ParameterDeclaration.get_NameContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimParameterDeclaration.NameGet">
            <summary>设置 ParameterDeclaration.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimParameterDeclaration.NameSetString">
            <summary>设置 ParameterDeclaration.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimParameterDeclaration.PositionGet">
            <summary>设置 ParameterDeclaration.get_Position() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimParameterDeclaration.PositionSetInt32">
            <summary>设置 ParameterDeclaration.set_Position(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimParameterDeclaration.RenameNotAllowedGet">
            <summary>设置 ParameterDeclaration.get_RenameNotAllowed() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimParameterDeclaration.RenameNotAllowedSetBoolean">
            <summary>设置 ParameterDeclaration.set_RenameNotAllowed(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimParameterDeclaration.VariableFieldGet">
            <summary>设置 ParameterDeclaration.get_VariableField() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimParameterDeclaration.VariableFieldSetJSVariableField">
            <summary>设置 ParameterDeclaration.set_VariableField(JSVariableField value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimParameterDeclaration.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimParameterDeclaration.AllInstances.AcceptIVisitor">
            <summary>设置 ParameterDeclaration.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimParameterDeclaration.AllInstances.InitializerGet">
            <summary>设置 ParameterDeclaration.get_Initializer() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimParameterDeclaration.AllInstances.NameContextGet">
            <summary>设置 ParameterDeclaration.get_NameContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimParameterDeclaration.AllInstances.NameGet">
            <summary>设置 ParameterDeclaration.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimParameterDeclaration.AllInstances.NameSetString">
            <summary>设置 ParameterDeclaration.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimParameterDeclaration.AllInstances.PositionGet">
            <summary>设置 ParameterDeclaration.get_Position() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimParameterDeclaration.AllInstances.PositionSetInt32">
            <summary>设置 ParameterDeclaration.set_Position(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimParameterDeclaration.AllInstances.RenameNotAllowedGet">
            <summary>设置 ParameterDeclaration.get_RenameNotAllowed() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimParameterDeclaration.AllInstances.RenameNotAllowedSetBoolean">
            <summary>设置 ParameterDeclaration.set_RenameNotAllowed(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimParameterDeclaration.AllInstances.VariableFieldGet">
            <summary>设置 ParameterDeclaration.get_VariableField() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimParameterDeclaration.AllInstances.VariableFieldSetJSVariableField">
            <summary>设置 ParameterDeclaration.set_VariableField(JSVariableField value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimRegExpLiteral">
            <summary>Microsoft.Ajax.Utilities.RegExpLiteral 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimRegExpLiteral.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimRegExpLiteral.#ctor(Microsoft.Ajax.Utilities.RegExpLiteral)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimRegExpLiteral.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimRegExpLiteral.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimRegExpLiteral.AcceptIVisitor">
            <summary>设置 RegExpLiteral.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimRegExpLiteral.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimRegExpLiteral.ConstructorContextJSParser">
            <summary>设置 RegExpLiteral.RegExpLiteral(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimRegExpLiteral.IsConstantGet">
            <summary>设置 RegExpLiteral.get_IsConstant() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimRegExpLiteral.IsEquivalentToAstNode">
            <summary>设置 RegExpLiteral.IsEquivalentTo(AstNode otherNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimRegExpLiteral.PatternGet">
            <summary>设置 RegExpLiteral.get_Pattern() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimRegExpLiteral.PatternSetString">
            <summary>设置 RegExpLiteral.set_Pattern(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimRegExpLiteral.PatternSwitchesGet">
            <summary>设置 RegExpLiteral.get_PatternSwitches() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimRegExpLiteral.PatternSwitchesSetString">
            <summary>设置 RegExpLiteral.set_PatternSwitches(String value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimRegExpLiteral.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimRegExpLiteral.AllInstances.AcceptIVisitor">
            <summary>设置 RegExpLiteral.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimRegExpLiteral.AllInstances.IsConstantGet">
            <summary>设置 RegExpLiteral.get_IsConstant() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimRegExpLiteral.AllInstances.IsEquivalentToAstNode">
            <summary>设置 RegExpLiteral.IsEquivalentTo(AstNode otherNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimRegExpLiteral.AllInstances.PatternGet">
            <summary>设置 RegExpLiteral.get_Pattern() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimRegExpLiteral.AllInstances.PatternSetString">
            <summary>设置 RegExpLiteral.set_Pattern(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimRegExpLiteral.AllInstances.PatternSwitchesGet">
            <summary>设置 RegExpLiteral.get_PatternSwitches() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimRegExpLiteral.AllInstances.PatternSwitchesSetString">
            <summary>设置 RegExpLiteral.set_PatternSwitches(String value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor">
            <summary>Microsoft.Ajax.Utilities.ResolutionVisitor 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.#ctor(Microsoft.Ajax.Utilities.ResolutionVisitor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.Bind(Microsoft.Ajax.Utilities.IVisitor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AddGhostedFieldsActivationObject">
            <summary>设置 ResolutionVisitor.AddGhostedFields(ActivationObject scope) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.ApplyAstNodeActivationObjectCodeSettings">
            <summary>设置 ResolutionVisitor.Apply(AstNode node, ActivationObject scope, CodeSettings settings) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.CollapseBlockScopeActivationObject">
            <summary>设置 ResolutionVisitor.CollapseBlockScope(ActivationObject blockScope) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.ConstructorActivationObjectCodeSettings">
            <summary>设置 ResolutionVisitor.ResolutionVisitor(ActivationObject rootScope, CodeSettings settings) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.CreateFieldsActivationObject">
            <summary>设置 ResolutionVisitor.CreateFields(ActivationObject scope) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.CurrentLexicalScopeGet">
            <summary>设置 ResolutionVisitor.get_CurrentLexicalScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.CurrentVariableScopeGet">
            <summary>设置 ResolutionVisitor.get_CurrentVariableScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.MakeExpectedGlobalJSVariableField">
            <summary>设置 ResolutionVisitor.MakeExpectedGlobal(JSVariableField varField) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.NextOrderIndexGet">
            <summary>设置 ResolutionVisitor.get_NextOrderIndex() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.ResolveGhostedCatchParameterActivationObjectParameterDeclaration">
            <summary>设置 ResolutionVisitor.ResolveGhostedCatchParameter(ActivationObject scope, ParameterDeclaration catchParameter) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.ResolveGhostedFunctionsActivationObjectFunctionObject">
            <summary>设置 ResolutionVisitor.ResolveGhostedFunctions(ActivationObject scope, FunctionObject funcObject) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.ResolveLookupActivationObjectLookupCodeSettings">
            <summary>设置 ResolutionVisitor.ResolveLookup(ActivationObject scope, Lookup lookup, CodeSettings settings) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.ResolveLookupsActivationObjectCodeSettings">
            <summary>设置 ResolutionVisitor.ResolveLookups(ActivationObject scope, CodeSettings settings) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitArrayLiteral">
            <summary>设置 ResolutionVisitor.Visit(ArrayLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitAspNetBlockNode">
            <summary>设置 ResolutionVisitor.Visit(AspNetBlockNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitAstNodeList">
            <summary>设置 ResolutionVisitor.Visit(AstNodeList node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitBinaryOperator">
            <summary>设置 ResolutionVisitor.Visit(BinaryOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitBlock">
            <summary>设置 ResolutionVisitor.Visit(Block node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitBreak">
            <summary>设置 ResolutionVisitor.Visit(Break node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitCallNode">
            <summary>设置 ResolutionVisitor.Visit(CallNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitConditional">
            <summary>设置 ResolutionVisitor.Visit(Conditional node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitConditionalCompilationComment">
            <summary>设置 ResolutionVisitor.Visit(ConditionalCompilationComment node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitConditionalCompilationElse">
            <summary>设置 ResolutionVisitor.Visit(ConditionalCompilationElse node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitConditionalCompilationElseIf">
            <summary>设置 ResolutionVisitor.Visit(ConditionalCompilationElseIf node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitConditionalCompilationEnd">
            <summary>设置 ResolutionVisitor.Visit(ConditionalCompilationEnd node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitConditionalCompilationIf">
            <summary>设置 ResolutionVisitor.Visit(ConditionalCompilationIf node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitConditionalCompilationOn">
            <summary>设置 ResolutionVisitor.Visit(ConditionalCompilationOn node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitConditionalCompilationSet">
            <summary>设置 ResolutionVisitor.Visit(ConditionalCompilationSet node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitConstStatement">
            <summary>设置 ResolutionVisitor.Visit(ConstStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitConstantWrapper">
            <summary>设置 ResolutionVisitor.Visit(ConstantWrapper node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitConstantWrapperPP">
            <summary>设置 ResolutionVisitor.Visit(ConstantWrapperPP node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitContinueNode">
            <summary>设置 ResolutionVisitor.Visit(ContinueNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitCustomNode">
            <summary>设置 ResolutionVisitor.Visit(CustomNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitDebuggerNode">
            <summary>设置 ResolutionVisitor.Visit(DebuggerNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitDirectivePrologue">
            <summary>设置 ResolutionVisitor.Visit(DirectivePrologue node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitDoWhile">
            <summary>设置 ResolutionVisitor.Visit(DoWhile node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitEmptyStatement">
            <summary>设置 ResolutionVisitor.Visit(EmptyStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitForIn">
            <summary>设置 ResolutionVisitor.Visit(ForIn node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitForNode">
            <summary>设置 ResolutionVisitor.Visit(ForNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitFunctionObject">
            <summary>设置 ResolutionVisitor.Visit(FunctionObject node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitGetterSetter">
            <summary>设置 ResolutionVisitor.Visit(GetterSetter node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitGroupingOperator">
            <summary>设置 ResolutionVisitor.Visit(GroupingOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitIfNode">
            <summary>设置 ResolutionVisitor.Visit(IfNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitImportantComment">
            <summary>设置 ResolutionVisitor.Visit(ImportantComment node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitLabeledStatement">
            <summary>设置 ResolutionVisitor.Visit(LabeledStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitLexicalDeclaration">
            <summary>设置 ResolutionVisitor.Visit(LexicalDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitLookup">
            <summary>设置 ResolutionVisitor.Visit(Lookup node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitMember">
            <summary>设置 ResolutionVisitor.Visit(Member node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitObjectLiteral">
            <summary>设置 ResolutionVisitor.Visit(ObjectLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitObjectLiteralField">
            <summary>设置 ResolutionVisitor.Visit(ObjectLiteralField node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitObjectLiteralProperty">
            <summary>设置 ResolutionVisitor.Visit(ObjectLiteralProperty node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitParameterDeclaration">
            <summary>设置 ResolutionVisitor.Visit(ParameterDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitRegExpLiteral">
            <summary>设置 ResolutionVisitor.Visit(RegExpLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitReturnNode">
            <summary>设置 ResolutionVisitor.Visit(ReturnNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitSwitch">
            <summary>设置 ResolutionVisitor.Visit(Switch node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitSwitchCase">
            <summary>设置 ResolutionVisitor.Visit(SwitchCase node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitThisLiteral">
            <summary>设置 ResolutionVisitor.Visit(ThisLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitThrowNode">
            <summary>设置 ResolutionVisitor.Visit(ThrowNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitTryNode">
            <summary>设置 ResolutionVisitor.Visit(TryNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitUnaryOperator">
            <summary>设置 ResolutionVisitor.Visit(UnaryOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitVar">
            <summary>设置 ResolutionVisitor.Visit(Var node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitVariableDeclaration">
            <summary>设置 ResolutionVisitor.Visit(VariableDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitWhileNode">
            <summary>设置 ResolutionVisitor.Visit(WhileNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.VisitWithNode">
            <summary>设置 ResolutionVisitor.Visit(WithNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor._ResolveGhostedFunctionsb__2JSVariableField">
            <summary>设置 ResolutionVisitor.&lt;ResolveGhostedFunctions&gt;b__2(JSVariableField v) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.CurrentLexicalScopeGet">
            <summary>设置 ResolutionVisitor.get_CurrentLexicalScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.CurrentVariableScopeGet">
            <summary>设置 ResolutionVisitor.get_CurrentVariableScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.NextOrderIndexGet">
            <summary>设置 ResolutionVisitor.get_NextOrderIndex() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitArrayLiteral">
            <summary>设置 ResolutionVisitor.Visit(ArrayLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitAspNetBlockNode">
            <summary>设置 ResolutionVisitor.Visit(AspNetBlockNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitAstNodeList">
            <summary>设置 ResolutionVisitor.Visit(AstNodeList node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitBinaryOperator">
            <summary>设置 ResolutionVisitor.Visit(BinaryOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitBlock">
            <summary>设置 ResolutionVisitor.Visit(Block node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitBreak">
            <summary>设置 ResolutionVisitor.Visit(Break node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitCallNode">
            <summary>设置 ResolutionVisitor.Visit(CallNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitConditional">
            <summary>设置 ResolutionVisitor.Visit(Conditional node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitConditionalCompilationComment">
            <summary>设置 ResolutionVisitor.Visit(ConditionalCompilationComment node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitConditionalCompilationElse">
            <summary>设置 ResolutionVisitor.Visit(ConditionalCompilationElse node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitConditionalCompilationElseIf">
            <summary>设置 ResolutionVisitor.Visit(ConditionalCompilationElseIf node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitConditionalCompilationEnd">
            <summary>设置 ResolutionVisitor.Visit(ConditionalCompilationEnd node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitConditionalCompilationIf">
            <summary>设置 ResolutionVisitor.Visit(ConditionalCompilationIf node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitConditionalCompilationOn">
            <summary>设置 ResolutionVisitor.Visit(ConditionalCompilationOn node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitConditionalCompilationSet">
            <summary>设置 ResolutionVisitor.Visit(ConditionalCompilationSet node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitConstStatement">
            <summary>设置 ResolutionVisitor.Visit(ConstStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitConstantWrapper">
            <summary>设置 ResolutionVisitor.Visit(ConstantWrapper node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitConstantWrapperPP">
            <summary>设置 ResolutionVisitor.Visit(ConstantWrapperPP node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitContinueNode">
            <summary>设置 ResolutionVisitor.Visit(ContinueNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitCustomNode">
            <summary>设置 ResolutionVisitor.Visit(CustomNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitDebuggerNode">
            <summary>设置 ResolutionVisitor.Visit(DebuggerNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitDirectivePrologue">
            <summary>设置 ResolutionVisitor.Visit(DirectivePrologue node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitDoWhile">
            <summary>设置 ResolutionVisitor.Visit(DoWhile node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitEmptyStatement">
            <summary>设置 ResolutionVisitor.Visit(EmptyStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitForIn">
            <summary>设置 ResolutionVisitor.Visit(ForIn node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitForNode">
            <summary>设置 ResolutionVisitor.Visit(ForNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitFunctionObject">
            <summary>设置 ResolutionVisitor.Visit(FunctionObject node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitGetterSetter">
            <summary>设置 ResolutionVisitor.Visit(GetterSetter node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitGroupingOperator">
            <summary>设置 ResolutionVisitor.Visit(GroupingOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitIfNode">
            <summary>设置 ResolutionVisitor.Visit(IfNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitImportantComment">
            <summary>设置 ResolutionVisitor.Visit(ImportantComment node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitLabeledStatement">
            <summary>设置 ResolutionVisitor.Visit(LabeledStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitLexicalDeclaration">
            <summary>设置 ResolutionVisitor.Visit(LexicalDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitLookup">
            <summary>设置 ResolutionVisitor.Visit(Lookup node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitMember">
            <summary>设置 ResolutionVisitor.Visit(Member node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitObjectLiteral">
            <summary>设置 ResolutionVisitor.Visit(ObjectLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitObjectLiteralField">
            <summary>设置 ResolutionVisitor.Visit(ObjectLiteralField node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitObjectLiteralProperty">
            <summary>设置 ResolutionVisitor.Visit(ObjectLiteralProperty node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitParameterDeclaration">
            <summary>设置 ResolutionVisitor.Visit(ParameterDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitRegExpLiteral">
            <summary>设置 ResolutionVisitor.Visit(RegExpLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitReturnNode">
            <summary>设置 ResolutionVisitor.Visit(ReturnNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitSwitch">
            <summary>设置 ResolutionVisitor.Visit(Switch node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitSwitchCase">
            <summary>设置 ResolutionVisitor.Visit(SwitchCase node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitThisLiteral">
            <summary>设置 ResolutionVisitor.Visit(ThisLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitThrowNode">
            <summary>设置 ResolutionVisitor.Visit(ThrowNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitTryNode">
            <summary>设置 ResolutionVisitor.Visit(TryNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitUnaryOperator">
            <summary>设置 ResolutionVisitor.Visit(UnaryOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitVar">
            <summary>设置 ResolutionVisitor.Visit(Var node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitVariableDeclaration">
            <summary>设置 ResolutionVisitor.Visit(VariableDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitWhileNode">
            <summary>设置 ResolutionVisitor.Visit(WhileNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResolutionVisitor.AllInstances.VisitWithNode">
            <summary>设置 ResolutionVisitor.Visit(WithNode node) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimResourceStrings">
            <summary>Microsoft.Ajax.Utilities.ResourceStrings 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimResourceStrings.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimResourceStrings.#ctor(Microsoft.Ajax.Utilities.ResourceStrings)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimResourceStrings.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimResourceStrings.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResourceStrings.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResourceStrings.ConstructorIDictionaryEnumerator">
            <summary>设置 ResourceStrings.ResourceStrings(IDictionaryEnumerator enumerator) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResourceStrings.CountGet">
            <summary>设置 ResourceStrings.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResourceStrings.ItemGetString">
            <summary>设置 ResourceStrings.get_Item(String name) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResourceStrings.ItemSetStringString">
            <summary>设置 ResourceStrings.set_Item(String name, String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResourceStrings.NameGet">
            <summary>设置 ResourceStrings.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResourceStrings.NameSetString">
            <summary>设置 ResourceStrings.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResourceStrings.NameValuePairsGet">
            <summary>设置 ResourceStrings.get_NameValuePairs() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResourceStrings.NameValuePairsSetIDictionaryOfStringString">
            <summary>设置 ResourceStrings.set_NameValuePairs(IDictionary`2&lt;String,String&gt; value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimResourceStrings.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResourceStrings.AllInstances.CountGet">
            <summary>设置 ResourceStrings.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResourceStrings.AllInstances.ItemGetString">
            <summary>设置 ResourceStrings.get_Item(String name) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResourceStrings.AllInstances.ItemSetStringString">
            <summary>设置 ResourceStrings.set_Item(String name, String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResourceStrings.AllInstances.NameGet">
            <summary>设置 ResourceStrings.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResourceStrings.AllInstances.NameSetString">
            <summary>设置 ResourceStrings.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResourceStrings.AllInstances.NameValuePairsGet">
            <summary>设置 ResourceStrings.get_NameValuePairs() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimResourceStrings.AllInstances.NameValuePairsSetIDictionaryOfStringString">
            <summary>设置 ResourceStrings.set_NameValuePairs(IDictionary`2&lt;String,String&gt; value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimReturnNode">
            <summary>Microsoft.Ajax.Utilities.ReturnNode 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimReturnNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimReturnNode.#ctor(Microsoft.Ajax.Utilities.ReturnNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimReturnNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimReturnNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimReturnNode.AcceptIVisitor">
            <summary>设置 ReturnNode.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimReturnNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimReturnNode.ChildrenGet">
            <summary>设置 ReturnNode.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimReturnNode.ConstructorContextJSParser">
            <summary>设置 ReturnNode.ReturnNode(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimReturnNode.OperandGet">
            <summary>设置 ReturnNode.get_Operand() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimReturnNode.OperandSetAstNode">
            <summary>设置 ReturnNode.set_Operand(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimReturnNode.ReplaceChildAstNodeAstNode">
            <summary>设置 ReturnNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimReturnNode._set_Operandb__0AstNode">
            <summary>设置 ReturnNode.&lt;set_Operand&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimReturnNode._set_Operandb__1AstNode">
            <summary>设置 ReturnNode.&lt;set_Operand&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimReturnNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimReturnNode.AllInstances.AcceptIVisitor">
            <summary>设置 ReturnNode.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimReturnNode.AllInstances.ChildrenGet">
            <summary>设置 ReturnNode.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimReturnNode.AllInstances.OperandGet">
            <summary>设置 ReturnNode.get_Operand() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimReturnNode.AllInstances.OperandSetAstNode">
            <summary>设置 ReturnNode.set_Operand(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimReturnNode.AllInstances.ReplaceChildAstNodeAstNode">
            <summary>设置 ReturnNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimReturnNode.AllInstances._set_Operandb__0AstNode">
            <summary>设置 ReturnNode.&lt;set_Operand&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimReturnNode.AllInstances._set_Operandb__1AstNode">
            <summary>设置 ReturnNode.&lt;set_Operand&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap">
            <summary>Microsoft.Ajax.Utilities.ScriptSharpSourceMap 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.#ctor(Microsoft.Ajax.Utilities.ScriptSharpSourceMap)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.Bind(Microsoft.Ajax.Utilities.ISourceMap)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.ConstructorTextWriter">
            <summary>设置 ScriptSharpSourceMap.ScriptSharpSourceMap(TextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.Dispose">
            <summary>设置 ScriptSharpSourceMap.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.EndFileTextWriterString">
            <summary>设置 ScriptSharpSourceMap.EndFile(TextWriter writer, String newLine) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.EndOutputRunInt32Int32">
            <summary>设置 ScriptSharpSourceMap.EndOutputRun(Int32 lineNumber, Int32 columnPosition) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.EndPackage">
            <summary>设置 ScriptSharpSourceMap.EndPackage() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.EndSymbolObjectInt32Int32String">
            <summary>设置 ScriptSharpSourceMap.EndSymbol(Object symbol, Int32 endLine, Int32 endColumn, String parentContext) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.GetSourceFileIndexString">
            <summary>设置 ScriptSharpSourceMap.GetSourceFileIndex(String fileName) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.ImplementationNameGet">
            <summary>设置 ScriptSharpSourceMap.get_ImplementationName() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.MakeRelativeStringString">
            <summary>设置 ScriptSharpSourceMap.MakeRelative(String path, String relativeFrom) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.MarkSegmentAstNodeInt32Int32StringContext">
            <summary>设置 ScriptSharpSourceMap.MarkSegment(AstNode node, Int32 startLine, Int32 startColumn, String name, Context context) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.NameGet">
            <summary>设置 ScriptSharpSourceMap.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.NewLineInsertedInOutput">
            <summary>设置 ScriptSharpSourceMap.NewLineInsertedInOutput() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.NormalizeString">
            <summary>设置 ScriptSharpSourceMap.Normalize(String path) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.SafeHeaderGet">
            <summary>设置 ScriptSharpSourceMap.get_SafeHeader() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.SafeHeaderSetBoolean">
            <summary>设置 ScriptSharpSourceMap.set_SafeHeader(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.SourceRootGet">
            <summary>设置 ScriptSharpSourceMap.get_SourceRoot() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.SourceRootSetString">
            <summary>设置 ScriptSharpSourceMap.set_SourceRoot(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.StartPackageStringString">
            <summary>设置 ScriptSharpSourceMap.StartPackage(String sourcePath, String mapPath) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.StartSymbolAstNodeInt32Int32">
            <summary>设置 ScriptSharpSourceMap.StartSymbol(AstNode node, Int32 startLine, Int32 startColumn) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.AllInstances.Dispose">
            <summary>设置 ScriptSharpSourceMap.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.AllInstances.EndFileTextWriterString">
            <summary>设置 ScriptSharpSourceMap.EndFile(TextWriter writer, String newLine) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.AllInstances.EndOutputRunInt32Int32">
            <summary>设置 ScriptSharpSourceMap.EndOutputRun(Int32 lineNumber, Int32 columnPosition) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.AllInstances.EndPackage">
            <summary>设置 ScriptSharpSourceMap.EndPackage() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.AllInstances.EndSymbolObjectInt32Int32String">
            <summary>设置 ScriptSharpSourceMap.EndSymbol(Object symbol, Int32 endLine, Int32 endColumn, String parentContext) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.AllInstances.GetSourceFileIndexString">
            <summary>设置 ScriptSharpSourceMap.GetSourceFileIndex(String fileName) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.AllInstances.MarkSegmentAstNodeInt32Int32StringContext">
            <summary>设置 ScriptSharpSourceMap.MarkSegment(AstNode node, Int32 startLine, Int32 startColumn, String name, Context context) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.AllInstances.NameGet">
            <summary>设置 ScriptSharpSourceMap.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.AllInstances.NewLineInsertedInOutput">
            <summary>设置 ScriptSharpSourceMap.NewLineInsertedInOutput() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.AllInstances.SafeHeaderGet">
            <summary>设置 ScriptSharpSourceMap.get_SafeHeader() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.AllInstances.SafeHeaderSetBoolean">
            <summary>设置 ScriptSharpSourceMap.set_SafeHeader(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.AllInstances.SourceRootGet">
            <summary>设置 ScriptSharpSourceMap.get_SourceRoot() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.AllInstances.SourceRootSetString">
            <summary>设置 ScriptSharpSourceMap.set_SourceRoot(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.AllInstances.StartPackageStringString">
            <summary>设置 ScriptSharpSourceMap.StartPackage(String sourcePath, String mapPath) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimScriptSharpSourceMap.AllInstances.StartSymbolAstNodeInt32Int32">
            <summary>设置 ScriptSharpSourceMap.StartSymbol(AstNode node, Int32 startLine, Int32 startColumn) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimSourceMapFactory">
            <summary>Microsoft.Ajax.Utilities.SourceMapFactory 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimSourceMapFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimSourceMapFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimSourceMapFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSourceMapFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSourceMapFactory.CreateTextWriterString">
            <summary>设置 SourceMapFactory.Create(TextWriter writer, String implementationName) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor">
            <summary>Microsoft.Ajax.Utilities.StatementStartVisitor 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.#ctor(Microsoft.Ajax.Utilities.StatementStartVisitor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.Bind(Microsoft.Ajax.Utilities.IVisitor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.Constructor">
            <summary>设置 StatementStartVisitor.StatementStartVisitor() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.IsSafeAstNode">
            <summary>设置 StatementStartVisitor.IsSafe(AstNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitArrayLiteral">
            <summary>设置 StatementStartVisitor.Visit(ArrayLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitAspNetBlockNode">
            <summary>设置 StatementStartVisitor.Visit(AspNetBlockNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitAstNodeList">
            <summary>设置 StatementStartVisitor.Visit(AstNodeList node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitBinaryOperator">
            <summary>设置 StatementStartVisitor.Visit(BinaryOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitBlock">
            <summary>设置 StatementStartVisitor.Visit(Block node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitBreak">
            <summary>设置 StatementStartVisitor.Visit(Break node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitCallNode">
            <summary>设置 StatementStartVisitor.Visit(CallNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitConditional">
            <summary>设置 StatementStartVisitor.Visit(Conditional node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitConditionalCompilationComment">
            <summary>设置 StatementStartVisitor.Visit(ConditionalCompilationComment node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitConditionalCompilationElse">
            <summary>设置 StatementStartVisitor.Visit(ConditionalCompilationElse node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitConditionalCompilationElseIf">
            <summary>设置 StatementStartVisitor.Visit(ConditionalCompilationElseIf node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitConditionalCompilationEnd">
            <summary>设置 StatementStartVisitor.Visit(ConditionalCompilationEnd node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitConditionalCompilationIf">
            <summary>设置 StatementStartVisitor.Visit(ConditionalCompilationIf node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitConditionalCompilationOn">
            <summary>设置 StatementStartVisitor.Visit(ConditionalCompilationOn node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitConditionalCompilationSet">
            <summary>设置 StatementStartVisitor.Visit(ConditionalCompilationSet node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitConstStatement">
            <summary>设置 StatementStartVisitor.Visit(ConstStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitConstantWrapper">
            <summary>设置 StatementStartVisitor.Visit(ConstantWrapper node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitConstantWrapperPP">
            <summary>设置 StatementStartVisitor.Visit(ConstantWrapperPP node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitContinueNode">
            <summary>设置 StatementStartVisitor.Visit(ContinueNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitCustomNode">
            <summary>设置 StatementStartVisitor.Visit(CustomNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitDebuggerNode">
            <summary>设置 StatementStartVisitor.Visit(DebuggerNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitDirectivePrologue">
            <summary>设置 StatementStartVisitor.Visit(DirectivePrologue node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitDoWhile">
            <summary>设置 StatementStartVisitor.Visit(DoWhile node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitEmptyStatement">
            <summary>设置 StatementStartVisitor.Visit(EmptyStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitForIn">
            <summary>设置 StatementStartVisitor.Visit(ForIn node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitForNode">
            <summary>设置 StatementStartVisitor.Visit(ForNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitFunctionObject">
            <summary>设置 StatementStartVisitor.Visit(FunctionObject node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitGetterSetter">
            <summary>设置 StatementStartVisitor.Visit(GetterSetter node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitGroupingOperator">
            <summary>设置 StatementStartVisitor.Visit(GroupingOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitIfNode">
            <summary>设置 StatementStartVisitor.Visit(IfNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitImportantComment">
            <summary>设置 StatementStartVisitor.Visit(ImportantComment node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitLabeledStatement">
            <summary>设置 StatementStartVisitor.Visit(LabeledStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitLexicalDeclaration">
            <summary>设置 StatementStartVisitor.Visit(LexicalDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitLookup">
            <summary>设置 StatementStartVisitor.Visit(Lookup node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitMember">
            <summary>设置 StatementStartVisitor.Visit(Member node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitObjectLiteral">
            <summary>设置 StatementStartVisitor.Visit(ObjectLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitObjectLiteralField">
            <summary>设置 StatementStartVisitor.Visit(ObjectLiteralField node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitObjectLiteralProperty">
            <summary>设置 StatementStartVisitor.Visit(ObjectLiteralProperty node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitParameterDeclaration">
            <summary>设置 StatementStartVisitor.Visit(ParameterDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitRegExpLiteral">
            <summary>设置 StatementStartVisitor.Visit(RegExpLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitReturnNode">
            <summary>设置 StatementStartVisitor.Visit(ReturnNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitSwitch">
            <summary>设置 StatementStartVisitor.Visit(Switch node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitSwitchCase">
            <summary>设置 StatementStartVisitor.Visit(SwitchCase node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitThisLiteral">
            <summary>设置 StatementStartVisitor.Visit(ThisLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitThrowNode">
            <summary>设置 StatementStartVisitor.Visit(ThrowNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitTryNode">
            <summary>设置 StatementStartVisitor.Visit(TryNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitUnaryOperator">
            <summary>设置 StatementStartVisitor.Visit(UnaryOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitVar">
            <summary>设置 StatementStartVisitor.Visit(Var node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitVariableDeclaration">
            <summary>设置 StatementStartVisitor.Visit(VariableDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitWhileNode">
            <summary>设置 StatementStartVisitor.Visit(WhileNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.VisitWithNode">
            <summary>设置 StatementStartVisitor.Visit(WithNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor._IsSafeb__0AstNode">
            <summary>设置 StatementStartVisitor.&lt;IsSafe&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.IsSafeAstNode">
            <summary>设置 StatementStartVisitor.IsSafe(AstNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitArrayLiteral">
            <summary>设置 StatementStartVisitor.Visit(ArrayLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitAspNetBlockNode">
            <summary>设置 StatementStartVisitor.Visit(AspNetBlockNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitAstNodeList">
            <summary>设置 StatementStartVisitor.Visit(AstNodeList node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitBinaryOperator">
            <summary>设置 StatementStartVisitor.Visit(BinaryOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitBlock">
            <summary>设置 StatementStartVisitor.Visit(Block node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitBreak">
            <summary>设置 StatementStartVisitor.Visit(Break node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitCallNode">
            <summary>设置 StatementStartVisitor.Visit(CallNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitConditional">
            <summary>设置 StatementStartVisitor.Visit(Conditional node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitConditionalCompilationComment">
            <summary>设置 StatementStartVisitor.Visit(ConditionalCompilationComment node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitConditionalCompilationElse">
            <summary>设置 StatementStartVisitor.Visit(ConditionalCompilationElse node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitConditionalCompilationElseIf">
            <summary>设置 StatementStartVisitor.Visit(ConditionalCompilationElseIf node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitConditionalCompilationEnd">
            <summary>设置 StatementStartVisitor.Visit(ConditionalCompilationEnd node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitConditionalCompilationIf">
            <summary>设置 StatementStartVisitor.Visit(ConditionalCompilationIf node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitConditionalCompilationOn">
            <summary>设置 StatementStartVisitor.Visit(ConditionalCompilationOn node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitConditionalCompilationSet">
            <summary>设置 StatementStartVisitor.Visit(ConditionalCompilationSet node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitConstStatement">
            <summary>设置 StatementStartVisitor.Visit(ConstStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitConstantWrapper">
            <summary>设置 StatementStartVisitor.Visit(ConstantWrapper node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitConstantWrapperPP">
            <summary>设置 StatementStartVisitor.Visit(ConstantWrapperPP node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitContinueNode">
            <summary>设置 StatementStartVisitor.Visit(ContinueNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitCustomNode">
            <summary>设置 StatementStartVisitor.Visit(CustomNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitDebuggerNode">
            <summary>设置 StatementStartVisitor.Visit(DebuggerNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitDirectivePrologue">
            <summary>设置 StatementStartVisitor.Visit(DirectivePrologue node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitDoWhile">
            <summary>设置 StatementStartVisitor.Visit(DoWhile node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitEmptyStatement">
            <summary>设置 StatementStartVisitor.Visit(EmptyStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitForIn">
            <summary>设置 StatementStartVisitor.Visit(ForIn node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitForNode">
            <summary>设置 StatementStartVisitor.Visit(ForNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitFunctionObject">
            <summary>设置 StatementStartVisitor.Visit(FunctionObject node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitGetterSetter">
            <summary>设置 StatementStartVisitor.Visit(GetterSetter node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitGroupingOperator">
            <summary>设置 StatementStartVisitor.Visit(GroupingOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitIfNode">
            <summary>设置 StatementStartVisitor.Visit(IfNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitImportantComment">
            <summary>设置 StatementStartVisitor.Visit(ImportantComment node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitLabeledStatement">
            <summary>设置 StatementStartVisitor.Visit(LabeledStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitLexicalDeclaration">
            <summary>设置 StatementStartVisitor.Visit(LexicalDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitLookup">
            <summary>设置 StatementStartVisitor.Visit(Lookup node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitMember">
            <summary>设置 StatementStartVisitor.Visit(Member node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitObjectLiteral">
            <summary>设置 StatementStartVisitor.Visit(ObjectLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitObjectLiteralField">
            <summary>设置 StatementStartVisitor.Visit(ObjectLiteralField node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitObjectLiteralProperty">
            <summary>设置 StatementStartVisitor.Visit(ObjectLiteralProperty node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitParameterDeclaration">
            <summary>设置 StatementStartVisitor.Visit(ParameterDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitRegExpLiteral">
            <summary>设置 StatementStartVisitor.Visit(RegExpLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitReturnNode">
            <summary>设置 StatementStartVisitor.Visit(ReturnNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitSwitch">
            <summary>设置 StatementStartVisitor.Visit(Switch node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitSwitchCase">
            <summary>设置 StatementStartVisitor.Visit(SwitchCase node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitThisLiteral">
            <summary>设置 StatementStartVisitor.Visit(ThisLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitThrowNode">
            <summary>设置 StatementStartVisitor.Visit(ThrowNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitTryNode">
            <summary>设置 StatementStartVisitor.Visit(TryNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitUnaryOperator">
            <summary>设置 StatementStartVisitor.Visit(UnaryOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitVar">
            <summary>设置 StatementStartVisitor.Visit(Var node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitVariableDeclaration">
            <summary>设置 StatementStartVisitor.Visit(VariableDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitWhileNode">
            <summary>设置 StatementStartVisitor.Visit(WhileNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances.VisitWithNode">
            <summary>设置 StatementStartVisitor.Visit(WithNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimStatementStartVisitor.AllInstances._IsSafeb__0AstNode">
            <summary>设置 StatementStartVisitor.&lt;IsSafe&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimSwitch">
            <summary>Microsoft.Ajax.Utilities.Switch 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.#ctor(Microsoft.Ajax.Utilities.Switch)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.AcceptIVisitor">
            <summary>设置 Switch.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.BlockScopeGet">
            <summary>设置 Switch.get_BlockScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.BlockScopeSetActivationObject">
            <summary>设置 Switch.set_BlockScope(ActivationObject value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.BraceContextGet">
            <summary>设置 Switch.get_BraceContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.BraceContextSetContext">
            <summary>设置 Switch.set_BraceContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.BraceOnNewLineGet">
            <summary>设置 Switch.get_BraceOnNewLine() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.BraceOnNewLineSetBoolean">
            <summary>设置 Switch.set_BraceOnNewLine(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.CasesGet">
            <summary>设置 Switch.get_Cases() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.CasesSetAstNodeList">
            <summary>设置 Switch.set_Cases(AstNodeList value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.ChildrenGet">
            <summary>设置 Switch.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.ConstructorContextJSParser">
            <summary>设置 Switch.Switch(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.ExpressionGet">
            <summary>设置 Switch.get_Expression() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.ExpressionSetAstNode">
            <summary>设置 Switch.set_Expression(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.ReplaceChildAstNodeAstNode">
            <summary>设置 Switch.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.RequiresSeparatorGet">
            <summary>设置 Switch.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch._set_Casesb__2AstNodeList">
            <summary>设置 Switch.&lt;set_Cases&gt;b__2(AstNodeList n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch._set_Casesb__3AstNodeList">
            <summary>设置 Switch.&lt;set_Cases&gt;b__3(AstNodeList n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch._set_Expressionb__0AstNode">
            <summary>设置 Switch.&lt;set_Expression&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch._set_Expressionb__1AstNode">
            <summary>设置 Switch.&lt;set_Expression&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.AllInstances.AcceptIVisitor">
            <summary>设置 Switch.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.AllInstances.BlockScopeGet">
            <summary>设置 Switch.get_BlockScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.AllInstances.BlockScopeSetActivationObject">
            <summary>设置 Switch.set_BlockScope(ActivationObject value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.AllInstances.BraceContextGet">
            <summary>设置 Switch.get_BraceContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.AllInstances.BraceContextSetContext">
            <summary>设置 Switch.set_BraceContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.AllInstances.BraceOnNewLineGet">
            <summary>设置 Switch.get_BraceOnNewLine() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.AllInstances.BraceOnNewLineSetBoolean">
            <summary>设置 Switch.set_BraceOnNewLine(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.AllInstances.CasesGet">
            <summary>设置 Switch.get_Cases() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.AllInstances.CasesSetAstNodeList">
            <summary>设置 Switch.set_Cases(AstNodeList value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.AllInstances.ChildrenGet">
            <summary>设置 Switch.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.AllInstances.ExpressionGet">
            <summary>设置 Switch.get_Expression() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.AllInstances.ExpressionSetAstNode">
            <summary>设置 Switch.set_Expression(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.AllInstances.ReplaceChildAstNodeAstNode">
            <summary>设置 Switch.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.AllInstances.RequiresSeparatorGet">
            <summary>设置 Switch.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.AllInstances._set_Casesb__2AstNodeList">
            <summary>设置 Switch.&lt;set_Cases&gt;b__2(AstNodeList n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.AllInstances._set_Casesb__3AstNodeList">
            <summary>设置 Switch.&lt;set_Cases&gt;b__3(AstNodeList n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.AllInstances._set_Expressionb__0AstNode">
            <summary>设置 Switch.&lt;set_Expression&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitch.AllInstances._set_Expressionb__1AstNode">
            <summary>设置 Switch.&lt;set_Expression&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase">
            <summary>Microsoft.Ajax.Utilities.SwitchCase 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase.#ctor(Microsoft.Ajax.Utilities.SwitchCase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase.AcceptIVisitor">
            <summary>设置 SwitchCase.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase.CaseValueGet">
            <summary>设置 SwitchCase.get_CaseValue() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase.CaseValueSetAstNode">
            <summary>设置 SwitchCase.set_CaseValue(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase.ChildrenGet">
            <summary>设置 SwitchCase.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase.ColonContextGet">
            <summary>设置 SwitchCase.get_ColonContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase.ColonContextSetContext">
            <summary>设置 SwitchCase.set_ColonContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase.ConstructorContextJSParser">
            <summary>设置 SwitchCase.SwitchCase(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase.IsDefaultGet">
            <summary>设置 SwitchCase.get_IsDefault() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase.ReplaceChildAstNodeAstNode">
            <summary>设置 SwitchCase.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase.RequiresSeparatorGet">
            <summary>设置 SwitchCase.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase.StatementsGet">
            <summary>设置 SwitchCase.get_Statements() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase.StatementsSetBlock">
            <summary>设置 SwitchCase.set_Statements(Block value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase._set_CaseValueb__0AstNode">
            <summary>设置 SwitchCase.&lt;set_CaseValue&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase._set_CaseValueb__1AstNode">
            <summary>设置 SwitchCase.&lt;set_CaseValue&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase._set_Statementsb__2Block">
            <summary>设置 SwitchCase.&lt;set_Statements&gt;b__2(Block n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase._set_Statementsb__3Block">
            <summary>设置 SwitchCase.&lt;set_Statements&gt;b__3(Block n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase.AllInstances.AcceptIVisitor">
            <summary>设置 SwitchCase.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase.AllInstances.CaseValueGet">
            <summary>设置 SwitchCase.get_CaseValue() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase.AllInstances.CaseValueSetAstNode">
            <summary>设置 SwitchCase.set_CaseValue(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase.AllInstances.ChildrenGet">
            <summary>设置 SwitchCase.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase.AllInstances.ColonContextGet">
            <summary>设置 SwitchCase.get_ColonContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase.AllInstances.ColonContextSetContext">
            <summary>设置 SwitchCase.set_ColonContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase.AllInstances.IsDefaultGet">
            <summary>设置 SwitchCase.get_IsDefault() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase.AllInstances.ReplaceChildAstNodeAstNode">
            <summary>设置 SwitchCase.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase.AllInstances.RequiresSeparatorGet">
            <summary>设置 SwitchCase.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase.AllInstances.StatementsGet">
            <summary>设置 SwitchCase.get_Statements() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase.AllInstances.StatementsSetBlock">
            <summary>设置 SwitchCase.set_Statements(Block value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase.AllInstances._set_CaseValueb__0AstNode">
            <summary>设置 SwitchCase.&lt;set_CaseValue&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase.AllInstances._set_CaseValueb__1AstNode">
            <summary>设置 SwitchCase.&lt;set_CaseValue&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase.AllInstances._set_Statementsb__2Block">
            <summary>设置 SwitchCase.&lt;set_Statements&gt;b__2(Block n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchCase.AllInstances._set_Statementsb__3Block">
            <summary>设置 SwitchCase.&lt;set_Statements&gt;b__3(Block n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser">
            <summary>Microsoft.Ajax.Utilities.SwitchParser 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.#ctor(Microsoft.Ajax.Utilities.SwitchParser)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AlignDebugDefineBooleanIDictionaryOfStringString">
            <summary>设置 SwitchParser.AlignDebugDefine(Boolean stripDebugStatements, IDictionary`2&lt;String,String&gt; defines) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AnalyzeModeGet">
            <summary>设置 SwitchParser.get_AnalyzeMode() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AnalyzeModeSetBoolean">
            <summary>设置 SwitchParser.set_AnalyzeMode(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.BooleanSwitchStringBooleanBooleanOut">
            <summary>设置 SwitchParser.BooleanSwitch(String booleanText, Boolean defaultValue, Boolean&amp; booleanValue) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.Clone">
            <summary>设置 SwitchParser.Clone() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.Constructor">
            <summary>设置 SwitchParser.SwitchParser() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.ConstructorCodeSettingsCssSettings">
            <summary>设置 SwitchParser.SwitchParser(CodeSettings scriptSettings, CssSettings cssSettings) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.CssOnlyParameterAddEventHandler">
            <summary>设置 SwitchParser.add_CssOnlyParameter(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.CssOnlyParameterRemoveEventHandler">
            <summary>设置 SwitchParser.remove_CssOnlyParameter(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.CssSettingsGet">
            <summary>设置 SwitchParser.get_CssSettings() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.CssSettingsSetCssSettings">
            <summary>设置 SwitchParser.set_CssSettings(CssSettings value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.EncodingInputNameGet">
            <summary>设置 SwitchParser.get_EncodingInputName() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.EncodingInputNameSetString">
            <summary>设置 SwitchParser.set_EncodingInputName(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.EncodingOutputNameGet">
            <summary>设置 SwitchParser.get_EncodingOutputName() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.EncodingOutputNameSetString">
            <summary>设置 SwitchParser.set_EncodingOutputName(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.InvalidSwitchAddEventHandlerOfInvalidSwitchEventArgs">
            <summary>设置 SwitchParser.add_InvalidSwitch(EventHandler`1&lt;InvalidSwitchEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.InvalidSwitchRemoveEventHandlerOfInvalidSwitchEventArgs">
            <summary>设置 SwitchParser.remove_InvalidSwitch(EventHandler`1&lt;InvalidSwitchEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.JSOnlyParameterAddEventHandler">
            <summary>设置 SwitchParser.add_JSOnlyParameter(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.JSOnlyParameterRemoveEventHandler">
            <summary>设置 SwitchParser.remove_JSOnlyParameter(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.JSSettingsGet">
            <summary>设置 SwitchParser.get_JSSettings() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.JSSettingsSetCodeSettings">
            <summary>设置 SwitchParser.set_JSSettings(CodeSettings value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.OnCssOnlyParameter">
            <summary>设置 SwitchParser.OnCssOnlyParameter() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.OnInvalidSwitchStringString">
            <summary>设置 SwitchParser.OnInvalidSwitch(String switchPart, String parameterPart) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.OnJSOnlyParameter">
            <summary>设置 SwitchParser.OnJSOnlyParameter() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.OnUnknownParameterIListOfStringInt32StringString">
            <summary>设置 SwitchParser.OnUnknownParameter(IList`1&lt;String&gt; arguments, Int32 index, String switchPart, String parameterPart) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.ParseString">
            <summary>设置 SwitchParser.Parse(String commandLine) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.ParseStringArray">
            <summary>设置 SwitchParser.Parse(String[] args) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.PrettyPrintGet">
            <summary>设置 SwitchParser.get_PrettyPrint() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.PrettyPrintSetBoolean">
            <summary>设置 SwitchParser.set_PrettyPrint(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.ReportFormatGet">
            <summary>设置 SwitchParser.get_ReportFormat() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.ReportFormatSetString">
            <summary>设置 SwitchParser.set_ReportFormat(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.ReportPathGet">
            <summary>设置 SwitchParser.get_ReportPath() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.ReportPathSetString">
            <summary>设置 SwitchParser.set_ReportPath(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.ResetRenamingKillBoolean">
            <summary>设置 SwitchParser.ResetRenamingKill(Boolean killSpecified) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.ToArgumentsString">
            <summary>设置 SwitchParser.ToArguments(String commandLine) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.UnknownParameterAddEventHandlerOfUnknownParameterEventArgs">
            <summary>设置 SwitchParser.add_UnknownParameter(EventHandler`1&lt;UnknownParameterEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.UnknownParameterRemoveEventHandlerOfUnknownParameterEventArgs">
            <summary>设置 SwitchParser.remove_UnknownParameter(EventHandler`1&lt;UnknownParameterEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.WarningLevelGet">
            <summary>设置 SwitchParser.get_WarningLevel() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.WarningLevelSetInt32">
            <summary>设置 SwitchParser.set_WarningLevel(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AllInstances.AnalyzeModeGet">
            <summary>设置 SwitchParser.get_AnalyzeMode() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AllInstances.AnalyzeModeSetBoolean">
            <summary>设置 SwitchParser.set_AnalyzeMode(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AllInstances.Clone">
            <summary>设置 SwitchParser.Clone() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AllInstances.CssOnlyParameterAddEventHandler">
            <summary>设置 SwitchParser.add_CssOnlyParameter(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AllInstances.CssOnlyParameterRemoveEventHandler">
            <summary>设置 SwitchParser.remove_CssOnlyParameter(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AllInstances.CssSettingsGet">
            <summary>设置 SwitchParser.get_CssSettings() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AllInstances.CssSettingsSetCssSettings">
            <summary>设置 SwitchParser.set_CssSettings(CssSettings value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AllInstances.EncodingInputNameGet">
            <summary>设置 SwitchParser.get_EncodingInputName() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AllInstances.EncodingInputNameSetString">
            <summary>设置 SwitchParser.set_EncodingInputName(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AllInstances.EncodingOutputNameGet">
            <summary>设置 SwitchParser.get_EncodingOutputName() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AllInstances.EncodingOutputNameSetString">
            <summary>设置 SwitchParser.set_EncodingOutputName(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AllInstances.InvalidSwitchAddEventHandlerOfInvalidSwitchEventArgs">
            <summary>设置 SwitchParser.add_InvalidSwitch(EventHandler`1&lt;InvalidSwitchEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AllInstances.InvalidSwitchRemoveEventHandlerOfInvalidSwitchEventArgs">
            <summary>设置 SwitchParser.remove_InvalidSwitch(EventHandler`1&lt;InvalidSwitchEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AllInstances.JSOnlyParameterAddEventHandler">
            <summary>设置 SwitchParser.add_JSOnlyParameter(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AllInstances.JSOnlyParameterRemoveEventHandler">
            <summary>设置 SwitchParser.remove_JSOnlyParameter(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AllInstances.JSSettingsGet">
            <summary>设置 SwitchParser.get_JSSettings() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AllInstances.JSSettingsSetCodeSettings">
            <summary>设置 SwitchParser.set_JSSettings(CodeSettings value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AllInstances.OnCssOnlyParameter">
            <summary>设置 SwitchParser.OnCssOnlyParameter() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AllInstances.OnInvalidSwitchStringString">
            <summary>设置 SwitchParser.OnInvalidSwitch(String switchPart, String parameterPart) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AllInstances.OnJSOnlyParameter">
            <summary>设置 SwitchParser.OnJSOnlyParameter() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AllInstances.OnUnknownParameterIListOfStringInt32StringString">
            <summary>设置 SwitchParser.OnUnknownParameter(IList`1&lt;String&gt; arguments, Int32 index, String switchPart, String parameterPart) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AllInstances.ParseString">
            <summary>设置 SwitchParser.Parse(String commandLine) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AllInstances.ParseStringArray">
            <summary>设置 SwitchParser.Parse(String[] args) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AllInstances.PrettyPrintGet">
            <summary>设置 SwitchParser.get_PrettyPrint() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AllInstances.PrettyPrintSetBoolean">
            <summary>设置 SwitchParser.set_PrettyPrint(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AllInstances.ReportFormatGet">
            <summary>设置 SwitchParser.get_ReportFormat() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AllInstances.ReportFormatSetString">
            <summary>设置 SwitchParser.set_ReportFormat(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AllInstances.ReportPathGet">
            <summary>设置 SwitchParser.get_ReportPath() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AllInstances.ReportPathSetString">
            <summary>设置 SwitchParser.set_ReportPath(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AllInstances.ResetRenamingKillBoolean">
            <summary>设置 SwitchParser.ResetRenamingKill(Boolean killSpecified) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AllInstances.UnknownParameterAddEventHandlerOfUnknownParameterEventArgs">
            <summary>设置 SwitchParser.add_UnknownParameter(EventHandler`1&lt;UnknownParameterEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AllInstances.UnknownParameterRemoveEventHandlerOfUnknownParameterEventArgs">
            <summary>设置 SwitchParser.remove_UnknownParameter(EventHandler`1&lt;UnknownParameterEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AllInstances.WarningLevelGet">
            <summary>设置 SwitchParser.get_WarningLevel() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimSwitchParser.AllInstances.WarningLevelSetInt32">
            <summary>设置 SwitchParser.set_WarningLevel(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimThisLiteral">
            <summary>Microsoft.Ajax.Utilities.ThisLiteral 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimThisLiteral.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimThisLiteral.#ctor(Microsoft.Ajax.Utilities.ThisLiteral)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimThisLiteral.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimThisLiteral.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimThisLiteral.AcceptIVisitor">
            <summary>设置 ThisLiteral.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimThisLiteral.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimThisLiteral.ConstructorContextJSParser">
            <summary>设置 ThisLiteral.ThisLiteral(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimThisLiteral.IsEquivalentToAstNode">
            <summary>设置 ThisLiteral.IsEquivalentTo(AstNode otherNode) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimThisLiteral.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimThisLiteral.AllInstances.AcceptIVisitor">
            <summary>设置 ThisLiteral.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimThisLiteral.AllInstances.IsEquivalentToAstNode">
            <summary>设置 ThisLiteral.IsEquivalentTo(AstNode otherNode) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimThrowNode">
            <summary>Microsoft.Ajax.Utilities.ThrowNode 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimThrowNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimThrowNode.#ctor(Microsoft.Ajax.Utilities.ThrowNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimThrowNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimThrowNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimThrowNode.AcceptIVisitor">
            <summary>设置 ThrowNode.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimThrowNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimThrowNode.ChildrenGet">
            <summary>设置 ThrowNode.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimThrowNode.ConstructorContextJSParser">
            <summary>设置 ThrowNode.ThrowNode(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimThrowNode.OperandGet">
            <summary>设置 ThrowNode.get_Operand() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimThrowNode.OperandSetAstNode">
            <summary>设置 ThrowNode.set_Operand(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimThrowNode.ReplaceChildAstNodeAstNode">
            <summary>设置 ThrowNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimThrowNode.RequiresSeparatorGet">
            <summary>设置 ThrowNode.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimThrowNode._set_Operandb__0AstNode">
            <summary>设置 ThrowNode.&lt;set_Operand&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimThrowNode._set_Operandb__1AstNode">
            <summary>设置 ThrowNode.&lt;set_Operand&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimThrowNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimThrowNode.AllInstances.AcceptIVisitor">
            <summary>设置 ThrowNode.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimThrowNode.AllInstances.ChildrenGet">
            <summary>设置 ThrowNode.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimThrowNode.AllInstances.OperandGet">
            <summary>设置 ThrowNode.get_Operand() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimThrowNode.AllInstances.OperandSetAstNode">
            <summary>设置 ThrowNode.set_Operand(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimThrowNode.AllInstances.ReplaceChildAstNodeAstNode">
            <summary>设置 ThrowNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimThrowNode.AllInstances.RequiresSeparatorGet">
            <summary>设置 ThrowNode.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimThrowNode.AllInstances._set_Operandb__0AstNode">
            <summary>设置 ThrowNode.&lt;set_Operand&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimThrowNode.AllInstances._set_Operandb__1AstNode">
            <summary>设置 ThrowNode.&lt;set_Operand&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor">
            <summary>Microsoft.Ajax.Utilities.TreeVisitor 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.#ctor(Microsoft.Ajax.Utilities.TreeVisitor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.Bind(Microsoft.Ajax.Utilities.IVisitor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.Constructor">
            <summary>设置 TreeVisitor.TreeVisitor() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitArrayLiteral">
            <summary>设置 TreeVisitor.Visit(ArrayLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitAspNetBlockNode">
            <summary>设置 TreeVisitor.Visit(AspNetBlockNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitAstNodeList">
            <summary>设置 TreeVisitor.Visit(AstNodeList node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitBinaryOperator">
            <summary>设置 TreeVisitor.Visit(BinaryOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitBlock">
            <summary>设置 TreeVisitor.Visit(Block node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitBreak">
            <summary>设置 TreeVisitor.Visit(Break node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitCallNode">
            <summary>设置 TreeVisitor.Visit(CallNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitConditional">
            <summary>设置 TreeVisitor.Visit(Conditional node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitConditionalCompilationComment">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationComment node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitConditionalCompilationElse">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationElse node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitConditionalCompilationElseIf">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationElseIf node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitConditionalCompilationEnd">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationEnd node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitConditionalCompilationIf">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationIf node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitConditionalCompilationOn">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationOn node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitConditionalCompilationSet">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationSet node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitConstStatement">
            <summary>设置 TreeVisitor.Visit(ConstStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitConstantWrapper">
            <summary>设置 TreeVisitor.Visit(ConstantWrapper node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitConstantWrapperPP">
            <summary>设置 TreeVisitor.Visit(ConstantWrapperPP node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitContinueNode">
            <summary>设置 TreeVisitor.Visit(ContinueNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitCustomNode">
            <summary>设置 TreeVisitor.Visit(CustomNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitDebuggerNode">
            <summary>设置 TreeVisitor.Visit(DebuggerNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitDirectivePrologue">
            <summary>设置 TreeVisitor.Visit(DirectivePrologue node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitDoWhile">
            <summary>设置 TreeVisitor.Visit(DoWhile node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitEmptyStatement">
            <summary>设置 TreeVisitor.Visit(EmptyStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitForIn">
            <summary>设置 TreeVisitor.Visit(ForIn node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitForNode">
            <summary>设置 TreeVisitor.Visit(ForNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitFunctionObject">
            <summary>设置 TreeVisitor.Visit(FunctionObject node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitGetterSetter">
            <summary>设置 TreeVisitor.Visit(GetterSetter node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitGroupingOperator">
            <summary>设置 TreeVisitor.Visit(GroupingOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitIfNode">
            <summary>设置 TreeVisitor.Visit(IfNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitImportantComment">
            <summary>设置 TreeVisitor.Visit(ImportantComment node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitLabeledStatement">
            <summary>设置 TreeVisitor.Visit(LabeledStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitLexicalDeclaration">
            <summary>设置 TreeVisitor.Visit(LexicalDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitLookup">
            <summary>设置 TreeVisitor.Visit(Lookup node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitMember">
            <summary>设置 TreeVisitor.Visit(Member node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitObjectLiteral">
            <summary>设置 TreeVisitor.Visit(ObjectLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitObjectLiteralField">
            <summary>设置 TreeVisitor.Visit(ObjectLiteralField node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitObjectLiteralProperty">
            <summary>设置 TreeVisitor.Visit(ObjectLiteralProperty node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitParameterDeclaration">
            <summary>设置 TreeVisitor.Visit(ParameterDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitRegExpLiteral">
            <summary>设置 TreeVisitor.Visit(RegExpLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitReturnNode">
            <summary>设置 TreeVisitor.Visit(ReturnNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitSwitch">
            <summary>设置 TreeVisitor.Visit(Switch node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitSwitchCase">
            <summary>设置 TreeVisitor.Visit(SwitchCase node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitThisLiteral">
            <summary>设置 TreeVisitor.Visit(ThisLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitThrowNode">
            <summary>设置 TreeVisitor.Visit(ThrowNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitTryNode">
            <summary>设置 TreeVisitor.Visit(TryNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitUnaryOperator">
            <summary>设置 TreeVisitor.Visit(UnaryOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitVar">
            <summary>设置 TreeVisitor.Visit(Var node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitVariableDeclaration">
            <summary>设置 TreeVisitor.Visit(VariableDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitWhileNode">
            <summary>设置 TreeVisitor.Visit(WhileNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.VisitWithNode">
            <summary>设置 TreeVisitor.Visit(WithNode node) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitArrayLiteral">
            <summary>设置 TreeVisitor.Visit(ArrayLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitAspNetBlockNode">
            <summary>设置 TreeVisitor.Visit(AspNetBlockNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitAstNodeList">
            <summary>设置 TreeVisitor.Visit(AstNodeList node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitBinaryOperator">
            <summary>设置 TreeVisitor.Visit(BinaryOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitBlock">
            <summary>设置 TreeVisitor.Visit(Block node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitBreak">
            <summary>设置 TreeVisitor.Visit(Break node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitCallNode">
            <summary>设置 TreeVisitor.Visit(CallNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitConditional">
            <summary>设置 TreeVisitor.Visit(Conditional node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitConditionalCompilationComment">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationComment node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitConditionalCompilationElse">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationElse node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitConditionalCompilationElseIf">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationElseIf node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitConditionalCompilationEnd">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationEnd node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitConditionalCompilationIf">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationIf node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitConditionalCompilationOn">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationOn node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitConditionalCompilationSet">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationSet node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitConstStatement">
            <summary>设置 TreeVisitor.Visit(ConstStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitConstantWrapper">
            <summary>设置 TreeVisitor.Visit(ConstantWrapper node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitConstantWrapperPP">
            <summary>设置 TreeVisitor.Visit(ConstantWrapperPP node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitContinueNode">
            <summary>设置 TreeVisitor.Visit(ContinueNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitCustomNode">
            <summary>设置 TreeVisitor.Visit(CustomNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitDebuggerNode">
            <summary>设置 TreeVisitor.Visit(DebuggerNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitDirectivePrologue">
            <summary>设置 TreeVisitor.Visit(DirectivePrologue node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitDoWhile">
            <summary>设置 TreeVisitor.Visit(DoWhile node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitEmptyStatement">
            <summary>设置 TreeVisitor.Visit(EmptyStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitForIn">
            <summary>设置 TreeVisitor.Visit(ForIn node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitForNode">
            <summary>设置 TreeVisitor.Visit(ForNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitFunctionObject">
            <summary>设置 TreeVisitor.Visit(FunctionObject node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitGetterSetter">
            <summary>设置 TreeVisitor.Visit(GetterSetter node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitGroupingOperator">
            <summary>设置 TreeVisitor.Visit(GroupingOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitIfNode">
            <summary>设置 TreeVisitor.Visit(IfNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitImportantComment">
            <summary>设置 TreeVisitor.Visit(ImportantComment node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitLabeledStatement">
            <summary>设置 TreeVisitor.Visit(LabeledStatement node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitLexicalDeclaration">
            <summary>设置 TreeVisitor.Visit(LexicalDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitLookup">
            <summary>设置 TreeVisitor.Visit(Lookup node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitMember">
            <summary>设置 TreeVisitor.Visit(Member node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitObjectLiteral">
            <summary>设置 TreeVisitor.Visit(ObjectLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitObjectLiteralField">
            <summary>设置 TreeVisitor.Visit(ObjectLiteralField node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitObjectLiteralProperty">
            <summary>设置 TreeVisitor.Visit(ObjectLiteralProperty node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitParameterDeclaration">
            <summary>设置 TreeVisitor.Visit(ParameterDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitRegExpLiteral">
            <summary>设置 TreeVisitor.Visit(RegExpLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitReturnNode">
            <summary>设置 TreeVisitor.Visit(ReturnNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitSwitch">
            <summary>设置 TreeVisitor.Visit(Switch node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitSwitchCase">
            <summary>设置 TreeVisitor.Visit(SwitchCase node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitThisLiteral">
            <summary>设置 TreeVisitor.Visit(ThisLiteral node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitThrowNode">
            <summary>设置 TreeVisitor.Visit(ThrowNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitTryNode">
            <summary>设置 TreeVisitor.Visit(TryNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitUnaryOperator">
            <summary>设置 TreeVisitor.Visit(UnaryOperator node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitVar">
            <summary>设置 TreeVisitor.Visit(Var node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitVariableDeclaration">
            <summary>设置 TreeVisitor.Visit(VariableDeclaration node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitWhileNode">
            <summary>设置 TreeVisitor.Visit(WhileNode node) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTreeVisitor.AllInstances.VisitWithNode">
            <summary>设置 TreeVisitor.Visit(WithNode node) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimTryNode">
            <summary>Microsoft.Ajax.Utilities.TryNode 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.#ctor(Microsoft.Ajax.Utilities.TryNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.AcceptIVisitor">
            <summary>设置 TryNode.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.CatchBlockGet">
            <summary>设置 TryNode.get_CatchBlock() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.CatchBlockSetBlock">
            <summary>设置 TryNode.set_CatchBlock(Block value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.CatchContextGet">
            <summary>设置 TryNode.get_CatchContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.CatchContextSetContext">
            <summary>设置 TryNode.set_CatchContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.CatchParameterGet">
            <summary>设置 TryNode.get_CatchParameter() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.CatchParameterSetParameterDeclaration">
            <summary>设置 TryNode.set_CatchParameter(ParameterDeclaration value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.CatchVarContextGet">
            <summary>设置 TryNode.get_CatchVarContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.CatchVarNameGet">
            <summary>设置 TryNode.get_CatchVarName() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.ChildrenGet">
            <summary>设置 TryNode.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.ConstructorContextJSParser">
            <summary>设置 TryNode.TryNode(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.FinallyBlockGet">
            <summary>设置 TryNode.get_FinallyBlock() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.FinallyBlockSetBlock">
            <summary>设置 TryNode.set_FinallyBlock(Block value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.FinallyContextGet">
            <summary>设置 TryNode.get_FinallyContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.FinallyContextSetContext">
            <summary>设置 TryNode.set_FinallyContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.ReplaceChildAstNodeAstNode">
            <summary>设置 TryNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.RequiresSeparatorGet">
            <summary>设置 TryNode.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.SetCatchVariableJSVariableField">
            <summary>设置 TryNode.SetCatchVariable(JSVariableField field) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.TryBlockGet">
            <summary>设置 TryNode.get_TryBlock() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.TryBlockSetBlock">
            <summary>设置 TryNode.set_TryBlock(Block value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode._get_CatchVarContextb__aParameterDeclaration">
            <summary>设置 TryNode.&lt;get_CatchVarContext&gt;b__a(ParameterDeclaration v) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode._get_CatchVarNameb__8ParameterDeclaration">
            <summary>设置 TryNode.&lt;get_CatchVarName&gt;b__8(ParameterDeclaration v) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode._set_CatchBlockb__2Block">
            <summary>设置 TryNode.&lt;set_CatchBlock&gt;b__2(Block n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode._set_CatchBlockb__3Block">
            <summary>设置 TryNode.&lt;set_CatchBlock&gt;b__3(Block n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode._set_CatchParameterb__6ParameterDeclaration">
            <summary>设置 TryNode.&lt;set_CatchParameter&gt;b__6(ParameterDeclaration n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode._set_CatchParameterb__7ParameterDeclaration">
            <summary>设置 TryNode.&lt;set_CatchParameter&gt;b__7(ParameterDeclaration n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode._set_FinallyBlockb__4Block">
            <summary>设置 TryNode.&lt;set_FinallyBlock&gt;b__4(Block n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode._set_FinallyBlockb__5Block">
            <summary>设置 TryNode.&lt;set_FinallyBlock&gt;b__5(Block n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode._set_TryBlockb__0Block">
            <summary>设置 TryNode.&lt;set_TryBlock&gt;b__0(Block n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode._set_TryBlockb__1Block">
            <summary>设置 TryNode.&lt;set_TryBlock&gt;b__1(Block n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.AllInstances.AcceptIVisitor">
            <summary>设置 TryNode.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.AllInstances.CatchBlockGet">
            <summary>设置 TryNode.get_CatchBlock() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.AllInstances.CatchBlockSetBlock">
            <summary>设置 TryNode.set_CatchBlock(Block value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.AllInstances.CatchContextGet">
            <summary>设置 TryNode.get_CatchContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.AllInstances.CatchContextSetContext">
            <summary>设置 TryNode.set_CatchContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.AllInstances.CatchParameterGet">
            <summary>设置 TryNode.get_CatchParameter() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.AllInstances.CatchParameterSetParameterDeclaration">
            <summary>设置 TryNode.set_CatchParameter(ParameterDeclaration value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.AllInstances.CatchVarContextGet">
            <summary>设置 TryNode.get_CatchVarContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.AllInstances.CatchVarNameGet">
            <summary>设置 TryNode.get_CatchVarName() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.AllInstances.ChildrenGet">
            <summary>设置 TryNode.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.AllInstances.FinallyBlockGet">
            <summary>设置 TryNode.get_FinallyBlock() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.AllInstances.FinallyBlockSetBlock">
            <summary>设置 TryNode.set_FinallyBlock(Block value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.AllInstances.FinallyContextGet">
            <summary>设置 TryNode.get_FinallyContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.AllInstances.FinallyContextSetContext">
            <summary>设置 TryNode.set_FinallyContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.AllInstances.ReplaceChildAstNodeAstNode">
            <summary>设置 TryNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.AllInstances.RequiresSeparatorGet">
            <summary>设置 TryNode.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.AllInstances.SetCatchVariableJSVariableField">
            <summary>设置 TryNode.SetCatchVariable(JSVariableField field) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.AllInstances.TryBlockGet">
            <summary>设置 TryNode.get_TryBlock() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.AllInstances.TryBlockSetBlock">
            <summary>设置 TryNode.set_TryBlock(Block value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.AllInstances._set_CatchBlockb__2Block">
            <summary>设置 TryNode.&lt;set_CatchBlock&gt;b__2(Block n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.AllInstances._set_CatchBlockb__3Block">
            <summary>设置 TryNode.&lt;set_CatchBlock&gt;b__3(Block n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.AllInstances._set_CatchParameterb__6ParameterDeclaration">
            <summary>设置 TryNode.&lt;set_CatchParameter&gt;b__6(ParameterDeclaration n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.AllInstances._set_CatchParameterb__7ParameterDeclaration">
            <summary>设置 TryNode.&lt;set_CatchParameter&gt;b__7(ParameterDeclaration n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.AllInstances._set_FinallyBlockb__4Block">
            <summary>设置 TryNode.&lt;set_FinallyBlock&gt;b__4(Block n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.AllInstances._set_FinallyBlockb__5Block">
            <summary>设置 TryNode.&lt;set_FinallyBlock&gt;b__5(Block n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.AllInstances._set_TryBlockb__0Block">
            <summary>设置 TryNode.&lt;set_TryBlock&gt;b__0(Block n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimTryNode.AllInstances._set_TryBlockb__1Block">
            <summary>设置 TryNode.&lt;set_TryBlock&gt;b__1(Block n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator">
            <summary>Microsoft.Ajax.Utilities.UnaryOperator 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.#ctor(Microsoft.Ajax.Utilities.UnaryOperator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.AcceptIVisitor">
            <summary>设置 UnaryOperator.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.ChildrenGet">
            <summary>设置 UnaryOperator.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.ConditionalCommentContainsOnGet">
            <summary>设置 UnaryOperator.get_ConditionalCommentContainsOn() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.ConditionalCommentContainsOnSetBoolean">
            <summary>设置 UnaryOperator.set_ConditionalCommentContainsOn(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.ConstructorContextJSParser">
            <summary>设置 UnaryOperator.UnaryOperator(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.FindPrimitiveType">
            <summary>设置 UnaryOperator.FindPrimitiveType() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.IsConstantGet">
            <summary>设置 UnaryOperator.get_IsConstant() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.IsEquivalentToAstNode">
            <summary>设置 UnaryOperator.IsEquivalentTo(AstNode otherNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.IsPostfixGet">
            <summary>设置 UnaryOperator.get_IsPostfix() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.IsPostfixSetBoolean">
            <summary>设置 UnaryOperator.set_IsPostfix(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.OperandGet">
            <summary>设置 UnaryOperator.get_Operand() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.OperandSetAstNode">
            <summary>设置 UnaryOperator.set_Operand(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.OperatorContextGet">
            <summary>设置 UnaryOperator.get_OperatorContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.OperatorContextSetContext">
            <summary>设置 UnaryOperator.set_OperatorContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.OperatorInConditionalCompilationCommentGet">
            <summary>设置 UnaryOperator.get_OperatorInConditionalCompilationComment() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.OperatorInConditionalCompilationCommentSetBoolean">
            <summary>设置 UnaryOperator.set_OperatorInConditionalCompilationComment(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.OperatorTokenGet">
            <summary>设置 UnaryOperator.get_OperatorToken() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.OperatorTokenSetJSToken">
            <summary>设置 UnaryOperator.set_OperatorToken(JSToken value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.PrecedenceGet">
            <summary>设置 UnaryOperator.get_Precedence() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.ReplaceChildAstNodeAstNode">
            <summary>设置 UnaryOperator.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.ToString">
            <summary>设置 UnaryOperator.ToString() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator._get_IsConstantb__2AstNode">
            <summary>设置 UnaryOperator.&lt;get_IsConstant&gt;b__2(AstNode o) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator._set_Operandb__0AstNode">
            <summary>设置 UnaryOperator.&lt;set_Operand&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator._set_Operandb__1AstNode">
            <summary>设置 UnaryOperator.&lt;set_Operand&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.AllInstances.AcceptIVisitor">
            <summary>设置 UnaryOperator.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.AllInstances.ChildrenGet">
            <summary>设置 UnaryOperator.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.AllInstances.ConditionalCommentContainsOnGet">
            <summary>设置 UnaryOperator.get_ConditionalCommentContainsOn() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.AllInstances.ConditionalCommentContainsOnSetBoolean">
            <summary>设置 UnaryOperator.set_ConditionalCommentContainsOn(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.AllInstances.FindPrimitiveType">
            <summary>设置 UnaryOperator.FindPrimitiveType() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.AllInstances.IsConstantGet">
            <summary>设置 UnaryOperator.get_IsConstant() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.AllInstances.IsEquivalentToAstNode">
            <summary>设置 UnaryOperator.IsEquivalentTo(AstNode otherNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.AllInstances.IsPostfixGet">
            <summary>设置 UnaryOperator.get_IsPostfix() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.AllInstances.IsPostfixSetBoolean">
            <summary>设置 UnaryOperator.set_IsPostfix(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.AllInstances.OperandGet">
            <summary>设置 UnaryOperator.get_Operand() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.AllInstances.OperandSetAstNode">
            <summary>设置 UnaryOperator.set_Operand(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.AllInstances.OperatorContextGet">
            <summary>设置 UnaryOperator.get_OperatorContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.AllInstances.OperatorContextSetContext">
            <summary>设置 UnaryOperator.set_OperatorContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.AllInstances.OperatorInConditionalCompilationCommentGet">
            <summary>设置 UnaryOperator.get_OperatorInConditionalCompilationComment() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.AllInstances.OperatorInConditionalCompilationCommentSetBoolean">
            <summary>设置 UnaryOperator.set_OperatorInConditionalCompilationComment(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.AllInstances.OperatorTokenGet">
            <summary>设置 UnaryOperator.get_OperatorToken() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.AllInstances.OperatorTokenSetJSToken">
            <summary>设置 UnaryOperator.set_OperatorToken(JSToken value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.AllInstances.PrecedenceGet">
            <summary>设置 UnaryOperator.get_Precedence() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.AllInstances.ReplaceChildAstNodeAstNode">
            <summary>设置 UnaryOperator.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.AllInstances.ToString01">
            <summary>设置 UnaryOperator.ToString() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.AllInstances._set_Operandb__0AstNode">
            <summary>设置 UnaryOperator.&lt;set_Operand&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnaryOperator.AllInstances._set_Operandb__1AstNode">
            <summary>设置 UnaryOperator.&lt;set_Operand&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimUndefinedReferenceEventArgs">
            <summary>Microsoft.Ajax.Utilities.UndefinedReferenceEventArgs 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimUndefinedReferenceEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimUndefinedReferenceEventArgs.#ctor(Microsoft.Ajax.Utilities.UndefinedReferenceEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimUndefinedReferenceEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimUndefinedReferenceEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUndefinedReferenceEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUndefinedReferenceEventArgs.ConstructorUndefinedReferenceException">
            <summary>设置 UndefinedReferenceEventArgs.UndefinedReferenceEventArgs(UndefinedReferenceException exception) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUndefinedReferenceEventArgs.ExceptionGet">
            <summary>设置 UndefinedReferenceEventArgs.get_Exception() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUndefinedReferenceEventArgs.ExceptionSetUndefinedReferenceException">
            <summary>设置 UndefinedReferenceEventArgs.set_Exception(UndefinedReferenceException value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimUndefinedReferenceEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUndefinedReferenceEventArgs.AllInstances.ExceptionGet">
            <summary>设置 UndefinedReferenceEventArgs.get_Exception() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUndefinedReferenceEventArgs.AllInstances.ExceptionSetUndefinedReferenceException">
            <summary>设置 UndefinedReferenceEventArgs.set_Exception(UndefinedReferenceException value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimUndefinedReferenceException">
            <summary>Microsoft.Ajax.Utilities.UndefinedReferenceException 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimUndefinedReferenceException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimUndefinedReferenceException.#ctor(Microsoft.Ajax.Utilities.UndefinedReferenceException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimUndefinedReferenceException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimUndefinedReferenceException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUndefinedReferenceException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUndefinedReferenceException.ColumnGet">
            <summary>设置 UndefinedReferenceException.get_Column() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUndefinedReferenceException.ConstructorLookupContext">
            <summary>设置 UndefinedReferenceException.UndefinedReferenceException(Lookup lookup, Context context) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUndefinedReferenceException.LineGet">
            <summary>设置 UndefinedReferenceException.get_Line() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUndefinedReferenceException.LookupNodeGet">
            <summary>设置 UndefinedReferenceException.get_LookupNode() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUndefinedReferenceException.NameGet">
            <summary>设置 UndefinedReferenceException.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUndefinedReferenceException.ReferenceTypeGet">
            <summary>设置 UndefinedReferenceException.get_ReferenceType() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUndefinedReferenceException.ToString">
            <summary>设置 UndefinedReferenceException.ToString() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimUndefinedReferenceException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUndefinedReferenceException.AllInstances.ColumnGet">
            <summary>设置 UndefinedReferenceException.get_Column() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUndefinedReferenceException.AllInstances.LineGet">
            <summary>设置 UndefinedReferenceException.get_Line() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUndefinedReferenceException.AllInstances.LookupNodeGet">
            <summary>设置 UndefinedReferenceException.get_LookupNode() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUndefinedReferenceException.AllInstances.NameGet">
            <summary>设置 UndefinedReferenceException.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUndefinedReferenceException.AllInstances.ReferenceTypeGet">
            <summary>设置 UndefinedReferenceException.get_ReferenceType() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUndefinedReferenceException.AllInstances.ToString01">
            <summary>设置 UndefinedReferenceException.ToString() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimUnknownParameterEventArgs">
            <summary>Microsoft.Ajax.Utilities.UnknownParameterEventArgs 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimUnknownParameterEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimUnknownParameterEventArgs.#ctor(Microsoft.Ajax.Utilities.UnknownParameterEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimUnknownParameterEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimUnknownParameterEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnknownParameterEventArgs.ArgumentsGet">
            <summary>设置 UnknownParameterEventArgs.get_Arguments() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnknownParameterEventArgs.ArgumentsSetIListOfString">
            <summary>设置 UnknownParameterEventArgs.set_Arguments(IList`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnknownParameterEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnknownParameterEventArgs.ConstructorIListOfString">
            <summary>设置 UnknownParameterEventArgs.UnknownParameterEventArgs(IList`1&lt;String&gt; arguments) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnknownParameterEventArgs.IndexGet">
            <summary>设置 UnknownParameterEventArgs.get_Index() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnknownParameterEventArgs.IndexSetInt32">
            <summary>设置 UnknownParameterEventArgs.set_Index(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnknownParameterEventArgs.ParameterPartGet">
            <summary>设置 UnknownParameterEventArgs.get_ParameterPart() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnknownParameterEventArgs.ParameterPartSetString">
            <summary>设置 UnknownParameterEventArgs.set_ParameterPart(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnknownParameterEventArgs.SwitchPartGet">
            <summary>设置 UnknownParameterEventArgs.get_SwitchPart() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnknownParameterEventArgs.SwitchPartSetString">
            <summary>设置 UnknownParameterEventArgs.set_SwitchPart(String value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimUnknownParameterEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnknownParameterEventArgs.AllInstances.ArgumentsGet">
            <summary>设置 UnknownParameterEventArgs.get_Arguments() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnknownParameterEventArgs.AllInstances.ArgumentsSetIListOfString">
            <summary>设置 UnknownParameterEventArgs.set_Arguments(IList`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnknownParameterEventArgs.AllInstances.IndexGet">
            <summary>设置 UnknownParameterEventArgs.get_Index() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnknownParameterEventArgs.AllInstances.IndexSetInt32">
            <summary>设置 UnknownParameterEventArgs.set_Index(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnknownParameterEventArgs.AllInstances.ParameterPartGet">
            <summary>设置 UnknownParameterEventArgs.get_ParameterPart() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnknownParameterEventArgs.AllInstances.ParameterPartSetString">
            <summary>设置 UnknownParameterEventArgs.set_ParameterPart(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnknownParameterEventArgs.AllInstances.SwitchPartGet">
            <summary>设置 UnknownParameterEventArgs.get_SwitchPart() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimUnknownParameterEventArgs.AllInstances.SwitchPartSetString">
            <summary>设置 UnknownParameterEventArgs.set_SwitchPart(String value) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap">
            <summary>Microsoft.Ajax.Utilities.V3SourceMap 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.#ctor(Microsoft.Ajax.Utilities.V3SourceMap)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.Bind(Microsoft.Ajax.Utilities.ISourceMap)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.ConstructorTextWriter">
            <summary>设置 V3SourceMap.V3SourceMap(TextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.Dispose">
            <summary>设置 V3SourceMap.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.EncodeNumberStringBuilderInt32">
            <summary>设置 V3SourceMap.EncodeNumber(StringBuilder sb, Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.EndFileTextWriterString">
            <summary>设置 V3SourceMap.EndFile(TextWriter writer, String newLine) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.EndOutputRunInt32Int32">
            <summary>设置 V3SourceMap.EndOutputRun(Int32 lineNumber, Int32 columnPosition) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.EndPackage">
            <summary>设置 V3SourceMap.EndPackage() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.EndSymbolObjectInt32Int32String">
            <summary>设置 V3SourceMap.EndSymbol(Object symbol, Int32 endLine, Int32 endColumn, String parentContext) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.GenerateMappingsIListOfStringIListOfString">
            <summary>设置 V3SourceMap.GenerateMappings(IList`1&lt;String&gt; fileList, IList`1&lt;String&gt; nameList) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.ImplementationNameGet">
            <summary>设置 V3SourceMap.get_ImplementationName() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.MakeRelativeStringString">
            <summary>设置 V3SourceMap.MakeRelative(String path, String relativeFrom) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.MarkSegmentAstNodeInt32Int32StringContext">
            <summary>设置 V3SourceMap.MarkSegment(AstNode node, Int32 startLine, Int32 startColumn, String name, Context context) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.NameGet">
            <summary>设置 V3SourceMap.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.NewLineInsertedInOutput">
            <summary>设置 V3SourceMap.NewLineInsertedInOutput() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.NormalizeString">
            <summary>设置 V3SourceMap.Normalize(String path) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.OutputEscapedStringString">
            <summary>设置 V3SourceMap.OutputEscapedString(String text) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.SafeHeaderGet">
            <summary>设置 V3SourceMap.get_SafeHeader() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.SafeHeaderSetBoolean">
            <summary>设置 V3SourceMap.set_SafeHeader(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.SourceRootGet">
            <summary>设置 V3SourceMap.get_SourceRoot() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.SourceRootSetString">
            <summary>设置 V3SourceMap.set_SourceRoot(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.StartPackageStringString">
            <summary>设置 V3SourceMap.StartPackage(String sourcePath, String mapPath) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.StartSymbolAstNodeInt32Int32">
            <summary>设置 V3SourceMap.StartSymbol(AstNode node, Int32 startLine, Int32 startColumn) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.StaticConstructor">
            <summary>设置 V3SourceMap.V3SourceMap() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.WritePropertyStartString">
            <summary>设置 V3SourceMap.WritePropertyStart(String name) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.WritePropertyStringICollectionOfString">
            <summary>设置 V3SourceMap.WriteProperty(String name, ICollection`1&lt;String&gt; collection) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.WritePropertyStringInt32">
            <summary>设置 V3SourceMap.WriteProperty(String name, Int32 number) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.WritePropertyStringString">
            <summary>设置 V3SourceMap.WriteProperty(String name, String text) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap._MarkSegmentb__0Context">
            <summary>设置 V3SourceMap.&lt;MarkSegment&gt;b__0(Context c) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.AllInstances.Dispose">
            <summary>设置 V3SourceMap.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.AllInstances.EndFileTextWriterString">
            <summary>设置 V3SourceMap.EndFile(TextWriter writer, String newLine) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.AllInstances.EndOutputRunInt32Int32">
            <summary>设置 V3SourceMap.EndOutputRun(Int32 lineNumber, Int32 columnPosition) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.AllInstances.EndPackage">
            <summary>设置 V3SourceMap.EndPackage() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.AllInstances.EndSymbolObjectInt32Int32String">
            <summary>设置 V3SourceMap.EndSymbol(Object symbol, Int32 endLine, Int32 endColumn, String parentContext) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.AllInstances.GenerateMappingsIListOfStringIListOfString">
            <summary>设置 V3SourceMap.GenerateMappings(IList`1&lt;String&gt; fileList, IList`1&lt;String&gt; nameList) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.AllInstances.MarkSegmentAstNodeInt32Int32StringContext">
            <summary>设置 V3SourceMap.MarkSegment(AstNode node, Int32 startLine, Int32 startColumn, String name, Context context) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.AllInstances.NameGet">
            <summary>设置 V3SourceMap.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.AllInstances.NewLineInsertedInOutput">
            <summary>设置 V3SourceMap.NewLineInsertedInOutput() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.AllInstances.OutputEscapedStringString">
            <summary>设置 V3SourceMap.OutputEscapedString(String text) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.AllInstances.SafeHeaderGet">
            <summary>设置 V3SourceMap.get_SafeHeader() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.AllInstances.SafeHeaderSetBoolean">
            <summary>设置 V3SourceMap.set_SafeHeader(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.AllInstances.SourceRootGet">
            <summary>设置 V3SourceMap.get_SourceRoot() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.AllInstances.SourceRootSetString">
            <summary>设置 V3SourceMap.set_SourceRoot(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.AllInstances.StartPackageStringString">
            <summary>设置 V3SourceMap.StartPackage(String sourcePath, String mapPath) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.AllInstances.StartSymbolAstNodeInt32Int32">
            <summary>设置 V3SourceMap.StartSymbol(AstNode node, Int32 startLine, Int32 startColumn) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.AllInstances.WritePropertyStartString">
            <summary>设置 V3SourceMap.WritePropertyStart(String name) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.AllInstances.WritePropertyStringICollectionOfString">
            <summary>设置 V3SourceMap.WriteProperty(String name, ICollection`1&lt;String&gt; collection) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.AllInstances.WritePropertyStringInt32">
            <summary>设置 V3SourceMap.WriteProperty(String name, Int32 number) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.AllInstances.WritePropertyStringString">
            <summary>设置 V3SourceMap.WriteProperty(String name, String text) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimV3SourceMap.AllInstances._MarkSegmentb__0Context">
            <summary>设置 V3SourceMap.&lt;MarkSegment&gt;b__0(Context c) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimVar">
            <summary>Microsoft.Ajax.Utilities.Var 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimVar.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimVar.#ctor(Microsoft.Ajax.Utilities.Var)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimVar.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimVar.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimVar.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimVar.Bind(System.Collections.Generic.IEnumerable{Microsoft.Ajax.Utilities.VariableDeclaration})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVar.AcceptIVisitor">
            <summary>设置 Var.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVar.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVar.ConstructorContextJSParser">
            <summary>设置 Var.Var(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimVar.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVar.AllInstances.AcceptIVisitor">
            <summary>设置 Var.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration">
            <summary>Microsoft.Ajax.Utilities.VariableDeclaration 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.#ctor(Microsoft.Ajax.Utilities.VariableDeclaration)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.Bind(Microsoft.Ajax.Utilities.INameDeclaration)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.Bind(Microsoft.Ajax.Utilities.INameReference)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.AcceptIVisitor">
            <summary>设置 VariableDeclaration.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.AssignContextGet">
            <summary>设置 VariableDeclaration.get_AssignContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.AssignContextSetContext">
            <summary>设置 VariableDeclaration.set_AssignContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.AssignmentValueGet">
            <summary>设置 VariableDeclaration.get_AssignmentValue() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.ChildrenGet">
            <summary>设置 VariableDeclaration.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.ConstructorContextJSParser">
            <summary>设置 VariableDeclaration.VariableDeclaration(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.GetFunctionGuessAstNode">
            <summary>设置 VariableDeclaration.GetFunctionGuess(AstNode target) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.HasInitializerGet">
            <summary>设置 VariableDeclaration.get_HasInitializer() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.IdentifierGet">
            <summary>设置 VariableDeclaration.get_Identifier() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.IdentifierSetString">
            <summary>设置 VariableDeclaration.set_Identifier(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.InitializerGet">
            <summary>设置 VariableDeclaration.get_Initializer() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.InitializerSetAstNode">
            <summary>设置 VariableDeclaration.set_Initializer(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.IsAssignmentGet">
            <summary>设置 VariableDeclaration.get_IsAssignment() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.IsCCSpecialCaseGet">
            <summary>设置 VariableDeclaration.get_IsCCSpecialCase() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.IsCCSpecialCaseSetBoolean">
            <summary>设置 VariableDeclaration.set_IsCCSpecialCase(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.IsEquivalentToAstNode">
            <summary>设置 VariableDeclaration.IsEquivalentTo(AstNode otherNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.IsExpressionGet">
            <summary>设置 VariableDeclaration.get_IsExpression() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.IsGeneratedGet">
            <summary>设置 VariableDeclaration.get_IsGenerated() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.IsGeneratedSetBoolean">
            <summary>设置 VariableDeclaration.set_IsGenerated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.NameContextGet">
            <summary>设置 VariableDeclaration.get_NameContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.NameContextSetContext">
            <summary>设置 VariableDeclaration.set_NameContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.NameGet">
            <summary>设置 VariableDeclaration.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.RenameNotAllowedGet">
            <summary>设置 VariableDeclaration.get_RenameNotAllowed() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.ReplaceChildAstNodeAstNode">
            <summary>设置 VariableDeclaration.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.UseCCOnGet">
            <summary>设置 VariableDeclaration.get_UseCCOn() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.UseCCOnSetBoolean">
            <summary>设置 VariableDeclaration.set_UseCCOn(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.VariableFieldGet">
            <summary>设置 VariableDeclaration.get_VariableField() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.VariableFieldSetJSVariableField">
            <summary>设置 VariableDeclaration.set_VariableField(JSVariableField value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.VariableScopeGet">
            <summary>设置 VariableDeclaration.get_VariableScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration._get_VariableScopeb__2JSVariableField">
            <summary>设置 VariableDeclaration.&lt;get_VariableScope&gt;b__2(JSVariableField f) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration._set_Initializerb__0AstNode">
            <summary>设置 VariableDeclaration.&lt;set_Initializer&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration._set_Initializerb__1AstNode">
            <summary>设置 VariableDeclaration.&lt;set_Initializer&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.AllInstances.AcceptIVisitor">
            <summary>设置 VariableDeclaration.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.AllInstances.AssignContextGet">
            <summary>设置 VariableDeclaration.get_AssignContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.AllInstances.AssignContextSetContext">
            <summary>设置 VariableDeclaration.set_AssignContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.AllInstances.AssignmentValueGet">
            <summary>设置 VariableDeclaration.get_AssignmentValue() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.AllInstances.ChildrenGet">
            <summary>设置 VariableDeclaration.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.AllInstances.GetFunctionGuessAstNode">
            <summary>设置 VariableDeclaration.GetFunctionGuess(AstNode target) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.AllInstances.HasInitializerGet">
            <summary>设置 VariableDeclaration.get_HasInitializer() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.AllInstances.IdentifierGet">
            <summary>设置 VariableDeclaration.get_Identifier() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.AllInstances.IdentifierSetString">
            <summary>设置 VariableDeclaration.set_Identifier(String value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.AllInstances.InitializerGet">
            <summary>设置 VariableDeclaration.get_Initializer() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.AllInstances.InitializerSetAstNode">
            <summary>设置 VariableDeclaration.set_Initializer(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.AllInstances.IsAssignmentGet">
            <summary>设置 VariableDeclaration.get_IsAssignment() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.AllInstances.IsCCSpecialCaseGet">
            <summary>设置 VariableDeclaration.get_IsCCSpecialCase() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.AllInstances.IsCCSpecialCaseSetBoolean">
            <summary>设置 VariableDeclaration.set_IsCCSpecialCase(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.AllInstances.IsEquivalentToAstNode">
            <summary>设置 VariableDeclaration.IsEquivalentTo(AstNode otherNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.AllInstances.IsExpressionGet">
            <summary>设置 VariableDeclaration.get_IsExpression() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.AllInstances.IsGeneratedGet">
            <summary>设置 VariableDeclaration.get_IsGenerated() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.AllInstances.IsGeneratedSetBoolean">
            <summary>设置 VariableDeclaration.set_IsGenerated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.AllInstances.NameContextGet">
            <summary>设置 VariableDeclaration.get_NameContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.AllInstances.NameContextSetContext">
            <summary>设置 VariableDeclaration.set_NameContext(Context value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.AllInstances.NameGet">
            <summary>设置 VariableDeclaration.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.AllInstances.RenameNotAllowedGet">
            <summary>设置 VariableDeclaration.get_RenameNotAllowed() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.AllInstances.ReplaceChildAstNodeAstNode">
            <summary>设置 VariableDeclaration.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.AllInstances.UseCCOnGet">
            <summary>设置 VariableDeclaration.get_UseCCOn() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.AllInstances.UseCCOnSetBoolean">
            <summary>设置 VariableDeclaration.set_UseCCOn(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.AllInstances.VariableFieldGet">
            <summary>设置 VariableDeclaration.get_VariableField() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.AllInstances.VariableFieldSetJSVariableField">
            <summary>设置 VariableDeclaration.set_VariableField(JSVariableField value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.AllInstances.VariableScopeGet">
            <summary>设置 VariableDeclaration.get_VariableScope() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.AllInstances._set_Initializerb__0AstNode">
            <summary>设置 VariableDeclaration.&lt;set_Initializer&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimVariableDeclaration.AllInstances._set_Initializerb__1AstNode">
            <summary>设置 VariableDeclaration.&lt;set_Initializer&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimWhileNode">
            <summary>Microsoft.Ajax.Utilities.WhileNode 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimWhileNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimWhileNode.#ctor(Microsoft.Ajax.Utilities.WhileNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimWhileNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimWhileNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWhileNode.AcceptIVisitor">
            <summary>设置 WhileNode.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWhileNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWhileNode.ChildrenGet">
            <summary>设置 WhileNode.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWhileNode.ConditionGet">
            <summary>设置 WhileNode.get_Condition() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWhileNode.ConditionSetAstNode">
            <summary>设置 WhileNode.set_Condition(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWhileNode.ConstructorContextJSParser">
            <summary>设置 WhileNode.WhileNode(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWhileNode.ReplaceChildAstNodeAstNode">
            <summary>设置 WhileNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWhileNode.RequiresSeparatorGet">
            <summary>设置 WhileNode.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWhileNode.TerminatingContextGet">
            <summary>设置 WhileNode.get_TerminatingContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWhileNode._get_TerminatingContextb__2Block">
            <summary>设置 WhileNode.&lt;get_TerminatingContext&gt;b__2(Block b) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWhileNode._set_Conditionb__0AstNode">
            <summary>设置 WhileNode.&lt;set_Condition&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWhileNode._set_Conditionb__1AstNode">
            <summary>设置 WhileNode.&lt;set_Condition&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimWhileNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWhileNode.AllInstances.AcceptIVisitor">
            <summary>设置 WhileNode.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWhileNode.AllInstances.ChildrenGet">
            <summary>设置 WhileNode.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWhileNode.AllInstances.ConditionGet">
            <summary>设置 WhileNode.get_Condition() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWhileNode.AllInstances.ConditionSetAstNode">
            <summary>设置 WhileNode.set_Condition(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWhileNode.AllInstances.ReplaceChildAstNodeAstNode">
            <summary>设置 WhileNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWhileNode.AllInstances.RequiresSeparatorGet">
            <summary>设置 WhileNode.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWhileNode.AllInstances.TerminatingContextGet">
            <summary>设置 WhileNode.get_TerminatingContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWhileNode.AllInstances._set_Conditionb__0AstNode">
            <summary>设置 WhileNode.&lt;set_Condition&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWhileNode.AllInstances._set_Conditionb__1AstNode">
            <summary>设置 WhileNode.&lt;set_Condition&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimWithNode">
            <summary>Microsoft.Ajax.Utilities.WithNode 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimWithNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimWithNode.#ctor(Microsoft.Ajax.Utilities.WithNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimWithNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimWithNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithNode.AcceptIVisitor">
            <summary>设置 WithNode.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithNode.BodyGet">
            <summary>设置 WithNode.get_Body() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithNode.BodySetBlock">
            <summary>设置 WithNode.set_Body(Block value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithNode.ChildrenGet">
            <summary>设置 WithNode.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithNode.ConstructorContextJSParser">
            <summary>设置 WithNode.WithNode(Context context, JSParser parser) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithNode.ReplaceChildAstNodeAstNode">
            <summary>设置 WithNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithNode.RequiresSeparatorGet">
            <summary>设置 WithNode.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithNode.TerminatingContextGet">
            <summary>设置 WithNode.get_TerminatingContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithNode.WithObjectGet">
            <summary>设置 WithNode.get_WithObject() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithNode.WithObjectSetAstNode">
            <summary>设置 WithNode.set_WithObject(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithNode._get_TerminatingContextb__4Block">
            <summary>设置 WithNode.&lt;get_TerminatingContext&gt;b__4(Block b) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithNode._set_Bodyb__2Block">
            <summary>设置 WithNode.&lt;set_Body&gt;b__2(Block n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithNode._set_Bodyb__3Block">
            <summary>设置 WithNode.&lt;set_Body&gt;b__3(Block n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithNode._set_WithObjectb__0AstNode">
            <summary>设置 WithNode.&lt;set_WithObject&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithNode._set_WithObjectb__1AstNode">
            <summary>设置 WithNode.&lt;set_WithObject&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimWithNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithNode.AllInstances.AcceptIVisitor">
            <summary>设置 WithNode.Accept(IVisitor visitor) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithNode.AllInstances.BodyGet">
            <summary>设置 WithNode.get_Body() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithNode.AllInstances.BodySetBlock">
            <summary>设置 WithNode.set_Body(Block value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithNode.AllInstances.ChildrenGet">
            <summary>设置 WithNode.get_Children() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithNode.AllInstances.ReplaceChildAstNodeAstNode">
            <summary>设置 WithNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithNode.AllInstances.RequiresSeparatorGet">
            <summary>设置 WithNode.get_RequiresSeparator() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithNode.AllInstances.TerminatingContextGet">
            <summary>设置 WithNode.get_TerminatingContext() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithNode.AllInstances.WithObjectGet">
            <summary>设置 WithNode.get_WithObject() 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithNode.AllInstances.WithObjectSetAstNode">
            <summary>设置 WithNode.set_WithObject(AstNode value) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithNode.AllInstances._set_Bodyb__2Block">
            <summary>设置 WithNode.&lt;set_Body&gt;b__2(Block n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithNode.AllInstances._set_Bodyb__3Block">
            <summary>设置 WithNode.&lt;set_Body&gt;b__3(Block n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithNode.AllInstances._set_WithObjectb__0AstNode">
            <summary>设置 WithNode.&lt;set_WithObject&gt;b__0(AstNode n) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithNode.AllInstances._set_WithObjectb__1AstNode">
            <summary>设置 WithNode.&lt;set_WithObject&gt;b__1(AstNode n) 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimWithScope">
            <summary>Microsoft.Ajax.Utilities.WithScope 的填充码类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimWithScope.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimWithScope.#ctor(Microsoft.Ajax.Utilities.WithScope)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimWithScope.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.ShimWithScope.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithScope.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithScope.ConstructorActivationObjectContextCodeSettings">
            <summary>设置 WithScope.WithScope(ActivationObject parent, Context context, CodeSettings settings) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithScope.CreateFieldJSVariableField">
            <summary>设置 WithScope.CreateField(JSVariableField outerField) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithScope.CreateFieldStringObjectFieldAttributes">
            <summary>设置 WithScope.CreateField(String name, Object value, FieldAttributes attributes) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithScope.CreateInnerFieldJSVariableField">
            <summary>设置 WithScope.CreateInnerField(JSVariableField outerField) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithScope.DeclareScope">
            <summary>设置 WithScope.DeclareScope() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.ShimWithScope.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithScope.AllInstances.CreateFieldJSVariableField">
            <summary>设置 WithScope.CreateField(JSVariableField outerField) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithScope.AllInstances.CreateFieldStringObjectFieldAttributes">
            <summary>设置 WithScope.CreateField(String name, Object value, FieldAttributes attributes) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithScope.AllInstances.CreateInnerFieldJSVariableField">
            <summary>设置 WithScope.CreateInnerField(JSVariableField outerField) 的 填充码</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.ShimWithScope.AllInstances.DeclareScope">
            <summary>设置 WithScope.DeclareScope() 的 填充码</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubActivationObject">
            <summary>Microsoft.Ajax.Utilities.ActivationObject 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubActivationObject.#ctor(Microsoft.Ajax.Utilities.ActivationObject,Microsoft.Ajax.Utilities.CodeSettings)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubActivationObject.CreateField(Microsoft.Ajax.Utilities.JSVariableField)">
            <summary>设置 ActivationObject.CreateField(JSVariableField outerField) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubActivationObject.CreateField(System.String,System.Object,System.Reflection.FieldAttributes)">
            <summary>设置 ActivationObject.CreateField(String name, Object value, FieldAttributes attributes) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubActivationObject.CreateFieldJSVariableField">
            <summary>设置 ActivationObject.CreateField(JSVariableField outerField) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubActivationObject.CreateFieldStringObjectFieldAttributes">
            <summary>设置 ActivationObject.CreateField(String name, Object value, FieldAttributes attributes) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubActivationObject.CreateInnerField(Microsoft.Ajax.Utilities.JSVariableField)">
            <summary>设置 ActivationObject.CreateInnerField(JSVariableField outerField) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubActivationObject.CreateInnerFieldJSVariableField">
            <summary>设置 ActivationObject.CreateInnerField(JSVariableField outerField) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubActivationObject.DeclareField(System.String,System.Object,System.Reflection.FieldAttributes)">
            <summary>设置 ActivationObject.DeclareField(String name, Object value, FieldAttributes attributes) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubActivationObject.DeclareFieldStringObjectFieldAttributes">
            <summary>设置 ActivationObject.DeclareField(String name, Object value, FieldAttributes attributes) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubActivationObject.DeclareScope">
            <summary>设置 ActivationObject.DeclareScope() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubActivationObject.DeclareScope01">
            <summary>设置 ActivationObject.DeclareScope() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubActivationObject.InitializeStub">
            <summary>初始化 type StubActivationObject 的新实例</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubActivationObject.ItemGetString">
            <summary>设置 ActivationObject.get_Item(String name) 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubActivationObject.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubActivationObject.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubActivationObject.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubActivationObject.Item(System.String)">
            <summary>设置 ActivationObject.get_Item(String name) 的 stub</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubAstNode">
            <summary>Microsoft.Ajax.Utilities.AstNode 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubAstNode.#ctor(Microsoft.Ajax.Utilities.Context,Microsoft.Ajax.Utilities.JSParser)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubAstNode.Accept(Microsoft.Ajax.Utilities.IVisitor)">
            <summary>设置 AstNode.Accept(IVisitor visitor) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubAstNode.AcceptIVisitor">
            <summary>设置 AstNode.Accept(IVisitor visitor) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubAstNode.AttachBackingFieldToTerminatingContext">
            <summary>附加委托以将 StubAstNode.TerminatingContext 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubAstNode.ChildrenGet">
            <summary>设置 AstNode.get_Children() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubAstNode.ContainsInOperatorGet">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubAstNode.EnclosingScopeGet">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubAstNode.FindPrimitiveType">
            <summary>设置 AstNode.FindPrimitiveType() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubAstNode.FindPrimitiveType01">
            <summary>设置 AstNode.FindPrimitiveType() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubAstNode.InitializeStub">
            <summary>初始化 type StubAstNode 的新实例</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubAstNode.IsConstantGet">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubAstNode.IsEquivalentTo(Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubAstNode.IsEquivalentToAstNode">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubAstNode.IsExpressionGet">
            <summary>设置 AstNode.get_IsExpression() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubAstNode.LeftHandSideGet">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubAstNode.PrecedenceGet">
            <summary>设置 AstNode.get_Precedence() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubAstNode.ReplaceChild(Microsoft.Ajax.Utilities.AstNode,Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 AstNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubAstNode.ReplaceChildAstNodeAstNode">
            <summary>设置 AstNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubAstNode.TerminatingContextGet">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubAstNode.TerminatingContextSetContext">
            <summary>设置 AstNode.set_TerminatingContext(Context value) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubAstNode.ToCode">
            <summary>设置 AstNode.ToCode() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubAstNode.ToCode01">
            <summary>设置 AstNode.ToCode() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubAstNode.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubAstNode.Children">
            <summary>设置 AstNode.get_Children() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubAstNode.ContainsInOperator">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubAstNode.EnclosingScope">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubAstNode.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubAstNode.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubAstNode.IsConstant">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubAstNode.IsExpression">
            <summary>设置 AstNode.get_IsExpression() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubAstNode.LeftHandSide">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubAstNode.Precedence">
            <summary>设置 AstNode.get_Precedence() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubAstNode.TerminatingContext">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubBinaryOperator">
            <summary>Microsoft.Ajax.Utilities.BinaryOperator 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubBinaryOperator.#ctor(Microsoft.Ajax.Utilities.Context,Microsoft.Ajax.Utilities.JSParser)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubBinaryOperator.Accept(Microsoft.Ajax.Utilities.IVisitor)">
            <summary>设置 BinaryOperator.Accept(IVisitor visitor) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubBinaryOperator.AcceptIVisitor">
            <summary>设置 BinaryOperator.Accept(IVisitor visitor) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubBinaryOperator.ChildrenGet">
            <summary>设置 BinaryOperator.get_Children() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubBinaryOperator.ContainsInOperatorGet">
            <summary>设置 BinaryOperator.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubBinaryOperator.EnclosingScopeGet">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubBinaryOperator.FindPrimitiveType">
            <summary>设置 BinaryOperator.FindPrimitiveType() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubBinaryOperator.FindPrimitiveType01">
            <summary>设置 BinaryOperator.FindPrimitiveType() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubBinaryOperator.InitializeStub">
            <summary>初始化 type StubBinaryOperator 的新实例</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubBinaryOperator.IsConstantGet">
            <summary>设置 BinaryOperator.get_IsConstant() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubBinaryOperator.IsEquivalentTo(Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 BinaryOperator.IsEquivalentTo(AstNode otherNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubBinaryOperator.IsEquivalentToAstNode">
            <summary>设置 BinaryOperator.IsEquivalentTo(AstNode otherNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubBinaryOperator.IsExpressionGet">
            <summary>设置 Expression.get_IsExpression() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubBinaryOperator.LeftHandSideGet">
            <summary>设置 BinaryOperator.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubBinaryOperator.PrecedenceGet">
            <summary>设置 BinaryOperator.get_Precedence() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubBinaryOperator.ReplaceChild(Microsoft.Ajax.Utilities.AstNode,Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 BinaryOperator.ReplaceChild(AstNode oldNode, AstNode newNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubBinaryOperator.ReplaceChildAstNodeAstNode">
            <summary>设置 BinaryOperator.ReplaceChild(AstNode oldNode, AstNode newNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubBinaryOperator.TerminatingContextGet">
            <summary>设置 BinaryOperator.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubBinaryOperator.ToCode">
            <summary>设置 AstNode.ToCode() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubBinaryOperator.ToCode01">
            <summary>设置 AstNode.ToCode() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubBinaryOperator.ToString">
            <summary>设置 BinaryOperator.ToString() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubBinaryOperator.ToString01">
            <summary>设置 BinaryOperator.ToString() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubBinaryOperator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubBinaryOperator.Children">
            <summary>设置 BinaryOperator.get_Children() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubBinaryOperator.ContainsInOperator">
            <summary>设置 BinaryOperator.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubBinaryOperator.EnclosingScope">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubBinaryOperator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubBinaryOperator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubBinaryOperator.IsConstant">
            <summary>设置 BinaryOperator.get_IsConstant() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubBinaryOperator.IsExpression">
            <summary>设置 Expression.get_IsExpression() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubBinaryOperator.LeftHandSide">
            <summary>设置 BinaryOperator.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubBinaryOperator.Precedence">
            <summary>设置 BinaryOperator.get_Precedence() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubBinaryOperator.TerminatingContext">
            <summary>设置 BinaryOperator.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubBlockScope">
            <summary>Microsoft.Ajax.Utilities.BlockScope 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubBlockScope.#ctor(Microsoft.Ajax.Utilities.ActivationObject,Microsoft.Ajax.Utilities.Context,Microsoft.Ajax.Utilities.CodeSettings)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubBlockScope.CreateField(Microsoft.Ajax.Utilities.JSVariableField)">
            <summary>设置 ActivationObject.CreateField(JSVariableField outerField) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubBlockScope.CreateField(System.String,System.Object,System.Reflection.FieldAttributes)">
            <summary>设置 BlockScope.CreateField(String name, Object value, FieldAttributes attributes) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubBlockScope.CreateFieldJSVariableField">
            <summary>设置 ActivationObject.CreateField(JSVariableField outerField) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubBlockScope.CreateFieldStringObjectFieldAttributes">
            <summary>设置 BlockScope.CreateField(String name, Object value, FieldAttributes attributes) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubBlockScope.CreateInnerField(Microsoft.Ajax.Utilities.JSVariableField)">
            <summary>设置 ActivationObject.CreateInnerField(JSVariableField outerField) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubBlockScope.CreateInnerFieldJSVariableField">
            <summary>设置 ActivationObject.CreateInnerField(JSVariableField outerField) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubBlockScope.DeclareField(System.String,System.Object,System.Reflection.FieldAttributes)">
            <summary>设置 ActivationObject.DeclareField(String name, Object value, FieldAttributes attributes) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubBlockScope.DeclareFieldStringObjectFieldAttributes">
            <summary>设置 ActivationObject.DeclareField(String name, Object value, FieldAttributes attributes) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubBlockScope.DeclareScope">
            <summary>设置 BlockScope.DeclareScope() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubBlockScope.DeclareScope01">
            <summary>设置 BlockScope.DeclareScope() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubBlockScope.InitializeStub">
            <summary>初始化 type StubBlockScope 的新实例</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubBlockScope.ItemGetString">
            <summary>设置 ActivationObject.get_Item(String name) 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubBlockScope.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubBlockScope.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubBlockScope.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubBlockScope.Item(System.String)">
            <summary>设置 ActivationObject.get_Item(String name) 的 stub</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubCodeSettings">
            <summary>Microsoft.Ajax.Utilities.CodeSettings 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubCodeSettings.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubCodeSettings.InitializeStub">
            <summary>初始化 type StubCodeSettings 的新实例</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubCodeSettings.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubCodeSettings.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubCodeSettings.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubCommaOperator">
            <summary>Microsoft.Ajax.Utilities.CommaOperator 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubCommaOperator.#ctor(Microsoft.Ajax.Utilities.Context,Microsoft.Ajax.Utilities.JSParser)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubCommaOperator.Accept(Microsoft.Ajax.Utilities.IVisitor)">
            <summary>设置 BinaryOperator.Accept(IVisitor visitor) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubCommaOperator.AcceptIVisitor">
            <summary>设置 BinaryOperator.Accept(IVisitor visitor) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubCommaOperator.ChildrenGet">
            <summary>设置 BinaryOperator.get_Children() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubCommaOperator.ContainsInOperatorGet">
            <summary>设置 BinaryOperator.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubCommaOperator.EnclosingScopeGet">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubCommaOperator.FindPrimitiveType">
            <summary>设置 BinaryOperator.FindPrimitiveType() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubCommaOperator.FindPrimitiveType01">
            <summary>设置 BinaryOperator.FindPrimitiveType() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubCommaOperator.InitializeStub">
            <summary>初始化 type StubCommaOperator 的新实例</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubCommaOperator.IsConstantGet">
            <summary>设置 BinaryOperator.get_IsConstant() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubCommaOperator.IsEquivalentTo(Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 BinaryOperator.IsEquivalentTo(AstNode otherNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubCommaOperator.IsEquivalentToAstNode">
            <summary>设置 BinaryOperator.IsEquivalentTo(AstNode otherNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubCommaOperator.IsExpressionGet">
            <summary>设置 Expression.get_IsExpression() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubCommaOperator.LeftHandSideGet">
            <summary>设置 BinaryOperator.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubCommaOperator.PrecedenceGet">
            <summary>设置 BinaryOperator.get_Precedence() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubCommaOperator.ReplaceChild(Microsoft.Ajax.Utilities.AstNode,Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 BinaryOperator.ReplaceChild(AstNode oldNode, AstNode newNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubCommaOperator.ReplaceChildAstNodeAstNode">
            <summary>设置 BinaryOperator.ReplaceChild(AstNode oldNode, AstNode newNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubCommaOperator.TerminatingContextGet">
            <summary>设置 BinaryOperator.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubCommaOperator.ToCode">
            <summary>设置 AstNode.ToCode() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubCommaOperator.ToCode01">
            <summary>设置 AstNode.ToCode() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubCommaOperator.ToString">
            <summary>设置 BinaryOperator.ToString() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubCommaOperator.ToString01">
            <summary>设置 BinaryOperator.ToString() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubCommaOperator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubCommaOperator.Children">
            <summary>设置 BinaryOperator.get_Children() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubCommaOperator.ContainsInOperator">
            <summary>设置 BinaryOperator.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubCommaOperator.EnclosingScope">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubCommaOperator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubCommaOperator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubCommaOperator.IsConstant">
            <summary>设置 BinaryOperator.get_IsConstant() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubCommaOperator.IsExpression">
            <summary>设置 Expression.get_IsExpression() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubCommaOperator.LeftHandSide">
            <summary>设置 BinaryOperator.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubCommaOperator.Precedence">
            <summary>设置 BinaryOperator.get_Precedence() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubCommaOperator.TerminatingContext">
            <summary>设置 BinaryOperator.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubCommonSettings">
            <summary>Microsoft.Ajax.Utilities.CommonSettings 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubCommonSettings.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubCommonSettings.InitializeStub">
            <summary>初始化 type StubCommonSettings 的新实例</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubCommonSettings.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubCommonSettings.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubCommonSettings.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationComment">
            <summary>Microsoft.Ajax.Utilities.ConditionalCompilationComment 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationComment.#ctor(Microsoft.Ajax.Utilities.Context,Microsoft.Ajax.Utilities.JSParser)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationComment.Accept(Microsoft.Ajax.Utilities.IVisitor)">
            <summary>设置 ConditionalCompilationComment.Accept(IVisitor visitor) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationComment.AcceptIVisitor">
            <summary>设置 ConditionalCompilationComment.Accept(IVisitor visitor) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationComment.AttachBackingFieldToTerminatingContext">
            <summary>附加委托以将 StubConditionalCompilationComment.TerminatingContext 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationComment.ChildrenGet">
            <summary>设置 ConditionalCompilationComment.get_Children() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationComment.ContainsInOperatorGet">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationComment.EnclosingScopeGet">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationComment.FindPrimitiveType">
            <summary>设置 AstNode.FindPrimitiveType() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationComment.FindPrimitiveType01">
            <summary>设置 AstNode.FindPrimitiveType() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationComment.InitializeStub">
            <summary>初始化 type StubConditionalCompilationComment 的新实例</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationComment.IsConstantGet">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationComment.IsEquivalentTo(Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationComment.IsEquivalentToAstNode">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationComment.IsExpressionGet">
            <summary>设置 AstNode.get_IsExpression() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationComment.LeftHandSideGet">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationComment.PrecedenceGet">
            <summary>设置 AstNode.get_Precedence() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationComment.ReplaceChild(Microsoft.Ajax.Utilities.AstNode,Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 ConditionalCompilationComment.ReplaceChild(AstNode oldNode, AstNode newNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationComment.ReplaceChildAstNodeAstNode">
            <summary>设置 ConditionalCompilationComment.ReplaceChild(AstNode oldNode, AstNode newNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationComment.TerminatingContextGet">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationComment.TerminatingContextSetContext">
            <summary>设置 AstNode.set_TerminatingContext(Context value) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationComment.ToCode">
            <summary>设置 AstNode.ToCode() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationComment.ToCode01">
            <summary>设置 AstNode.ToCode() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationComment.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationComment.Children">
            <summary>设置 ConditionalCompilationComment.get_Children() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationComment.ContainsInOperator">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationComment.EnclosingScope">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationComment.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationComment.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationComment.IsConstant">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationComment.IsExpression">
            <summary>设置 AstNode.get_IsExpression() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationComment.LeftHandSide">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationComment.Precedence">
            <summary>设置 AstNode.get_Precedence() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationComment.TerminatingContext">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElse">
            <summary>Microsoft.Ajax.Utilities.ConditionalCompilationElse 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElse.#ctor(Microsoft.Ajax.Utilities.Context,Microsoft.Ajax.Utilities.JSParser)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElse.Accept(Microsoft.Ajax.Utilities.IVisitor)">
            <summary>设置 ConditionalCompilationElse.Accept(IVisitor visitor) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElse.AcceptIVisitor">
            <summary>设置 ConditionalCompilationElse.Accept(IVisitor visitor) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElse.AttachBackingFieldToTerminatingContext">
            <summary>附加委托以将 StubConditionalCompilationElse.TerminatingContext 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElse.ChildrenGet">
            <summary>设置 AstNode.get_Children() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElse.ContainsInOperatorGet">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElse.EnclosingScopeGet">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElse.FindPrimitiveType">
            <summary>设置 AstNode.FindPrimitiveType() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElse.FindPrimitiveType01">
            <summary>设置 AstNode.FindPrimitiveType() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElse.InitializeStub">
            <summary>初始化 type StubConditionalCompilationElse 的新实例</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElse.IsConstantGet">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElse.IsEquivalentTo(Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElse.IsEquivalentToAstNode">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElse.IsExpressionGet">
            <summary>设置 AstNode.get_IsExpression() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElse.LeftHandSideGet">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElse.PrecedenceGet">
            <summary>设置 AstNode.get_Precedence() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElse.ReplaceChild(Microsoft.Ajax.Utilities.AstNode,Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 AstNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElse.ReplaceChildAstNodeAstNode">
            <summary>设置 AstNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElse.TerminatingContextGet">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElse.TerminatingContextSetContext">
            <summary>设置 AstNode.set_TerminatingContext(Context value) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElse.ToCode">
            <summary>设置 AstNode.ToCode() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElse.ToCode01">
            <summary>设置 AstNode.ToCode() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElse.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElse.Children">
            <summary>设置 AstNode.get_Children() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElse.ContainsInOperator">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElse.EnclosingScope">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElse.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElse.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElse.IsConstant">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElse.IsExpression">
            <summary>设置 AstNode.get_IsExpression() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElse.LeftHandSide">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElse.Precedence">
            <summary>设置 AstNode.get_Precedence() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElse.TerminatingContext">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElseIf">
            <summary>Microsoft.Ajax.Utilities.ConditionalCompilationElseIf 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElseIf.#ctor(Microsoft.Ajax.Utilities.Context,Microsoft.Ajax.Utilities.JSParser)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElseIf.Accept(Microsoft.Ajax.Utilities.IVisitor)">
            <summary>设置 ConditionalCompilationElseIf.Accept(IVisitor visitor) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElseIf.AcceptIVisitor">
            <summary>设置 ConditionalCompilationElseIf.Accept(IVisitor visitor) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElseIf.AttachBackingFieldToTerminatingContext">
            <summary>附加委托以将 StubConditionalCompilationElseIf.TerminatingContext 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElseIf.ChildrenGet">
            <summary>设置 ConditionalCompilationElseIf.get_Children() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElseIf.ContainsInOperatorGet">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElseIf.EnclosingScopeGet">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElseIf.FindPrimitiveType">
            <summary>设置 AstNode.FindPrimitiveType() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElseIf.FindPrimitiveType01">
            <summary>设置 AstNode.FindPrimitiveType() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElseIf.InitializeStub">
            <summary>初始化 type StubConditionalCompilationElseIf 的新实例</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElseIf.IsConstantGet">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElseIf.IsEquivalentTo(Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElseIf.IsEquivalentToAstNode">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElseIf.IsExpressionGet">
            <summary>设置 AstNode.get_IsExpression() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElseIf.LeftHandSideGet">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElseIf.PrecedenceGet">
            <summary>设置 AstNode.get_Precedence() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElseIf.ReplaceChild(Microsoft.Ajax.Utilities.AstNode,Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 ConditionalCompilationElseIf.ReplaceChild(AstNode oldNode, AstNode newNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElseIf.ReplaceChildAstNodeAstNode">
            <summary>设置 ConditionalCompilationElseIf.ReplaceChild(AstNode oldNode, AstNode newNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElseIf.TerminatingContextGet">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElseIf.TerminatingContextSetContext">
            <summary>设置 AstNode.set_TerminatingContext(Context value) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElseIf.ToCode">
            <summary>设置 AstNode.ToCode() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElseIf.ToCode01">
            <summary>设置 AstNode.ToCode() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElseIf.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElseIf.Children">
            <summary>设置 ConditionalCompilationElseIf.get_Children() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElseIf.ContainsInOperator">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElseIf.EnclosingScope">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElseIf.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElseIf.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElseIf.IsConstant">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElseIf.IsExpression">
            <summary>设置 AstNode.get_IsExpression() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElseIf.LeftHandSide">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElseIf.Precedence">
            <summary>设置 AstNode.get_Precedence() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationElseIf.TerminatingContext">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationEnd">
            <summary>Microsoft.Ajax.Utilities.ConditionalCompilationEnd 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationEnd.#ctor(Microsoft.Ajax.Utilities.Context,Microsoft.Ajax.Utilities.JSParser)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationEnd.Accept(Microsoft.Ajax.Utilities.IVisitor)">
            <summary>设置 ConditionalCompilationEnd.Accept(IVisitor visitor) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationEnd.AcceptIVisitor">
            <summary>设置 ConditionalCompilationEnd.Accept(IVisitor visitor) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationEnd.AttachBackingFieldToTerminatingContext">
            <summary>附加委托以将 StubConditionalCompilationEnd.TerminatingContext 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationEnd.ChildrenGet">
            <summary>设置 AstNode.get_Children() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationEnd.ContainsInOperatorGet">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationEnd.EnclosingScopeGet">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationEnd.FindPrimitiveType">
            <summary>设置 AstNode.FindPrimitiveType() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationEnd.FindPrimitiveType01">
            <summary>设置 AstNode.FindPrimitiveType() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationEnd.InitializeStub">
            <summary>初始化 type StubConditionalCompilationEnd 的新实例</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationEnd.IsConstantGet">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationEnd.IsEquivalentTo(Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationEnd.IsEquivalentToAstNode">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationEnd.IsExpressionGet">
            <summary>设置 AstNode.get_IsExpression() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationEnd.LeftHandSideGet">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationEnd.PrecedenceGet">
            <summary>设置 AstNode.get_Precedence() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationEnd.ReplaceChild(Microsoft.Ajax.Utilities.AstNode,Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 AstNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationEnd.ReplaceChildAstNodeAstNode">
            <summary>设置 AstNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationEnd.TerminatingContextGet">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationEnd.TerminatingContextSetContext">
            <summary>设置 AstNode.set_TerminatingContext(Context value) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationEnd.ToCode">
            <summary>设置 AstNode.ToCode() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationEnd.ToCode01">
            <summary>设置 AstNode.ToCode() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationEnd.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationEnd.Children">
            <summary>设置 AstNode.get_Children() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationEnd.ContainsInOperator">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationEnd.EnclosingScope">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationEnd.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationEnd.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationEnd.IsConstant">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationEnd.IsExpression">
            <summary>设置 AstNode.get_IsExpression() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationEnd.LeftHandSide">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationEnd.Precedence">
            <summary>设置 AstNode.get_Precedence() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationEnd.TerminatingContext">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationIf">
            <summary>Microsoft.Ajax.Utilities.ConditionalCompilationIf 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationIf.#ctor(Microsoft.Ajax.Utilities.Context,Microsoft.Ajax.Utilities.JSParser)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationIf.Accept(Microsoft.Ajax.Utilities.IVisitor)">
            <summary>设置 ConditionalCompilationIf.Accept(IVisitor visitor) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationIf.AcceptIVisitor">
            <summary>设置 ConditionalCompilationIf.Accept(IVisitor visitor) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationIf.AttachBackingFieldToTerminatingContext">
            <summary>附加委托以将 StubConditionalCompilationIf.TerminatingContext 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationIf.ChildrenGet">
            <summary>设置 ConditionalCompilationIf.get_Children() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationIf.ContainsInOperatorGet">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationIf.EnclosingScopeGet">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationIf.FindPrimitiveType">
            <summary>设置 AstNode.FindPrimitiveType() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationIf.FindPrimitiveType01">
            <summary>设置 AstNode.FindPrimitiveType() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationIf.InitializeStub">
            <summary>初始化 type StubConditionalCompilationIf 的新实例</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationIf.IsConstantGet">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationIf.IsEquivalentTo(Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationIf.IsEquivalentToAstNode">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationIf.IsExpressionGet">
            <summary>设置 AstNode.get_IsExpression() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationIf.LeftHandSideGet">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationIf.PrecedenceGet">
            <summary>设置 AstNode.get_Precedence() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationIf.ReplaceChild(Microsoft.Ajax.Utilities.AstNode,Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 ConditionalCompilationIf.ReplaceChild(AstNode oldNode, AstNode newNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationIf.ReplaceChildAstNodeAstNode">
            <summary>设置 ConditionalCompilationIf.ReplaceChild(AstNode oldNode, AstNode newNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationIf.TerminatingContextGet">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationIf.TerminatingContextSetContext">
            <summary>设置 AstNode.set_TerminatingContext(Context value) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationIf.ToCode">
            <summary>设置 AstNode.ToCode() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationIf.ToCode01">
            <summary>设置 AstNode.ToCode() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationIf.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationIf.Children">
            <summary>设置 ConditionalCompilationIf.get_Children() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationIf.ContainsInOperator">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationIf.EnclosingScope">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationIf.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationIf.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationIf.IsConstant">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationIf.IsExpression">
            <summary>设置 AstNode.get_IsExpression() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationIf.LeftHandSide">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationIf.Precedence">
            <summary>设置 AstNode.get_Precedence() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationIf.TerminatingContext">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationOn">
            <summary>Microsoft.Ajax.Utilities.ConditionalCompilationOn 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationOn.#ctor(Microsoft.Ajax.Utilities.Context,Microsoft.Ajax.Utilities.JSParser)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationOn.Accept(Microsoft.Ajax.Utilities.IVisitor)">
            <summary>设置 ConditionalCompilationOn.Accept(IVisitor visitor) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationOn.AcceptIVisitor">
            <summary>设置 ConditionalCompilationOn.Accept(IVisitor visitor) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationOn.AttachBackingFieldToTerminatingContext">
            <summary>附加委托以将 StubConditionalCompilationOn.TerminatingContext 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationOn.ChildrenGet">
            <summary>设置 AstNode.get_Children() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationOn.ContainsInOperatorGet">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationOn.EnclosingScopeGet">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationOn.FindPrimitiveType">
            <summary>设置 AstNode.FindPrimitiveType() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationOn.FindPrimitiveType01">
            <summary>设置 AstNode.FindPrimitiveType() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationOn.InitializeStub">
            <summary>初始化 type StubConditionalCompilationOn 的新实例</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationOn.IsConstantGet">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationOn.IsEquivalentTo(Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationOn.IsEquivalentToAstNode">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationOn.IsExpressionGet">
            <summary>设置 AstNode.get_IsExpression() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationOn.LeftHandSideGet">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationOn.PrecedenceGet">
            <summary>设置 AstNode.get_Precedence() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationOn.ReplaceChild(Microsoft.Ajax.Utilities.AstNode,Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 AstNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationOn.ReplaceChildAstNodeAstNode">
            <summary>设置 AstNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationOn.TerminatingContextGet">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationOn.TerminatingContextSetContext">
            <summary>设置 AstNode.set_TerminatingContext(Context value) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationOn.ToCode">
            <summary>设置 AstNode.ToCode() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationOn.ToCode01">
            <summary>设置 AstNode.ToCode() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationOn.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationOn.Children">
            <summary>设置 AstNode.get_Children() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationOn.ContainsInOperator">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationOn.EnclosingScope">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationOn.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationOn.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationOn.IsConstant">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationOn.IsExpression">
            <summary>设置 AstNode.get_IsExpression() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationOn.LeftHandSide">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationOn.Precedence">
            <summary>设置 AstNode.get_Precedence() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationOn.TerminatingContext">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationSet">
            <summary>Microsoft.Ajax.Utilities.ConditionalCompilationSet 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationSet.#ctor(Microsoft.Ajax.Utilities.Context,Microsoft.Ajax.Utilities.JSParser)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationSet.Accept(Microsoft.Ajax.Utilities.IVisitor)">
            <summary>设置 ConditionalCompilationSet.Accept(IVisitor visitor) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationSet.AcceptIVisitor">
            <summary>设置 ConditionalCompilationSet.Accept(IVisitor visitor) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationSet.AttachBackingFieldToTerminatingContext">
            <summary>附加委托以将 StubConditionalCompilationSet.TerminatingContext 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationSet.ChildrenGet">
            <summary>设置 ConditionalCompilationSet.get_Children() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationSet.ContainsInOperatorGet">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationSet.EnclosingScopeGet">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationSet.FindPrimitiveType">
            <summary>设置 AstNode.FindPrimitiveType() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationSet.FindPrimitiveType01">
            <summary>设置 AstNode.FindPrimitiveType() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationSet.InitializeStub">
            <summary>初始化 type StubConditionalCompilationSet 的新实例</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationSet.IsConstantGet">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationSet.IsEquivalentTo(Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationSet.IsEquivalentToAstNode">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationSet.IsExpressionGet">
            <summary>设置 AstNode.get_IsExpression() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationSet.LeftHandSideGet">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationSet.PrecedenceGet">
            <summary>设置 AstNode.get_Precedence() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationSet.ReplaceChild(Microsoft.Ajax.Utilities.AstNode,Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 ConditionalCompilationSet.ReplaceChild(AstNode oldNode, AstNode newNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationSet.ReplaceChildAstNodeAstNode">
            <summary>设置 ConditionalCompilationSet.ReplaceChild(AstNode oldNode, AstNode newNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationSet.TerminatingContextGet">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationSet.TerminatingContextSetContext">
            <summary>设置 AstNode.set_TerminatingContext(Context value) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationSet.ToCode">
            <summary>设置 AstNode.ToCode() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationSet.ToCode01">
            <summary>设置 AstNode.ToCode() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationSet.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationSet.Children">
            <summary>设置 ConditionalCompilationSet.get_Children() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationSet.ContainsInOperator">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationSet.EnclosingScope">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationSet.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationSet.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationSet.IsConstant">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationSet.IsExpression">
            <summary>设置 AstNode.get_IsExpression() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationSet.LeftHandSide">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationSet.Precedence">
            <summary>设置 AstNode.get_Precedence() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationSet.TerminatingContext">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationStatement">
            <summary>Microsoft.Ajax.Utilities.ConditionalCompilationStatement 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationStatement.#ctor(Microsoft.Ajax.Utilities.Context,Microsoft.Ajax.Utilities.JSParser)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationStatement.Accept(Microsoft.Ajax.Utilities.IVisitor)">
            <summary>设置 AstNode.Accept(IVisitor visitor) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationStatement.AcceptIVisitor">
            <summary>设置 AstNode.Accept(IVisitor visitor) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationStatement.AttachBackingFieldToTerminatingContext">
            <summary>附加委托以将 StubConditionalCompilationStatement.TerminatingContext 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationStatement.ChildrenGet">
            <summary>设置 AstNode.get_Children() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationStatement.ContainsInOperatorGet">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationStatement.EnclosingScopeGet">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationStatement.FindPrimitiveType">
            <summary>设置 AstNode.FindPrimitiveType() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationStatement.FindPrimitiveType01">
            <summary>设置 AstNode.FindPrimitiveType() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationStatement.InitializeStub">
            <summary>初始化 type StubConditionalCompilationStatement 的新实例</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationStatement.IsConstantGet">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationStatement.IsEquivalentTo(Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationStatement.IsEquivalentToAstNode">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationStatement.IsExpressionGet">
            <summary>设置 AstNode.get_IsExpression() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationStatement.LeftHandSideGet">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationStatement.PrecedenceGet">
            <summary>设置 AstNode.get_Precedence() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationStatement.ReplaceChild(Microsoft.Ajax.Utilities.AstNode,Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 AstNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationStatement.ReplaceChildAstNodeAstNode">
            <summary>设置 AstNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationStatement.TerminatingContextGet">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationStatement.TerminatingContextSetContext">
            <summary>设置 AstNode.set_TerminatingContext(Context value) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationStatement.ToCode">
            <summary>设置 AstNode.ToCode() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationStatement.ToCode01">
            <summary>设置 AstNode.ToCode() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationStatement.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationStatement.Children">
            <summary>设置 AstNode.get_Children() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationStatement.ContainsInOperator">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationStatement.EnclosingScope">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationStatement.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationStatement.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationStatement.IsConstant">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationStatement.IsExpression">
            <summary>设置 AstNode.get_IsExpression() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationStatement.LeftHandSide">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationStatement.Precedence">
            <summary>设置 AstNode.get_Precedence() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConditionalCompilationStatement.TerminatingContext">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubConstStatement">
            <summary>Microsoft.Ajax.Utilities.ConstStatement 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConstStatement.#ctor(Microsoft.Ajax.Utilities.Context,Microsoft.Ajax.Utilities.JSParser)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConstStatement.Accept(Microsoft.Ajax.Utilities.IVisitor)">
            <summary>设置 ConstStatement.Accept(IVisitor visitor) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstStatement.AcceptIVisitor">
            <summary>设置 ConstStatement.Accept(IVisitor visitor) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConstStatement.AttachBackingFieldToTerminatingContext">
            <summary>附加委托以将 StubConstStatement.TerminatingContext 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstStatement.ChildrenGet">
            <summary>设置 Declaration.get_Children() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstStatement.ContainsInOperatorGet">
            <summary>设置 Declaration.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstStatement.EnclosingScopeGet">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConstStatement.FindPrimitiveType">
            <summary>设置 AstNode.FindPrimitiveType() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstStatement.FindPrimitiveType01">
            <summary>设置 AstNode.FindPrimitiveType() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConstStatement.InitializeStub">
            <summary>初始化 type StubConstStatement 的新实例</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstStatement.IsConstantGet">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConstStatement.IsEquivalentTo(Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstStatement.IsEquivalentToAstNode">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstStatement.IsExpressionGet">
            <summary>设置 AstNode.get_IsExpression() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstStatement.LeftHandSideGet">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstStatement.PrecedenceGet">
            <summary>设置 AstNode.get_Precedence() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConstStatement.ReplaceChild(Microsoft.Ajax.Utilities.AstNode,Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 Declaration.ReplaceChild(AstNode oldNode, AstNode newNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstStatement.ReplaceChildAstNodeAstNode">
            <summary>设置 Declaration.ReplaceChild(AstNode oldNode, AstNode newNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstStatement.TerminatingContextGet">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstStatement.TerminatingContextSetContext">
            <summary>设置 AstNode.set_TerminatingContext(Context value) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConstStatement.ToCode">
            <summary>设置 AstNode.ToCode() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstStatement.ToCode01">
            <summary>设置 AstNode.ToCode() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConstStatement.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConstStatement.Children">
            <summary>设置 Declaration.get_Children() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConstStatement.ContainsInOperator">
            <summary>设置 Declaration.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConstStatement.EnclosingScope">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConstStatement.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConstStatement.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConstStatement.IsConstant">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConstStatement.IsExpression">
            <summary>设置 AstNode.get_IsExpression() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConstStatement.LeftHandSide">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConstStatement.Precedence">
            <summary>设置 AstNode.get_Precedence() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConstStatement.TerminatingContext">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper">
            <summary>Microsoft.Ajax.Utilities.ConstantWrapper 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper.#ctor(System.Object,Microsoft.Ajax.Utilities.PrimitiveType,Microsoft.Ajax.Utilities.Context,Microsoft.Ajax.Utilities.JSParser)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper.Accept(Microsoft.Ajax.Utilities.IVisitor)">
            <summary>设置 ConstantWrapper.Accept(IVisitor visitor) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper.AcceptIVisitor">
            <summary>设置 ConstantWrapper.Accept(IVisitor visitor) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper.AttachBackingFieldToTerminatingContext">
            <summary>附加委托以将 StubConstantWrapper.TerminatingContext 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper.ChildrenGet">
            <summary>设置 AstNode.get_Children() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper.ContainsInOperatorGet">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper.EnclosingScopeGet">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper.FindPrimitiveType">
            <summary>设置 ConstantWrapper.FindPrimitiveType() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper.FindPrimitiveType01">
            <summary>设置 ConstantWrapper.FindPrimitiveType() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper.InitializeStub">
            <summary>初始化 type StubConstantWrapper 的新实例</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper.IsConstantGet">
            <summary>设置 ConstantWrapper.get_IsConstant() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper.IsEquivalentTo(Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 ConstantWrapper.IsEquivalentTo(AstNode otherNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper.IsEquivalentToAstNode">
            <summary>设置 ConstantWrapper.IsEquivalentTo(AstNode otherNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper.IsExpressionGet">
            <summary>设置 Expression.get_IsExpression() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper.LeftHandSideGet">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper.PrecedenceGet">
            <summary>设置 Expression.get_Precedence() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper.ReplaceChild(Microsoft.Ajax.Utilities.AstNode,Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 AstNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper.ReplaceChildAstNodeAstNode">
            <summary>设置 AstNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper.TerminatingContextGet">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper.TerminatingContextSetContext">
            <summary>设置 AstNode.set_TerminatingContext(Context value) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper.ToCode">
            <summary>设置 AstNode.ToCode() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper.ToCode01">
            <summary>设置 AstNode.ToCode() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper.ToString">
            <summary>设置 ConstantWrapper.ToString() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper.ToString01">
            <summary>设置 ConstantWrapper.ToString() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper.Children">
            <summary>设置 AstNode.get_Children() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper.ContainsInOperator">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper.EnclosingScope">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper.IsConstant">
            <summary>设置 ConstantWrapper.get_IsConstant() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper.IsExpression">
            <summary>设置 Expression.get_IsExpression() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper.LeftHandSide">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper.Precedence">
            <summary>设置 Expression.get_Precedence() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapper.TerminatingContext">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapperPP">
            <summary>Microsoft.Ajax.Utilities.ConstantWrapperPP 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapperPP.#ctor(Microsoft.Ajax.Utilities.Context,Microsoft.Ajax.Utilities.JSParser)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapperPP.Accept(Microsoft.Ajax.Utilities.IVisitor)">
            <summary>设置 ConstantWrapperPP.Accept(IVisitor visitor) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapperPP.AcceptIVisitor">
            <summary>设置 ConstantWrapperPP.Accept(IVisitor visitor) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapperPP.AttachBackingFieldToTerminatingContext">
            <summary>附加委托以将 StubConstantWrapperPP.TerminatingContext 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapperPP.ChildrenGet">
            <summary>设置 AstNode.get_Children() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapperPP.ContainsInOperatorGet">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapperPP.EnclosingScopeGet">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapperPP.FindPrimitiveType">
            <summary>设置 AstNode.FindPrimitiveType() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapperPP.FindPrimitiveType01">
            <summary>设置 AstNode.FindPrimitiveType() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapperPP.InitializeStub">
            <summary>初始化 type StubConstantWrapperPP 的新实例</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapperPP.IsConstantGet">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapperPP.IsEquivalentTo(Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapperPP.IsEquivalentToAstNode">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapperPP.IsExpressionGet">
            <summary>设置 Expression.get_IsExpression() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapperPP.LeftHandSideGet">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapperPP.PrecedenceGet">
            <summary>设置 Expression.get_Precedence() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapperPP.ReplaceChild(Microsoft.Ajax.Utilities.AstNode,Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 AstNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapperPP.ReplaceChildAstNodeAstNode">
            <summary>设置 AstNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapperPP.TerminatingContextGet">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapperPP.TerminatingContextSetContext">
            <summary>设置 AstNode.set_TerminatingContext(Context value) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapperPP.ToCode">
            <summary>设置 AstNode.ToCode() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapperPP.ToCode01">
            <summary>设置 AstNode.ToCode() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapperPP.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapperPP.Children">
            <summary>设置 AstNode.get_Children() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapperPP.ContainsInOperator">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapperPP.EnclosingScope">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapperPP.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapperPP.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapperPP.IsConstant">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapperPP.IsExpression">
            <summary>设置 Expression.get_IsExpression() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapperPP.LeftHandSide">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapperPP.Precedence">
            <summary>设置 Expression.get_Precedence() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubConstantWrapperPP.TerminatingContext">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubContext">
            <summary>Microsoft.Ajax.Utilities.Context 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubContext.#ctor(Microsoft.Ajax.Utilities.DocumentContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubContext.#ctor(Microsoft.Ajax.Utilities.JSParser)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubContext.#ctor(Microsoft.Ajax.Utilities.DocumentContext,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.Ajax.Utilities.JSToken)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubContext.InitializeStub">
            <summary>初始化 type StubContext 的新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubContext.ToString">
            <summary>设置 Context.ToString() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubContext.ToString01">
            <summary>设置 Context.ToString() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubContext.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubContext.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubContext.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubContextError">
            <summary>Microsoft.Ajax.Utilities.ContextError 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubContextError.#ctor(System.Boolean,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubContextError.InitializeStub">
            <summary>初始化 type StubContextError 的新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubContextError.ToString">
            <summary>设置 ContextError.ToString() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubContextError.ToString01">
            <summary>设置 ContextError.ToString() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubContextError.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubContextError.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubContextError.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubCssParser">
            <summary>Microsoft.Ajax.Utilities.CssParser 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubCssParser.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubCssParser.InitializeStub">
            <summary>初始化 type StubCssParser 的新实例</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubCssParser.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubCssParser.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubCssParser.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubCssSettings">
            <summary>Microsoft.Ajax.Utilities.CssSettings 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubCssSettings.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubCssSettings.InitializeStub">
            <summary>初始化 type StubCssSettings 的新实例</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubCssSettings.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubCssSettings.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubCssSettings.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubCustomNode">
            <summary>Microsoft.Ajax.Utilities.CustomNode 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubCustomNode.#ctor(Microsoft.Ajax.Utilities.Context,Microsoft.Ajax.Utilities.JSParser)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubCustomNode.Accept(Microsoft.Ajax.Utilities.IVisitor)">
            <summary>设置 CustomNode.Accept(IVisitor visitor) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubCustomNode.AcceptIVisitor">
            <summary>设置 CustomNode.Accept(IVisitor visitor) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubCustomNode.AttachBackingFieldToTerminatingContext">
            <summary>附加委托以将 StubCustomNode.TerminatingContext 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubCustomNode.ChildrenGet">
            <summary>设置 AstNode.get_Children() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubCustomNode.ContainsInOperatorGet">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubCustomNode.EnclosingScopeGet">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubCustomNode.FindPrimitiveType">
            <summary>设置 AstNode.FindPrimitiveType() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubCustomNode.FindPrimitiveType01">
            <summary>设置 AstNode.FindPrimitiveType() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubCustomNode.InitializeStub">
            <summary>初始化 type StubCustomNode 的新实例</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubCustomNode.IsConstantGet">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubCustomNode.IsEquivalentTo(Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubCustomNode.IsEquivalentToAstNode">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubCustomNode.IsExpressionGet">
            <summary>设置 AstNode.get_IsExpression() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubCustomNode.LeftHandSideGet">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubCustomNode.PrecedenceGet">
            <summary>设置 AstNode.get_Precedence() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubCustomNode.ReplaceChild(Microsoft.Ajax.Utilities.AstNode,Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 AstNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubCustomNode.ReplaceChildAstNodeAstNode">
            <summary>设置 AstNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubCustomNode.TerminatingContextGet">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubCustomNode.TerminatingContextSetContext">
            <summary>设置 AstNode.set_TerminatingContext(Context value) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubCustomNode.ToCode">
            <summary>设置 CustomNode.ToCode() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubCustomNode.ToCode01">
            <summary>设置 CustomNode.ToCode() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubCustomNode.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubCustomNode.Children">
            <summary>设置 AstNode.get_Children() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubCustomNode.ContainsInOperator">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubCustomNode.EnclosingScope">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubCustomNode.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubCustomNode.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubCustomNode.IsConstant">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubCustomNode.IsExpression">
            <summary>设置 AstNode.get_IsExpression() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubCustomNode.LeftHandSide">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubCustomNode.Precedence">
            <summary>设置 AstNode.get_Precedence() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubCustomNode.TerminatingContext">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubDeclaration">
            <summary>Microsoft.Ajax.Utilities.Declaration 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubDeclaration.#ctor(Microsoft.Ajax.Utilities.Context,Microsoft.Ajax.Utilities.JSParser)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubDeclaration.Accept(Microsoft.Ajax.Utilities.IVisitor)">
            <summary>设置 AstNode.Accept(IVisitor visitor) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubDeclaration.AcceptIVisitor">
            <summary>设置 AstNode.Accept(IVisitor visitor) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubDeclaration.AttachBackingFieldToTerminatingContext">
            <summary>附加委托以将 StubDeclaration.TerminatingContext 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubDeclaration.ChildrenGet">
            <summary>设置 Declaration.get_Children() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubDeclaration.ContainsInOperatorGet">
            <summary>设置 Declaration.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubDeclaration.EnclosingScopeGet">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubDeclaration.FindPrimitiveType">
            <summary>设置 AstNode.FindPrimitiveType() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubDeclaration.FindPrimitiveType01">
            <summary>设置 AstNode.FindPrimitiveType() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubDeclaration.InitializeStub">
            <summary>初始化 type StubDeclaration 的新实例</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubDeclaration.IsConstantGet">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubDeclaration.IsEquivalentTo(Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubDeclaration.IsEquivalentToAstNode">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubDeclaration.IsExpressionGet">
            <summary>设置 AstNode.get_IsExpression() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubDeclaration.LeftHandSideGet">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubDeclaration.PrecedenceGet">
            <summary>设置 AstNode.get_Precedence() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubDeclaration.ReplaceChild(Microsoft.Ajax.Utilities.AstNode,Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 Declaration.ReplaceChild(AstNode oldNode, AstNode newNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubDeclaration.ReplaceChildAstNodeAstNode">
            <summary>设置 Declaration.ReplaceChild(AstNode oldNode, AstNode newNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubDeclaration.TerminatingContextGet">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubDeclaration.TerminatingContextSetContext">
            <summary>设置 AstNode.set_TerminatingContext(Context value) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubDeclaration.ToCode">
            <summary>设置 AstNode.ToCode() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubDeclaration.ToCode01">
            <summary>设置 AstNode.ToCode() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubDeclaration.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubDeclaration.Children">
            <summary>设置 Declaration.get_Children() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubDeclaration.ContainsInOperator">
            <summary>设置 Declaration.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubDeclaration.EnclosingScope">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubDeclaration.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubDeclaration.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubDeclaration.IsConstant">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubDeclaration.IsExpression">
            <summary>设置 AstNode.get_IsExpression() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubDeclaration.LeftHandSide">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubDeclaration.Precedence">
            <summary>设置 AstNode.get_Precedence() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubDeclaration.TerminatingContext">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue">
            <summary>Microsoft.Ajax.Utilities.DirectivePrologue 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue.#ctor(System.String,Microsoft.Ajax.Utilities.Context,Microsoft.Ajax.Utilities.JSParser)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue.Accept(Microsoft.Ajax.Utilities.IVisitor)">
            <summary>设置 DirectivePrologue.Accept(IVisitor visitor) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue.AcceptIVisitor">
            <summary>设置 DirectivePrologue.Accept(IVisitor visitor) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue.AttachBackingFieldToTerminatingContext">
            <summary>附加委托以将 StubDirectivePrologue.TerminatingContext 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue.ChildrenGet">
            <summary>设置 AstNode.get_Children() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue.ContainsInOperatorGet">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue.EnclosingScopeGet">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue.FindPrimitiveType">
            <summary>设置 ConstantWrapper.FindPrimitiveType() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue.FindPrimitiveType01">
            <summary>设置 ConstantWrapper.FindPrimitiveType() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue.InitializeStub">
            <summary>初始化 type StubDirectivePrologue 的新实例</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue.IsConstantGet">
            <summary>设置 DirectivePrologue.get_IsConstant() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue.IsEquivalentTo(Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 ConstantWrapper.IsEquivalentTo(AstNode otherNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue.IsEquivalentToAstNode">
            <summary>设置 ConstantWrapper.IsEquivalentTo(AstNode otherNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue.IsExpressionGet">
            <summary>设置 DirectivePrologue.get_IsExpression() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue.LeftHandSideGet">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue.PrecedenceGet">
            <summary>设置 Expression.get_Precedence() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue.ReplaceChild(Microsoft.Ajax.Utilities.AstNode,Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 AstNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue.ReplaceChildAstNodeAstNode">
            <summary>设置 AstNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue.TerminatingContextGet">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue.TerminatingContextSetContext">
            <summary>设置 AstNode.set_TerminatingContext(Context value) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue.ToCode">
            <summary>设置 AstNode.ToCode() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue.ToCode01">
            <summary>设置 AstNode.ToCode() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue.ToString">
            <summary>设置 ConstantWrapper.ToString() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue.ToString01">
            <summary>设置 ConstantWrapper.ToString() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue.Children">
            <summary>设置 AstNode.get_Children() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue.ContainsInOperator">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue.EnclosingScope">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue.IsConstant">
            <summary>设置 DirectivePrologue.get_IsConstant() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue.IsExpression">
            <summary>设置 DirectivePrologue.get_IsExpression() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue.LeftHandSide">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue.Precedence">
            <summary>设置 Expression.get_Precedence() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubDirectivePrologue.TerminatingContext">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubDocumentContext">
            <summary>Microsoft.Ajax.Utilities.DocumentContext 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubDocumentContext.#ctor(Microsoft.Ajax.Utilities.JSParser)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubDocumentContext.#ctor(Microsoft.Ajax.Utilities.JSParser,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubDocumentContext.InitializeStub">
            <summary>初始化 type StubDocumentContext 的新实例</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubDocumentContext.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubDocumentContext.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubDocumentContext.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubEmptyStatement">
            <summary>Microsoft.Ajax.Utilities.EmptyStatement 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubEmptyStatement.#ctor(Microsoft.Ajax.Utilities.Context,Microsoft.Ajax.Utilities.JSParser)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubEmptyStatement.Accept(Microsoft.Ajax.Utilities.IVisitor)">
            <summary>设置 EmptyStatement.Accept(IVisitor visitor) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubEmptyStatement.AcceptIVisitor">
            <summary>设置 EmptyStatement.Accept(IVisitor visitor) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubEmptyStatement.AttachBackingFieldToTerminatingContext">
            <summary>附加委托以将 StubEmptyStatement.TerminatingContext 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubEmptyStatement.ChildrenGet">
            <summary>设置 AstNode.get_Children() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubEmptyStatement.ContainsInOperatorGet">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubEmptyStatement.EnclosingScopeGet">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubEmptyStatement.FindPrimitiveType">
            <summary>设置 AstNode.FindPrimitiveType() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubEmptyStatement.FindPrimitiveType01">
            <summary>设置 AstNode.FindPrimitiveType() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubEmptyStatement.InitializeStub">
            <summary>初始化 type StubEmptyStatement 的新实例</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubEmptyStatement.IsConstantGet">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubEmptyStatement.IsEquivalentTo(Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubEmptyStatement.IsEquivalentToAstNode">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubEmptyStatement.IsExpressionGet">
            <summary>设置 AstNode.get_IsExpression() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubEmptyStatement.LeftHandSideGet">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubEmptyStatement.PrecedenceGet">
            <summary>设置 AstNode.get_Precedence() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubEmptyStatement.ReplaceChild(Microsoft.Ajax.Utilities.AstNode,Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 AstNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubEmptyStatement.ReplaceChildAstNodeAstNode">
            <summary>设置 AstNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubEmptyStatement.TerminatingContextGet">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubEmptyStatement.TerminatingContextSetContext">
            <summary>设置 AstNode.set_TerminatingContext(Context value) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubEmptyStatement.ToCode">
            <summary>设置 AstNode.ToCode() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubEmptyStatement.ToCode01">
            <summary>设置 AstNode.ToCode() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubEmptyStatement.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubEmptyStatement.Children">
            <summary>设置 AstNode.get_Children() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubEmptyStatement.ContainsInOperator">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubEmptyStatement.EnclosingScope">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubEmptyStatement.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubEmptyStatement.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubEmptyStatement.IsConstant">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubEmptyStatement.IsExpression">
            <summary>设置 AstNode.get_IsExpression() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubEmptyStatement.LeftHandSide">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubEmptyStatement.Precedence">
            <summary>设置 AstNode.get_Precedence() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubEmptyStatement.TerminatingContext">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubExpression">
            <summary>Microsoft.Ajax.Utilities.Expression 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubExpression.#ctor(Microsoft.Ajax.Utilities.Context,Microsoft.Ajax.Utilities.JSParser)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubExpression.Accept(Microsoft.Ajax.Utilities.IVisitor)">
            <summary>设置 AstNode.Accept(IVisitor visitor) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubExpression.AcceptIVisitor">
            <summary>设置 AstNode.Accept(IVisitor visitor) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubExpression.AttachBackingFieldToTerminatingContext">
            <summary>附加委托以将 StubExpression.TerminatingContext 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubExpression.ChildrenGet">
            <summary>设置 AstNode.get_Children() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubExpression.ContainsInOperatorGet">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubExpression.EnclosingScopeGet">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubExpression.FindPrimitiveType">
            <summary>设置 AstNode.FindPrimitiveType() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubExpression.FindPrimitiveType01">
            <summary>设置 AstNode.FindPrimitiveType() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubExpression.InitializeStub">
            <summary>初始化 type StubExpression 的新实例</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubExpression.IsConstantGet">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubExpression.IsEquivalentTo(Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubExpression.IsEquivalentToAstNode">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubExpression.IsExpressionGet">
            <summary>设置 Expression.get_IsExpression() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubExpression.LeftHandSideGet">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubExpression.PrecedenceGet">
            <summary>设置 Expression.get_Precedence() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubExpression.ReplaceChild(Microsoft.Ajax.Utilities.AstNode,Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 AstNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubExpression.ReplaceChildAstNodeAstNode">
            <summary>设置 AstNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubExpression.TerminatingContextGet">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubExpression.TerminatingContextSetContext">
            <summary>设置 AstNode.set_TerminatingContext(Context value) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubExpression.ToCode">
            <summary>设置 AstNode.ToCode() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubExpression.ToCode01">
            <summary>设置 AstNode.ToCode() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubExpression.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubExpression.Children">
            <summary>设置 AstNode.get_Children() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubExpression.ContainsInOperator">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubExpression.EnclosingScope">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubExpression.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubExpression.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubExpression.IsConstant">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubExpression.IsExpression">
            <summary>设置 Expression.get_IsExpression() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubExpression.LeftHandSide">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubExpression.Precedence">
            <summary>设置 Expression.get_Precedence() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubExpression.TerminatingContext">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubGlobalDefineEventArgs">
            <summary>Microsoft.Ajax.Utilities.GlobalDefineEventArgs 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubGlobalDefineEventArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubGlobalDefineEventArgs.InitializeStub">
            <summary>初始化 type StubGlobalDefineEventArgs 的新实例</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubGlobalDefineEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubGlobalDefineEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubGlobalDefineEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator">
            <summary>Microsoft.Ajax.Utilities.GroupingOperator 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator.#ctor(Microsoft.Ajax.Utilities.Context,Microsoft.Ajax.Utilities.JSParser)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator.Accept(Microsoft.Ajax.Utilities.IVisitor)">
            <summary>设置 GroupingOperator.Accept(IVisitor visitor) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator.AcceptIVisitor">
            <summary>设置 GroupingOperator.Accept(IVisitor visitor) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator.AttachBackingFieldToTerminatingContext">
            <summary>附加委托以将 StubGroupingOperator.TerminatingContext 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator.ChildrenGet">
            <summary>设置 GroupingOperator.get_Children() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator.ContainsInOperatorGet">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator.EnclosingScopeGet">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator.FindPrimitiveType">
            <summary>设置 GroupingOperator.FindPrimitiveType() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator.FindPrimitiveType01">
            <summary>设置 GroupingOperator.FindPrimitiveType() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator.InitializeStub">
            <summary>初始化 type StubGroupingOperator 的新实例</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator.IsConstantGet">
            <summary>设置 GroupingOperator.get_IsConstant() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator.IsEquivalentTo(Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 GroupingOperator.IsEquivalentTo(AstNode otherNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator.IsEquivalentToAstNode">
            <summary>设置 GroupingOperator.IsEquivalentTo(AstNode otherNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator.IsExpressionGet">
            <summary>设置 Expression.get_IsExpression() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator.LeftHandSideGet">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator.PrecedenceGet">
            <summary>设置 GroupingOperator.get_Precedence() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator.ReplaceChild(Microsoft.Ajax.Utilities.AstNode,Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 GroupingOperator.ReplaceChild(AstNode oldNode, AstNode newNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator.ReplaceChildAstNodeAstNode">
            <summary>设置 GroupingOperator.ReplaceChild(AstNode oldNode, AstNode newNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator.TerminatingContextGet">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator.TerminatingContextSetContext">
            <summary>设置 AstNode.set_TerminatingContext(Context value) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator.ToCode">
            <summary>设置 AstNode.ToCode() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator.ToCode01">
            <summary>设置 AstNode.ToCode() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator.ToString">
            <summary>设置 GroupingOperator.ToString() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator.ToString01">
            <summary>设置 GroupingOperator.ToString() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator.Children">
            <summary>设置 GroupingOperator.get_Children() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator.ContainsInOperator">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator.EnclosingScope">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator.IsConstant">
            <summary>设置 GroupingOperator.get_IsConstant() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator.IsExpression">
            <summary>设置 Expression.get_IsExpression() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator.LeftHandSide">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator.Precedence">
            <summary>设置 GroupingOperator.get_Precedence() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubGroupingOperator.TerminatingContext">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubINameDeclaration">
            <summary>Microsoft.Ajax.Utilities.INameDeclaration 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubINameDeclaration.#ctor">
            <summary>初始化 type StubINameDeclaration 的新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubINameDeclaration.AttachBackingFieldToVariableField">
            <summary>附加委托以将 StubINameDeclaration.VariableField 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubINameDeclaration.InitializerGet">
            <summary>设置 INameDeclaration.get_Initializer() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubINameDeclaration.NameContextGet">
            <summary>设置 INameDeclaration.get_NameContext() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubINameDeclaration.NameGet">
            <summary>设置 INameDeclaration.get_Name() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubINameDeclaration.ParentGet">
            <summary>设置 INameDeclaration.get_Parent() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubINameDeclaration.RenameNotAllowedGet">
            <summary>设置 INameDeclaration.get_RenameNotAllowed() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubINameDeclaration.VariableFieldGet">
            <summary>设置 INameDeclaration.get_VariableField() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubINameDeclaration.VariableFieldSetJSVariableField">
            <summary>设置 INameDeclaration.set_VariableField(JSVariableField value) 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubINameDeclaration.wg::Microsoft#Ajax#Utilities#INameDeclaration#Initializer">
            <summary>设置 INameDeclaration.get_Initializer() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubINameDeclaration.wg::Microsoft#Ajax#Utilities#INameDeclaration#Name">
            <summary>设置 INameDeclaration.get_Name() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubINameDeclaration.wg::Microsoft#Ajax#Utilities#INameDeclaration#NameContext">
            <summary>设置 INameDeclaration.get_NameContext() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubINameDeclaration.wg::Microsoft#Ajax#Utilities#INameDeclaration#Parent">
            <summary>设置 INameDeclaration.get_Parent() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubINameDeclaration.wg::Microsoft#Ajax#Utilities#INameDeclaration#RenameNotAllowed">
            <summary>设置 INameDeclaration.get_RenameNotAllowed() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubINameDeclaration.wg::Microsoft#Ajax#Utilities#INameDeclaration#VariableField">
            <summary>设置 INameDeclaration.get_VariableField() 的 stub</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubINameReference">
            <summary>Microsoft.Ajax.Utilities.INameReference 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubINameReference.#ctor">
            <summary>初始化 type StubINameReference 的新实例</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubINameReference.AssignmentValueGet">
            <summary>设置 INameReference.get_AssignmentValue() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubINameReference.IndexGet">
            <summary>设置 INameReference.get_Index() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubINameReference.IsAssignmentGet">
            <summary>设置 INameReference.get_IsAssignment() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubINameReference.NameGet">
            <summary>设置 INameReference.get_Name() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubINameReference.VariableFieldGet">
            <summary>设置 INameReference.get_VariableField() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubINameReference.VariableScopeGet">
            <summary>设置 INameReference.get_VariableScope() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubINameReference.wg::Microsoft#Ajax#Utilities#INameReference#AssignmentValue">
            <summary>设置 INameReference.get_AssignmentValue() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubINameReference.wg::Microsoft#Ajax#Utilities#INameReference#Index">
            <summary>设置 INameReference.get_Index() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubINameReference.wg::Microsoft#Ajax#Utilities#INameReference#IsAssignment">
            <summary>设置 INameReference.get_IsAssignment() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubINameReference.wg::Microsoft#Ajax#Utilities#INameReference#Name">
            <summary>设置 INameReference.get_Name() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubINameReference.wg::Microsoft#Ajax#Utilities#INameReference#VariableField">
            <summary>设置 INameReference.get_VariableField() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubINameReference.wg::Microsoft#Ajax#Utilities#INameReference#VariableScope">
            <summary>设置 INameReference.get_VariableScope() 的 stub</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubISourceMap">
            <summary>Microsoft.Ajax.Utilities.ISourceMap 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubISourceMap.#ctor">
            <summary>初始化 type StubISourceMap 的新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubISourceMap.AttachBackingFieldToSafeHeader">
            <summary>附加委托以将 StubISourceMap.SafeHeader 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubISourceMap.AttachBackingFieldToSourceRoot">
            <summary>附加委托以将 StubISourceMap.SourceRoot 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubISourceMap.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubISourceMap.EndFileTextWriterString">
            <summary>设置 ISourceMap.EndFile(TextWriter writer, String newLine) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubISourceMap.EndOutputRunInt32Int32">
            <summary>设置 ISourceMap.EndOutputRun(Int32 lineNumber, Int32 columnPosition) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubISourceMap.EndPackage">
            <summary>设置 ISourceMap.EndPackage() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubISourceMap.EndSymbolObjectInt32Int32String">
            <summary>设置 ISourceMap.EndSymbol(Object symbol, Int32 endLine, Int32 endColumn, String parentContext) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubISourceMap.MarkSegmentAstNodeInt32Int32StringContext">
            <summary>设置 ISourceMap.MarkSegment(AstNode node, Int32 startLine, Int32 startColumn, String name, Context context) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubISourceMap.wg::Microsoft#Ajax#Utilities#ISourceMap#EndFile(System.IO.TextWriter,System.String)">
            <summary>设置 ISourceMap.EndFile(TextWriter writer, String newLine) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubISourceMap.wg::Microsoft#Ajax#Utilities#ISourceMap#EndOutputRun(System.Int32,System.Int32)">
            <summary>设置 ISourceMap.EndOutputRun(Int32 lineNumber, Int32 columnPosition) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubISourceMap.wg::Microsoft#Ajax#Utilities#ISourceMap#EndPackage">
            <summary>设置 ISourceMap.EndPackage() 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubISourceMap.wg::Microsoft#Ajax#Utilities#ISourceMap#EndSymbol(System.Object,System.Int32,System.Int32,System.String)">
            <summary>设置 ISourceMap.EndSymbol(Object symbol, Int32 endLine, Int32 endColumn, String parentContext) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubISourceMap.wg::Microsoft#Ajax#Utilities#ISourceMap#MarkSegment(Microsoft.Ajax.Utilities.AstNode,System.Int32,System.Int32,System.String,Microsoft.Ajax.Utilities.Context)">
            <summary>设置 ISourceMap.MarkSegment(AstNode node, Int32 startLine, Int32 startColumn, String name, Context context) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubISourceMap.wg::Microsoft#Ajax#Utilities#ISourceMap#NewLineInsertedInOutput">
            <summary>设置 ISourceMap.NewLineInsertedInOutput() 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubISourceMap.wg::Microsoft#Ajax#Utilities#ISourceMap#StartPackage(System.String,System.String)">
            <summary>设置 ISourceMap.StartPackage(String sourcePath, String mapPath) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubISourceMap.wg::Microsoft#Ajax#Utilities#ISourceMap#StartSymbol(Microsoft.Ajax.Utilities.AstNode,System.Int32,System.Int32)">
            <summary>设置 ISourceMap.StartSymbol(AstNode node, Int32 startLine, Int32 startColumn) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubISourceMap.NameGet">
            <summary>设置 ISourceMap.get_Name() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubISourceMap.NewLineInsertedInOutput">
            <summary>设置 ISourceMap.NewLineInsertedInOutput() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubISourceMap.SafeHeaderGet">
            <summary>设置 ISourceMap.get_SafeHeader() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubISourceMap.SafeHeaderSetBoolean">
            <summary>设置 ISourceMap.set_SafeHeader(Boolean value) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubISourceMap.SourceRootGet">
            <summary>设置 ISourceMap.get_SourceRoot() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubISourceMap.SourceRootSetString">
            <summary>设置 ISourceMap.set_SourceRoot(String value) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubISourceMap.StartPackageStringString">
            <summary>设置 ISourceMap.StartPackage(String sourcePath, String mapPath) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubISourceMap.StartSymbolAstNodeInt32Int32">
            <summary>设置 ISourceMap.StartSymbol(AstNode node, Int32 startLine, Int32 startColumn) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubISourceMap.global::System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubISourceMap.wg::Microsoft#Ajax#Utilities#ISourceMap#Name">
            <summary>设置 ISourceMap.get_Name() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubISourceMap.wg::Microsoft#Ajax#Utilities#ISourceMap#SafeHeader">
            <summary>设置 ISourceMap.get_SafeHeader() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubISourceMap.wg::Microsoft#Ajax#Utilities#ISourceMap#SourceRoot">
            <summary>设置 ISourceMap.get_SourceRoot() 的 stub</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubIVisitor">
            <summary>Microsoft.Ajax.Utilities.IVisitor 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.#ctor">
            <summary>初始化 type StubIVisitor 的新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.ArrayLiteral)">
            <summary>设置 IVisitor.Visit(ArrayLiteral node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.AspNetBlockNode)">
            <summary>设置 IVisitor.Visit(AspNetBlockNode node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.AstNodeList)">
            <summary>设置 IVisitor.Visit(AstNodeList node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.BinaryOperator)">
            <summary>设置 IVisitor.Visit(BinaryOperator node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.Block)">
            <summary>设置 IVisitor.Visit(Block node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.Break)">
            <summary>设置 IVisitor.Visit(Break node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.CallNode)">
            <summary>设置 IVisitor.Visit(CallNode node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.Conditional)">
            <summary>设置 IVisitor.Visit(Conditional node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.ConditionalCompilationComment)">
            <summary>设置 IVisitor.Visit(ConditionalCompilationComment node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.ConditionalCompilationElse)">
            <summary>设置 IVisitor.Visit(ConditionalCompilationElse node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.ConditionalCompilationElseIf)">
            <summary>设置 IVisitor.Visit(ConditionalCompilationElseIf node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.ConditionalCompilationEnd)">
            <summary>设置 IVisitor.Visit(ConditionalCompilationEnd node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.ConditionalCompilationIf)">
            <summary>设置 IVisitor.Visit(ConditionalCompilationIf node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.ConditionalCompilationOn)">
            <summary>设置 IVisitor.Visit(ConditionalCompilationOn node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.ConditionalCompilationSet)">
            <summary>设置 IVisitor.Visit(ConditionalCompilationSet node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.ConstStatement)">
            <summary>设置 IVisitor.Visit(ConstStatement node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.ConstantWrapper)">
            <summary>设置 IVisitor.Visit(ConstantWrapper node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.ConstantWrapperPP)">
            <summary>设置 IVisitor.Visit(ConstantWrapperPP node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.ContinueNode)">
            <summary>设置 IVisitor.Visit(ContinueNode node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.CustomNode)">
            <summary>设置 IVisitor.Visit(CustomNode node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.DebuggerNode)">
            <summary>设置 IVisitor.Visit(DebuggerNode node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.DirectivePrologue)">
            <summary>设置 IVisitor.Visit(DirectivePrologue node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.DoWhile)">
            <summary>设置 IVisitor.Visit(DoWhile node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.EmptyStatement)">
            <summary>设置 IVisitor.Visit(EmptyStatement node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.ForIn)">
            <summary>设置 IVisitor.Visit(ForIn node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.ForNode)">
            <summary>设置 IVisitor.Visit(ForNode node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.FunctionObject)">
            <summary>设置 IVisitor.Visit(FunctionObject node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.GetterSetter)">
            <summary>设置 IVisitor.Visit(GetterSetter node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.GroupingOperator)">
            <summary>设置 IVisitor.Visit(GroupingOperator node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.IfNode)">
            <summary>设置 IVisitor.Visit(IfNode node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.ImportantComment)">
            <summary>设置 IVisitor.Visit(ImportantComment node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.LabeledStatement)">
            <summary>设置 IVisitor.Visit(LabeledStatement node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.LexicalDeclaration)">
            <summary>设置 IVisitor.Visit(LexicalDeclaration node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.Lookup)">
            <summary>设置 IVisitor.Visit(Lookup node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.Member)">
            <summary>设置 IVisitor.Visit(Member node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.ObjectLiteral)">
            <summary>设置 IVisitor.Visit(ObjectLiteral node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.ObjectLiteralField)">
            <summary>设置 IVisitor.Visit(ObjectLiteralField node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.ObjectLiteralProperty)">
            <summary>设置 IVisitor.Visit(ObjectLiteralProperty node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.ParameterDeclaration)">
            <summary>设置 IVisitor.Visit(ParameterDeclaration node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.RegExpLiteral)">
            <summary>设置 IVisitor.Visit(RegExpLiteral node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.ReturnNode)">
            <summary>设置 IVisitor.Visit(ReturnNode node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.Switch)">
            <summary>设置 IVisitor.Visit(Switch node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.SwitchCase)">
            <summary>设置 IVisitor.Visit(SwitchCase node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.ThisLiteral)">
            <summary>设置 IVisitor.Visit(ThisLiteral node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.ThrowNode)">
            <summary>设置 IVisitor.Visit(ThrowNode node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.TryNode)">
            <summary>设置 IVisitor.Visit(TryNode node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.UnaryOperator)">
            <summary>设置 IVisitor.Visit(UnaryOperator node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.Var)">
            <summary>设置 IVisitor.Visit(Var node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.VariableDeclaration)">
            <summary>设置 IVisitor.Visit(VariableDeclaration node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.WhileNode)">
            <summary>设置 IVisitor.Visit(WhileNode node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.wg::Microsoft#Ajax#Utilities#IVisitor#Visit(Microsoft.Ajax.Utilities.WithNode)">
            <summary>设置 IVisitor.Visit(WithNode node) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitArrayLiteral">
            <summary>设置 IVisitor.Visit(ArrayLiteral node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitAspNetBlockNode">
            <summary>设置 IVisitor.Visit(AspNetBlockNode node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitAstNodeList">
            <summary>设置 IVisitor.Visit(AstNodeList node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitBinaryOperator">
            <summary>设置 IVisitor.Visit(BinaryOperator node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitBlock">
            <summary>设置 IVisitor.Visit(Block node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitBreak">
            <summary>设置 IVisitor.Visit(Break node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitCallNode">
            <summary>设置 IVisitor.Visit(CallNode node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitConditional">
            <summary>设置 IVisitor.Visit(Conditional node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitConditionalCompilationComment">
            <summary>设置 IVisitor.Visit(ConditionalCompilationComment node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitConditionalCompilationElse">
            <summary>设置 IVisitor.Visit(ConditionalCompilationElse node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitConditionalCompilationElseIf">
            <summary>设置 IVisitor.Visit(ConditionalCompilationElseIf node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitConditionalCompilationEnd">
            <summary>设置 IVisitor.Visit(ConditionalCompilationEnd node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitConditionalCompilationIf">
            <summary>设置 IVisitor.Visit(ConditionalCompilationIf node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitConditionalCompilationOn">
            <summary>设置 IVisitor.Visit(ConditionalCompilationOn node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitConditionalCompilationSet">
            <summary>设置 IVisitor.Visit(ConditionalCompilationSet node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitConstStatement">
            <summary>设置 IVisitor.Visit(ConstStatement node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitConstantWrapper">
            <summary>设置 IVisitor.Visit(ConstantWrapper node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitConstantWrapperPP">
            <summary>设置 IVisitor.Visit(ConstantWrapperPP node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitContinueNode">
            <summary>设置 IVisitor.Visit(ContinueNode node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitCustomNode">
            <summary>设置 IVisitor.Visit(CustomNode node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitDebuggerNode">
            <summary>设置 IVisitor.Visit(DebuggerNode node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitDirectivePrologue">
            <summary>设置 IVisitor.Visit(DirectivePrologue node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitDoWhile">
            <summary>设置 IVisitor.Visit(DoWhile node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitEmptyStatement">
            <summary>设置 IVisitor.Visit(EmptyStatement node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitForIn">
            <summary>设置 IVisitor.Visit(ForIn node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitForNode">
            <summary>设置 IVisitor.Visit(ForNode node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitFunctionObject">
            <summary>设置 IVisitor.Visit(FunctionObject node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitGetterSetter">
            <summary>设置 IVisitor.Visit(GetterSetter node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitGroupingOperator">
            <summary>设置 IVisitor.Visit(GroupingOperator node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitIfNode">
            <summary>设置 IVisitor.Visit(IfNode node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitImportantComment">
            <summary>设置 IVisitor.Visit(ImportantComment node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitLabeledStatement">
            <summary>设置 IVisitor.Visit(LabeledStatement node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitLexicalDeclaration">
            <summary>设置 IVisitor.Visit(LexicalDeclaration node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitLookup">
            <summary>设置 IVisitor.Visit(Lookup node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitMember">
            <summary>设置 IVisitor.Visit(Member node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitObjectLiteral">
            <summary>设置 IVisitor.Visit(ObjectLiteral node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitObjectLiteralField">
            <summary>设置 IVisitor.Visit(ObjectLiteralField node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitObjectLiteralProperty">
            <summary>设置 IVisitor.Visit(ObjectLiteralProperty node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitParameterDeclaration">
            <summary>设置 IVisitor.Visit(ParameterDeclaration node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitRegExpLiteral">
            <summary>设置 IVisitor.Visit(RegExpLiteral node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitReturnNode">
            <summary>设置 IVisitor.Visit(ReturnNode node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitSwitch">
            <summary>设置 IVisitor.Visit(Switch node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitSwitchCase">
            <summary>设置 IVisitor.Visit(SwitchCase node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitThisLiteral">
            <summary>设置 IVisitor.Visit(ThisLiteral node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitThrowNode">
            <summary>设置 IVisitor.Visit(ThrowNode node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitTryNode">
            <summary>设置 IVisitor.Visit(TryNode node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitUnaryOperator">
            <summary>设置 IVisitor.Visit(UnaryOperator node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitVar">
            <summary>设置 IVisitor.Visit(Var node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitVariableDeclaration">
            <summary>设置 IVisitor.Visit(VariableDeclaration node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitWhileNode">
            <summary>设置 IVisitor.Visit(WhileNode node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIVisitor.VisitWithNode">
            <summary>设置 IVisitor.Visit(WithNode node) 的 stub</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubImportantComment">
            <summary>Microsoft.Ajax.Utilities.ImportantComment 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubImportantComment.#ctor(Microsoft.Ajax.Utilities.Context,Microsoft.Ajax.Utilities.JSParser)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubImportantComment.Accept(Microsoft.Ajax.Utilities.IVisitor)">
            <summary>设置 ImportantComment.Accept(IVisitor visitor) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubImportantComment.AcceptIVisitor">
            <summary>设置 ImportantComment.Accept(IVisitor visitor) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubImportantComment.AttachBackingFieldToTerminatingContext">
            <summary>附加委托以将 StubImportantComment.TerminatingContext 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubImportantComment.ChildrenGet">
            <summary>设置 AstNode.get_Children() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubImportantComment.ContainsInOperatorGet">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubImportantComment.EnclosingScopeGet">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubImportantComment.FindPrimitiveType">
            <summary>设置 AstNode.FindPrimitiveType() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubImportantComment.FindPrimitiveType01">
            <summary>设置 AstNode.FindPrimitiveType() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubImportantComment.InitializeStub">
            <summary>初始化 type StubImportantComment 的新实例</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubImportantComment.IsConstantGet">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubImportantComment.IsEquivalentTo(Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubImportantComment.IsEquivalentToAstNode">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubImportantComment.IsExpressionGet">
            <summary>设置 AstNode.get_IsExpression() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubImportantComment.LeftHandSideGet">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubImportantComment.PrecedenceGet">
            <summary>设置 AstNode.get_Precedence() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubImportantComment.ReplaceChild(Microsoft.Ajax.Utilities.AstNode,Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 AstNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubImportantComment.ReplaceChildAstNodeAstNode">
            <summary>设置 AstNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubImportantComment.TerminatingContextGet">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubImportantComment.TerminatingContextSetContext">
            <summary>设置 AstNode.set_TerminatingContext(Context value) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubImportantComment.ToCode">
            <summary>设置 AstNode.ToCode() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubImportantComment.ToCode01">
            <summary>设置 AstNode.ToCode() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubImportantComment.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubImportantComment.Children">
            <summary>设置 AstNode.get_Children() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubImportantComment.ContainsInOperator">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubImportantComment.EnclosingScope">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubImportantComment.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubImportantComment.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubImportantComment.IsConstant">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubImportantComment.IsExpression">
            <summary>设置 AstNode.get_IsExpression() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubImportantComment.LeftHandSide">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubImportantComment.Precedence">
            <summary>设置 AstNode.get_Precedence() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubImportantComment.TerminatingContext">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubInvalidSwitchEventArgs">
            <summary>Microsoft.Ajax.Utilities.InvalidSwitchEventArgs 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubInvalidSwitchEventArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubInvalidSwitchEventArgs.InitializeStub">
            <summary>初始化 type StubInvalidSwitchEventArgs 的新实例</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubInvalidSwitchEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubInvalidSwitchEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubInvalidSwitchEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubIterationStatement">
            <summary>Microsoft.Ajax.Utilities.IterationStatement 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIterationStatement.#ctor(Microsoft.Ajax.Utilities.Context,Microsoft.Ajax.Utilities.JSParser)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIterationStatement.Accept(Microsoft.Ajax.Utilities.IVisitor)">
            <summary>设置 AstNode.Accept(IVisitor visitor) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIterationStatement.AcceptIVisitor">
            <summary>设置 AstNode.Accept(IVisitor visitor) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIterationStatement.AttachBackingFieldToTerminatingContext">
            <summary>附加委托以将 StubIterationStatement.TerminatingContext 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIterationStatement.ChildrenGet">
            <summary>设置 AstNode.get_Children() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIterationStatement.ContainsInOperatorGet">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIterationStatement.EnclosingScopeGet">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIterationStatement.FindPrimitiveType">
            <summary>设置 AstNode.FindPrimitiveType() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIterationStatement.FindPrimitiveType01">
            <summary>设置 AstNode.FindPrimitiveType() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIterationStatement.InitializeStub">
            <summary>初始化 type StubIterationStatement 的新实例</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIterationStatement.IsConstantGet">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIterationStatement.IsEquivalentTo(Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIterationStatement.IsEquivalentToAstNode">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIterationStatement.IsExpressionGet">
            <summary>设置 AstNode.get_IsExpression() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIterationStatement.LeftHandSideGet">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIterationStatement.PrecedenceGet">
            <summary>设置 AstNode.get_Precedence() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIterationStatement.ReplaceChild(Microsoft.Ajax.Utilities.AstNode,Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 AstNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIterationStatement.ReplaceChildAstNodeAstNode">
            <summary>设置 AstNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIterationStatement.TerminatingContextGet">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIterationStatement.TerminatingContextSetContext">
            <summary>设置 AstNode.set_TerminatingContext(Context value) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubIterationStatement.ToCode">
            <summary>设置 AstNode.ToCode() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubIterationStatement.ToCode01">
            <summary>设置 AstNode.ToCode() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubIterationStatement.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubIterationStatement.Children">
            <summary>设置 AstNode.get_Children() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubIterationStatement.ContainsInOperator">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubIterationStatement.EnclosingScope">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubIterationStatement.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubIterationStatement.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubIterationStatement.IsConstant">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubIterationStatement.IsExpression">
            <summary>设置 AstNode.get_IsExpression() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubIterationStatement.LeftHandSide">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubIterationStatement.Precedence">
            <summary>设置 AstNode.get_Precedence() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubIterationStatement.TerminatingContext">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubJSEncoderFallback">
            <summary>Microsoft.Ajax.Utilities.JSEncoderFallback 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubJSEncoderFallback.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubJSEncoderFallback.CreateFallbackBuffer">
            <summary>设置 JSEncoderFallback.CreateFallbackBuffer() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubJSEncoderFallback.CreateFallbackBuffer01">
            <summary>设置 JSEncoderFallback.CreateFallbackBuffer() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubJSEncoderFallback.InitializeStub">
            <summary>初始化 type StubJSEncoderFallback 的新实例</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubJSEncoderFallback.MaxCharCountGet">
            <summary>设置 JSEncoderFallback.get_MaxCharCount() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubJSEncoderFallback.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubJSEncoderFallback.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubJSEncoderFallback.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubJSEncoderFallback.MaxCharCount">
            <summary>设置 JSEncoderFallback.get_MaxCharCount() 的 stub</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubJSVariableField">
            <summary>Microsoft.Ajax.Utilities.JSVariableField 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubJSVariableField.#ctor(Microsoft.Ajax.Utilities.FieldType,System.String,System.Reflection.FieldAttributes,System.Object)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubJSVariableField.GetHashCode">
            <summary>设置 JSVariableField.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubJSVariableField.GetHashCode01">
            <summary>设置 JSVariableField.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubJSVariableField.InitializeStub">
            <summary>初始化 type StubJSVariableField 的新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubJSVariableField.ToString">
            <summary>设置 JSVariableField.ToString() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubJSVariableField.ToString01">
            <summary>设置 JSVariableField.ToString() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubJSVariableField.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubJSVariableField.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubJSVariableField.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubJScriptExceptionEventArgs">
            <summary>Microsoft.Ajax.Utilities.JScriptExceptionEventArgs 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubJScriptExceptionEventArgs.#ctor(Microsoft.Ajax.Utilities.JScriptException,Microsoft.Ajax.Utilities.ContextError)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubJScriptExceptionEventArgs.InitializeStub">
            <summary>初始化 type StubJScriptExceptionEventArgs 的新实例</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubJScriptExceptionEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubJScriptExceptionEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubJScriptExceptionEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubLexicalDeclaration">
            <summary>Microsoft.Ajax.Utilities.LexicalDeclaration 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLexicalDeclaration.#ctor(Microsoft.Ajax.Utilities.Context,Microsoft.Ajax.Utilities.JSParser)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLexicalDeclaration.Accept(Microsoft.Ajax.Utilities.IVisitor)">
            <summary>设置 LexicalDeclaration.Accept(IVisitor visitor) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLexicalDeclaration.AcceptIVisitor">
            <summary>设置 LexicalDeclaration.Accept(IVisitor visitor) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLexicalDeclaration.AttachBackingFieldToTerminatingContext">
            <summary>附加委托以将 StubLexicalDeclaration.TerminatingContext 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLexicalDeclaration.ChildrenGet">
            <summary>设置 Declaration.get_Children() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLexicalDeclaration.ContainsInOperatorGet">
            <summary>设置 Declaration.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLexicalDeclaration.EnclosingScopeGet">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLexicalDeclaration.FindPrimitiveType">
            <summary>设置 AstNode.FindPrimitiveType() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLexicalDeclaration.FindPrimitiveType01">
            <summary>设置 AstNode.FindPrimitiveType() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLexicalDeclaration.InitializeStub">
            <summary>初始化 type StubLexicalDeclaration 的新实例</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLexicalDeclaration.IsConstantGet">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLexicalDeclaration.IsEquivalentTo(Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLexicalDeclaration.IsEquivalentToAstNode">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLexicalDeclaration.IsExpressionGet">
            <summary>设置 AstNode.get_IsExpression() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLexicalDeclaration.LeftHandSideGet">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLexicalDeclaration.PrecedenceGet">
            <summary>设置 AstNode.get_Precedence() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLexicalDeclaration.ReplaceChild(Microsoft.Ajax.Utilities.AstNode,Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 Declaration.ReplaceChild(AstNode oldNode, AstNode newNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLexicalDeclaration.ReplaceChildAstNodeAstNode">
            <summary>设置 Declaration.ReplaceChild(AstNode oldNode, AstNode newNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLexicalDeclaration.TerminatingContextGet">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLexicalDeclaration.TerminatingContextSetContext">
            <summary>设置 AstNode.set_TerminatingContext(Context value) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLexicalDeclaration.ToCode">
            <summary>设置 AstNode.ToCode() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLexicalDeclaration.ToCode01">
            <summary>设置 AstNode.ToCode() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubLexicalDeclaration.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubLexicalDeclaration.Children">
            <summary>设置 Declaration.get_Children() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubLexicalDeclaration.ContainsInOperator">
            <summary>设置 Declaration.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubLexicalDeclaration.EnclosingScope">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubLexicalDeclaration.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubLexicalDeclaration.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubLexicalDeclaration.IsConstant">
            <summary>设置 AstNode.get_IsConstant() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubLexicalDeclaration.IsExpression">
            <summary>设置 AstNode.get_IsExpression() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubLexicalDeclaration.LeftHandSide">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubLexicalDeclaration.Precedence">
            <summary>设置 AstNode.get_Precedence() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubLexicalDeclaration.TerminatingContext">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot">
            <summary>Microsoft.Ajax.Utilities.LogicalNot 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.#ctor(Microsoft.Ajax.Utilities.AstNode,Microsoft.Ajax.Utilities.JSParser)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.InitializeStub">
            <summary>初始化 type StubLogicalNot 的新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.ArrayLiteral)">
            <summary>设置 LogicalNot.Visit(ArrayLiteral node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.AspNetBlockNode)">
            <summary>设置 TreeVisitor.Visit(AspNetBlockNode node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.AstNodeList)">
            <summary>设置 LogicalNot.Visit(AstNodeList node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.BinaryOperator)">
            <summary>设置 LogicalNot.Visit(BinaryOperator node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.Block)">
            <summary>设置 TreeVisitor.Visit(Block node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.Break)">
            <summary>设置 TreeVisitor.Visit(Break node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.CallNode)">
            <summary>设置 LogicalNot.Visit(CallNode node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.Conditional)">
            <summary>设置 LogicalNot.Visit(Conditional node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.ConditionalCompilationComment)">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationComment node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.ConditionalCompilationElse)">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationElse node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.ConditionalCompilationElseIf)">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationElseIf node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.ConditionalCompilationEnd)">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationEnd node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.ConditionalCompilationIf)">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationIf node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.ConditionalCompilationOn)">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationOn node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.ConditionalCompilationSet)">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationSet node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.ConstStatement)">
            <summary>设置 TreeVisitor.Visit(ConstStatement node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.ConstantWrapper)">
            <summary>设置 LogicalNot.Visit(ConstantWrapper node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.ConstantWrapperPP)">
            <summary>设置 TreeVisitor.Visit(ConstantWrapperPP node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.ContinueNode)">
            <summary>设置 TreeVisitor.Visit(ContinueNode node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.CustomNode)">
            <summary>设置 TreeVisitor.Visit(CustomNode node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.DebuggerNode)">
            <summary>设置 TreeVisitor.Visit(DebuggerNode node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.DirectivePrologue)">
            <summary>设置 TreeVisitor.Visit(DirectivePrologue node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.DoWhile)">
            <summary>设置 TreeVisitor.Visit(DoWhile node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.EmptyStatement)">
            <summary>设置 TreeVisitor.Visit(EmptyStatement node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.ForIn)">
            <summary>设置 TreeVisitor.Visit(ForIn node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.ForNode)">
            <summary>设置 TreeVisitor.Visit(ForNode node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.FunctionObject)">
            <summary>设置 TreeVisitor.Visit(FunctionObject node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.GetterSetter)">
            <summary>设置 TreeVisitor.Visit(GetterSetter node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.GroupingOperator)">
            <summary>设置 LogicalNot.Visit(GroupingOperator node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.IfNode)">
            <summary>设置 TreeVisitor.Visit(IfNode node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.ImportantComment)">
            <summary>设置 TreeVisitor.Visit(ImportantComment node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.LabeledStatement)">
            <summary>设置 TreeVisitor.Visit(LabeledStatement node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.LexicalDeclaration)">
            <summary>设置 TreeVisitor.Visit(LexicalDeclaration node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.Lookup)">
            <summary>设置 LogicalNot.Visit(Lookup node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.Member)">
            <summary>设置 LogicalNot.Visit(Member node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.ObjectLiteral)">
            <summary>设置 LogicalNot.Visit(ObjectLiteral node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.ObjectLiteralField)">
            <summary>设置 TreeVisitor.Visit(ObjectLiteralField node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.ObjectLiteralProperty)">
            <summary>设置 TreeVisitor.Visit(ObjectLiteralProperty node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.ParameterDeclaration)">
            <summary>设置 TreeVisitor.Visit(ParameterDeclaration node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.RegExpLiteral)">
            <summary>设置 LogicalNot.Visit(RegExpLiteral node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.ReturnNode)">
            <summary>设置 TreeVisitor.Visit(ReturnNode node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.Switch)">
            <summary>设置 TreeVisitor.Visit(Switch node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.SwitchCase)">
            <summary>设置 TreeVisitor.Visit(SwitchCase node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.ThisLiteral)">
            <summary>设置 LogicalNot.Visit(ThisLiteral node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.ThrowNode)">
            <summary>设置 TreeVisitor.Visit(ThrowNode node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.TryNode)">
            <summary>设置 TreeVisitor.Visit(TryNode node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.UnaryOperator)">
            <summary>设置 LogicalNot.Visit(UnaryOperator node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.Var)">
            <summary>设置 TreeVisitor.Visit(Var node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.VariableDeclaration)">
            <summary>设置 TreeVisitor.Visit(VariableDeclaration node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.WhileNode)">
            <summary>设置 TreeVisitor.Visit(WhileNode node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.Visit(Microsoft.Ajax.Utilities.WithNode)">
            <summary>设置 TreeVisitor.Visit(WithNode node) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitArrayLiteral">
            <summary>设置 LogicalNot.Visit(ArrayLiteral node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitAspNetBlockNode">
            <summary>设置 TreeVisitor.Visit(AspNetBlockNode node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitAstNodeList">
            <summary>设置 LogicalNot.Visit(AstNodeList node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitBinaryOperator">
            <summary>设置 LogicalNot.Visit(BinaryOperator node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitBlock">
            <summary>设置 TreeVisitor.Visit(Block node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitBreak">
            <summary>设置 TreeVisitor.Visit(Break node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitCallNode">
            <summary>设置 LogicalNot.Visit(CallNode node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitConditional">
            <summary>设置 LogicalNot.Visit(Conditional node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitConditionalCompilationComment">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationComment node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitConditionalCompilationElse">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationElse node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitConditionalCompilationElseIf">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationElseIf node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitConditionalCompilationEnd">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationEnd node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitConditionalCompilationIf">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationIf node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitConditionalCompilationOn">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationOn node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitConditionalCompilationSet">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationSet node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitConstStatement">
            <summary>设置 TreeVisitor.Visit(ConstStatement node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitConstantWrapper">
            <summary>设置 LogicalNot.Visit(ConstantWrapper node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitConstantWrapperPP">
            <summary>设置 TreeVisitor.Visit(ConstantWrapperPP node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitContinueNode">
            <summary>设置 TreeVisitor.Visit(ContinueNode node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitCustomNode">
            <summary>设置 TreeVisitor.Visit(CustomNode node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitDebuggerNode">
            <summary>设置 TreeVisitor.Visit(DebuggerNode node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitDirectivePrologue">
            <summary>设置 TreeVisitor.Visit(DirectivePrologue node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitDoWhile">
            <summary>设置 TreeVisitor.Visit(DoWhile node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitEmptyStatement">
            <summary>设置 TreeVisitor.Visit(EmptyStatement node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitForIn">
            <summary>设置 TreeVisitor.Visit(ForIn node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitForNode">
            <summary>设置 TreeVisitor.Visit(ForNode node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitFunctionObject">
            <summary>设置 TreeVisitor.Visit(FunctionObject node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitGetterSetter">
            <summary>设置 TreeVisitor.Visit(GetterSetter node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitGroupingOperator">
            <summary>设置 LogicalNot.Visit(GroupingOperator node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitIfNode">
            <summary>设置 TreeVisitor.Visit(IfNode node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitImportantComment">
            <summary>设置 TreeVisitor.Visit(ImportantComment node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitLabeledStatement">
            <summary>设置 TreeVisitor.Visit(LabeledStatement node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitLexicalDeclaration">
            <summary>设置 TreeVisitor.Visit(LexicalDeclaration node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitLookup">
            <summary>设置 LogicalNot.Visit(Lookup node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitMember">
            <summary>设置 LogicalNot.Visit(Member node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitObjectLiteral">
            <summary>设置 LogicalNot.Visit(ObjectLiteral node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitObjectLiteralField">
            <summary>设置 TreeVisitor.Visit(ObjectLiteralField node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitObjectLiteralProperty">
            <summary>设置 TreeVisitor.Visit(ObjectLiteralProperty node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitParameterDeclaration">
            <summary>设置 TreeVisitor.Visit(ParameterDeclaration node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitRegExpLiteral">
            <summary>设置 LogicalNot.Visit(RegExpLiteral node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitReturnNode">
            <summary>设置 TreeVisitor.Visit(ReturnNode node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitSwitch">
            <summary>设置 TreeVisitor.Visit(Switch node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitSwitchCase">
            <summary>设置 TreeVisitor.Visit(SwitchCase node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitThisLiteral">
            <summary>设置 LogicalNot.Visit(ThisLiteral node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitThrowNode">
            <summary>设置 TreeVisitor.Visit(ThrowNode node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitTryNode">
            <summary>设置 TreeVisitor.Visit(TryNode node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitUnaryOperator">
            <summary>设置 LogicalNot.Visit(UnaryOperator node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitVar">
            <summary>设置 TreeVisitor.Visit(Var node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitVariableDeclaration">
            <summary>设置 TreeVisitor.Visit(VariableDeclaration node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitWhileNode">
            <summary>设置 TreeVisitor.Visit(WhileNode node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.VisitWithNode">
            <summary>设置 TreeVisitor.Visit(WithNode node) 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubLogicalNot.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubMatchPropertiesVisitor">
            <summary>Microsoft.Ajax.Utilities.MatchPropertiesVisitor 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubMatchPropertiesVisitor.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubMatchPropertiesVisitor.InitializeStub">
            <summary>初始化 type StubMatchPropertiesVisitor 的新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubMatchPropertiesVisitor.Visit(Microsoft.Ajax.Utilities.GroupingOperator)">
            <summary>设置 MatchPropertiesVisitor.Visit(GroupingOperator node) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubMatchPropertiesVisitor.VisitGroupingOperator">
            <summary>设置 MatchPropertiesVisitor.Visit(GroupingOperator node) 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubMatchPropertiesVisitor.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubMatchPropertiesVisitor.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubMatchPropertiesVisitor.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubMinifier">
            <summary>Microsoft.Ajax.Utilities.Minifier 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubMinifier.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubMinifier.InitializeStub">
            <summary>初始化 type StubMinifier 的新实例</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubMinifier.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubMinifier.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubMinifier.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubNewModuleEventArgs">
            <summary>Microsoft.Ajax.Utilities.NewModuleEventArgs 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubNewModuleEventArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubNewModuleEventArgs.InitializeStub">
            <summary>初始化 type StubNewModuleEventArgs 的新实例</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubNewModuleEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubNewModuleEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubNewModuleEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField">
            <summary>Microsoft.Ajax.Utilities.ObjectLiteralField 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField.#ctor(System.Object,Microsoft.Ajax.Utilities.PrimitiveType,Microsoft.Ajax.Utilities.Context,Microsoft.Ajax.Utilities.JSParser)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField.Accept(Microsoft.Ajax.Utilities.IVisitor)">
            <summary>设置 ObjectLiteralField.Accept(IVisitor visitor) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField.AcceptIVisitor">
            <summary>设置 ObjectLiteralField.Accept(IVisitor visitor) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField.AttachBackingFieldToTerminatingContext">
            <summary>附加委托以将 StubObjectLiteralField.TerminatingContext 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField.ChildrenGet">
            <summary>设置 AstNode.get_Children() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField.ContainsInOperatorGet">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField.EnclosingScopeGet">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField.FindPrimitiveType">
            <summary>设置 ConstantWrapper.FindPrimitiveType() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField.FindPrimitiveType01">
            <summary>设置 ConstantWrapper.FindPrimitiveType() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField.InitializeStub">
            <summary>初始化 type StubObjectLiteralField 的新实例</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField.IsConstantGet">
            <summary>设置 ConstantWrapper.get_IsConstant() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField.IsEquivalentTo(Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 ConstantWrapper.IsEquivalentTo(AstNode otherNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField.IsEquivalentToAstNode">
            <summary>设置 ConstantWrapper.IsEquivalentTo(AstNode otherNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField.IsExpressionGet">
            <summary>设置 Expression.get_IsExpression() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField.LeftHandSideGet">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField.PrecedenceGet">
            <summary>设置 Expression.get_Precedence() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField.ReplaceChild(Microsoft.Ajax.Utilities.AstNode,Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 AstNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField.ReplaceChildAstNodeAstNode">
            <summary>设置 AstNode.ReplaceChild(AstNode oldNode, AstNode newNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField.TerminatingContextGet">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField.TerminatingContextSetContext">
            <summary>设置 AstNode.set_TerminatingContext(Context value) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField.ToCode">
            <summary>设置 AstNode.ToCode() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField.ToCode01">
            <summary>设置 AstNode.ToCode() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField.ToString">
            <summary>设置 ConstantWrapper.ToString() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField.ToString01">
            <summary>设置 ConstantWrapper.ToString() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField.Children">
            <summary>设置 AstNode.get_Children() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField.ContainsInOperator">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField.EnclosingScope">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField.IsConstant">
            <summary>设置 ConstantWrapper.get_IsConstant() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField.IsExpression">
            <summary>设置 Expression.get_IsExpression() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField.LeftHandSide">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField.Precedence">
            <summary>设置 Expression.get_Precedence() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralField.TerminatingContext">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralProperty">
            <summary>Microsoft.Ajax.Utilities.ObjectLiteralProperty 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralProperty.#ctor(Microsoft.Ajax.Utilities.Context,Microsoft.Ajax.Utilities.JSParser)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralProperty.Accept(Microsoft.Ajax.Utilities.IVisitor)">
            <summary>设置 ObjectLiteralProperty.Accept(IVisitor visitor) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralProperty.AcceptIVisitor">
            <summary>设置 ObjectLiteralProperty.Accept(IVisitor visitor) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralProperty.AttachBackingFieldToTerminatingContext">
            <summary>附加委托以将 StubObjectLiteralProperty.TerminatingContext 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralProperty.ChildrenGet">
            <summary>设置 ObjectLiteralProperty.get_Children() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralProperty.ContainsInOperatorGet">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralProperty.EnclosingScopeGet">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralProperty.FindPrimitiveType">
            <summary>设置 AstNode.FindPrimitiveType() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralProperty.FindPrimitiveType01">
            <summary>设置 AstNode.FindPrimitiveType() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralProperty.InitializeStub">
            <summary>初始化 type StubObjectLiteralProperty 的新实例</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralProperty.IsConstantGet">
            <summary>设置 ObjectLiteralProperty.get_IsConstant() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralProperty.IsEquivalentTo(Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralProperty.IsEquivalentToAstNode">
            <summary>设置 AstNode.IsEquivalentTo(AstNode otherNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralProperty.IsExpressionGet">
            <summary>设置 AstNode.get_IsExpression() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralProperty.LeftHandSideGet">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralProperty.PrecedenceGet">
            <summary>设置 AstNode.get_Precedence() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralProperty.ReplaceChild(Microsoft.Ajax.Utilities.AstNode,Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 ObjectLiteralProperty.ReplaceChild(AstNode oldNode, AstNode newNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralProperty.ReplaceChildAstNodeAstNode">
            <summary>设置 ObjectLiteralProperty.ReplaceChild(AstNode oldNode, AstNode newNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralProperty.TerminatingContextGet">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralProperty.TerminatingContextSetContext">
            <summary>设置 AstNode.set_TerminatingContext(Context value) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralProperty.ToCode">
            <summary>设置 AstNode.ToCode() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralProperty.ToCode01">
            <summary>设置 AstNode.ToCode() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralProperty.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralProperty.Children">
            <summary>设置 ObjectLiteralProperty.get_Children() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralProperty.ContainsInOperator">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralProperty.EnclosingScope">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralProperty.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralProperty.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralProperty.IsConstant">
            <summary>设置 ObjectLiteralProperty.get_IsConstant() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralProperty.IsExpression">
            <summary>设置 AstNode.get_IsExpression() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralProperty.LeftHandSide">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralProperty.Precedence">
            <summary>设置 AstNode.get_Precedence() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubObjectLiteralProperty.TerminatingContext">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubResourceStrings">
            <summary>Microsoft.Ajax.Utilities.ResourceStrings 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubResourceStrings.#ctor(System.Collections.IDictionaryEnumerator)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubResourceStrings.InitializeStub">
            <summary>初始化 type StubResourceStrings 的新实例</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubResourceStrings.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubResourceStrings.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubResourceStrings.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubStatementStartVisitor">
            <summary>Microsoft.Ajax.Utilities.StatementStartVisitor 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubStatementStartVisitor.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubStatementStartVisitor.InitializeStub">
            <summary>初始化 type StubStatementStartVisitor 的新实例</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubStatementStartVisitor.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubStatementStartVisitor.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubStatementStartVisitor.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubSwitchParser">
            <summary>Microsoft.Ajax.Utilities.SwitchParser 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubSwitchParser.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubSwitchParser.#ctor(Microsoft.Ajax.Utilities.CodeSettings,Microsoft.Ajax.Utilities.CssSettings)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubSwitchParser.InitializeStub">
            <summary>初始化 type StubSwitchParser 的新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubSwitchParser.OnCssOnlyParameter">
            <summary>设置 SwitchParser.OnCssOnlyParameter() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubSwitchParser.OnCssOnlyParameter01">
            <summary>设置 SwitchParser.OnCssOnlyParameter() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubSwitchParser.OnInvalidSwitch(System.String,System.String)">
            <summary>设置 SwitchParser.OnInvalidSwitch(String switchPart, String parameterPart) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubSwitchParser.OnInvalidSwitchStringString">
            <summary>设置 SwitchParser.OnInvalidSwitch(String switchPart, String parameterPart) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubSwitchParser.OnJSOnlyParameter">
            <summary>设置 SwitchParser.OnJSOnlyParameter() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubSwitchParser.OnJSOnlyParameter01">
            <summary>设置 SwitchParser.OnJSOnlyParameter() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubSwitchParser.OnUnknownParameter(System.Collections.Generic.IList{System.String},System.Int32,System.String,System.String)">
            <summary>设置 SwitchParser.OnUnknownParameter(IList`1&lt;String&gt; arguments, Int32 index, String switchPart, String parameterPart) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubSwitchParser.OnUnknownParameterIListOfStringInt32StringString">
            <summary>设置 SwitchParser.OnUnknownParameter(IList`1&lt;String&gt; arguments, Int32 index, String switchPart, String parameterPart) 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubSwitchParser.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubSwitchParser.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubSwitchParser.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor">
            <summary>Microsoft.Ajax.Utilities.TreeVisitor 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.InitializeStub">
            <summary>初始化 type StubTreeVisitor 的新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.ArrayLiteral)">
            <summary>设置 TreeVisitor.Visit(ArrayLiteral node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.AspNetBlockNode)">
            <summary>设置 TreeVisitor.Visit(AspNetBlockNode node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.AstNodeList)">
            <summary>设置 TreeVisitor.Visit(AstNodeList node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.BinaryOperator)">
            <summary>设置 TreeVisitor.Visit(BinaryOperator node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.Block)">
            <summary>设置 TreeVisitor.Visit(Block node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.Break)">
            <summary>设置 TreeVisitor.Visit(Break node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.CallNode)">
            <summary>设置 TreeVisitor.Visit(CallNode node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.Conditional)">
            <summary>设置 TreeVisitor.Visit(Conditional node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.ConditionalCompilationComment)">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationComment node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.ConditionalCompilationElse)">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationElse node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.ConditionalCompilationElseIf)">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationElseIf node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.ConditionalCompilationEnd)">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationEnd node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.ConditionalCompilationIf)">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationIf node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.ConditionalCompilationOn)">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationOn node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.ConditionalCompilationSet)">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationSet node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.ConstStatement)">
            <summary>设置 TreeVisitor.Visit(ConstStatement node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.ConstantWrapper)">
            <summary>设置 TreeVisitor.Visit(ConstantWrapper node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.ConstantWrapperPP)">
            <summary>设置 TreeVisitor.Visit(ConstantWrapperPP node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.ContinueNode)">
            <summary>设置 TreeVisitor.Visit(ContinueNode node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.CustomNode)">
            <summary>设置 TreeVisitor.Visit(CustomNode node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.DebuggerNode)">
            <summary>设置 TreeVisitor.Visit(DebuggerNode node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.DirectivePrologue)">
            <summary>设置 TreeVisitor.Visit(DirectivePrologue node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.DoWhile)">
            <summary>设置 TreeVisitor.Visit(DoWhile node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.EmptyStatement)">
            <summary>设置 TreeVisitor.Visit(EmptyStatement node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.ForIn)">
            <summary>设置 TreeVisitor.Visit(ForIn node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.ForNode)">
            <summary>设置 TreeVisitor.Visit(ForNode node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.FunctionObject)">
            <summary>设置 TreeVisitor.Visit(FunctionObject node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.GetterSetter)">
            <summary>设置 TreeVisitor.Visit(GetterSetter node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.GroupingOperator)">
            <summary>设置 TreeVisitor.Visit(GroupingOperator node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.IfNode)">
            <summary>设置 TreeVisitor.Visit(IfNode node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.ImportantComment)">
            <summary>设置 TreeVisitor.Visit(ImportantComment node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.LabeledStatement)">
            <summary>设置 TreeVisitor.Visit(LabeledStatement node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.LexicalDeclaration)">
            <summary>设置 TreeVisitor.Visit(LexicalDeclaration node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.Lookup)">
            <summary>设置 TreeVisitor.Visit(Lookup node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.Member)">
            <summary>设置 TreeVisitor.Visit(Member node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.ObjectLiteral)">
            <summary>设置 TreeVisitor.Visit(ObjectLiteral node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.ObjectLiteralField)">
            <summary>设置 TreeVisitor.Visit(ObjectLiteralField node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.ObjectLiteralProperty)">
            <summary>设置 TreeVisitor.Visit(ObjectLiteralProperty node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.ParameterDeclaration)">
            <summary>设置 TreeVisitor.Visit(ParameterDeclaration node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.RegExpLiteral)">
            <summary>设置 TreeVisitor.Visit(RegExpLiteral node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.ReturnNode)">
            <summary>设置 TreeVisitor.Visit(ReturnNode node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.Switch)">
            <summary>设置 TreeVisitor.Visit(Switch node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.SwitchCase)">
            <summary>设置 TreeVisitor.Visit(SwitchCase node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.ThisLiteral)">
            <summary>设置 TreeVisitor.Visit(ThisLiteral node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.ThrowNode)">
            <summary>设置 TreeVisitor.Visit(ThrowNode node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.TryNode)">
            <summary>设置 TreeVisitor.Visit(TryNode node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.UnaryOperator)">
            <summary>设置 TreeVisitor.Visit(UnaryOperator node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.Var)">
            <summary>设置 TreeVisitor.Visit(Var node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.VariableDeclaration)">
            <summary>设置 TreeVisitor.Visit(VariableDeclaration node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.WhileNode)">
            <summary>设置 TreeVisitor.Visit(WhileNode node) 的 存根</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.Visit(Microsoft.Ajax.Utilities.WithNode)">
            <summary>设置 TreeVisitor.Visit(WithNode node) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitArrayLiteral">
            <summary>设置 TreeVisitor.Visit(ArrayLiteral node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitAspNetBlockNode">
            <summary>设置 TreeVisitor.Visit(AspNetBlockNode node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitAstNodeList">
            <summary>设置 TreeVisitor.Visit(AstNodeList node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitBinaryOperator">
            <summary>设置 TreeVisitor.Visit(BinaryOperator node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitBlock">
            <summary>设置 TreeVisitor.Visit(Block node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitBreak">
            <summary>设置 TreeVisitor.Visit(Break node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitCallNode">
            <summary>设置 TreeVisitor.Visit(CallNode node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitConditional">
            <summary>设置 TreeVisitor.Visit(Conditional node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitConditionalCompilationComment">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationComment node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitConditionalCompilationElse">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationElse node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitConditionalCompilationElseIf">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationElseIf node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitConditionalCompilationEnd">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationEnd node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitConditionalCompilationIf">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationIf node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitConditionalCompilationOn">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationOn node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitConditionalCompilationSet">
            <summary>设置 TreeVisitor.Visit(ConditionalCompilationSet node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitConstStatement">
            <summary>设置 TreeVisitor.Visit(ConstStatement node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitConstantWrapper">
            <summary>设置 TreeVisitor.Visit(ConstantWrapper node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitConstantWrapperPP">
            <summary>设置 TreeVisitor.Visit(ConstantWrapperPP node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitContinueNode">
            <summary>设置 TreeVisitor.Visit(ContinueNode node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitCustomNode">
            <summary>设置 TreeVisitor.Visit(CustomNode node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitDebuggerNode">
            <summary>设置 TreeVisitor.Visit(DebuggerNode node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitDirectivePrologue">
            <summary>设置 TreeVisitor.Visit(DirectivePrologue node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitDoWhile">
            <summary>设置 TreeVisitor.Visit(DoWhile node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitEmptyStatement">
            <summary>设置 TreeVisitor.Visit(EmptyStatement node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitForIn">
            <summary>设置 TreeVisitor.Visit(ForIn node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitForNode">
            <summary>设置 TreeVisitor.Visit(ForNode node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitFunctionObject">
            <summary>设置 TreeVisitor.Visit(FunctionObject node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitGetterSetter">
            <summary>设置 TreeVisitor.Visit(GetterSetter node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitGroupingOperator">
            <summary>设置 TreeVisitor.Visit(GroupingOperator node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitIfNode">
            <summary>设置 TreeVisitor.Visit(IfNode node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitImportantComment">
            <summary>设置 TreeVisitor.Visit(ImportantComment node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitLabeledStatement">
            <summary>设置 TreeVisitor.Visit(LabeledStatement node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitLexicalDeclaration">
            <summary>设置 TreeVisitor.Visit(LexicalDeclaration node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitLookup">
            <summary>设置 TreeVisitor.Visit(Lookup node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitMember">
            <summary>设置 TreeVisitor.Visit(Member node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitObjectLiteral">
            <summary>设置 TreeVisitor.Visit(ObjectLiteral node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitObjectLiteralField">
            <summary>设置 TreeVisitor.Visit(ObjectLiteralField node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitObjectLiteralProperty">
            <summary>设置 TreeVisitor.Visit(ObjectLiteralProperty node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitParameterDeclaration">
            <summary>设置 TreeVisitor.Visit(ParameterDeclaration node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitRegExpLiteral">
            <summary>设置 TreeVisitor.Visit(RegExpLiteral node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitReturnNode">
            <summary>设置 TreeVisitor.Visit(ReturnNode node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitSwitch">
            <summary>设置 TreeVisitor.Visit(Switch node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitSwitchCase">
            <summary>设置 TreeVisitor.Visit(SwitchCase node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitThisLiteral">
            <summary>设置 TreeVisitor.Visit(ThisLiteral node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitThrowNode">
            <summary>设置 TreeVisitor.Visit(ThrowNode node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitTryNode">
            <summary>设置 TreeVisitor.Visit(TryNode node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitUnaryOperator">
            <summary>设置 TreeVisitor.Visit(UnaryOperator node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitVar">
            <summary>设置 TreeVisitor.Visit(Var node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitVariableDeclaration">
            <summary>设置 TreeVisitor.Visit(VariableDeclaration node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitWhileNode">
            <summary>设置 TreeVisitor.Visit(WhileNode node) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.VisitWithNode">
            <summary>设置 TreeVisitor.Visit(WithNode node) 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubTreeVisitor.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator">
            <summary>Microsoft.Ajax.Utilities.UnaryOperator 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator.#ctor(Microsoft.Ajax.Utilities.Context,Microsoft.Ajax.Utilities.JSParser)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator.Accept(Microsoft.Ajax.Utilities.IVisitor)">
            <summary>设置 UnaryOperator.Accept(IVisitor visitor) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator.AcceptIVisitor">
            <summary>设置 UnaryOperator.Accept(IVisitor visitor) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator.AttachBackingFieldToTerminatingContext">
            <summary>附加委托以将 StubUnaryOperator.TerminatingContext 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator.ChildrenGet">
            <summary>设置 UnaryOperator.get_Children() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator.ContainsInOperatorGet">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator.EnclosingScopeGet">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator.FindPrimitiveType">
            <summary>设置 UnaryOperator.FindPrimitiveType() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator.FindPrimitiveType01">
            <summary>设置 UnaryOperator.FindPrimitiveType() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator.InitializeStub">
            <summary>初始化 type StubUnaryOperator 的新实例</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator.IsConstantGet">
            <summary>设置 UnaryOperator.get_IsConstant() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator.IsEquivalentTo(Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 UnaryOperator.IsEquivalentTo(AstNode otherNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator.IsEquivalentToAstNode">
            <summary>设置 UnaryOperator.IsEquivalentTo(AstNode otherNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator.IsExpressionGet">
            <summary>设置 Expression.get_IsExpression() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator.LeftHandSideGet">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator.PrecedenceGet">
            <summary>设置 UnaryOperator.get_Precedence() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator.ReplaceChild(Microsoft.Ajax.Utilities.AstNode,Microsoft.Ajax.Utilities.AstNode)">
            <summary>设置 UnaryOperator.ReplaceChild(AstNode oldNode, AstNode newNode) 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator.ReplaceChildAstNodeAstNode">
            <summary>设置 UnaryOperator.ReplaceChild(AstNode oldNode, AstNode newNode) 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator.TerminatingContextGet">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator.TerminatingContextSetContext">
            <summary>设置 AstNode.set_TerminatingContext(Context value) 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator.ToCode">
            <summary>设置 AstNode.ToCode() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator.ToCode01">
            <summary>设置 AstNode.ToCode() 的 stub</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator.ToString">
            <summary>设置 UnaryOperator.ToString() 的 存根</summary>
        </member>
        <member name="F:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator.ToString01">
            <summary>设置 UnaryOperator.ToString() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator.Children">
            <summary>设置 UnaryOperator.get_Children() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator.ContainsInOperator">
            <summary>设置 AstNode.get_ContainsInOperator() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator.EnclosingScope">
            <summary>设置 AstNode.get_EnclosingScope() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator.IsConstant">
            <summary>设置 UnaryOperator.get_IsConstant() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator.IsExpression">
            <summary>设置 Expression.get_IsExpression() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator.LeftHandSide">
            <summary>设置 AstNode.get_LeftHandSide() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator.Precedence">
            <summary>设置 UnaryOperator.get_Precedence() 的 stub</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubUnaryOperator.TerminatingContext">
            <summary>设置 AstNode.get_TerminatingContext() 的 stub</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubUndefinedReferenceEventArgs">
            <summary>Microsoft.Ajax.Utilities.UndefinedReferenceEventArgs 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubUndefinedReferenceEventArgs.#ctor(Microsoft.Ajax.Utilities.UndefinedReferenceException)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubUndefinedReferenceEventArgs.InitializeStub">
            <summary>初始化 type StubUndefinedReferenceEventArgs 的新实例</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubUndefinedReferenceEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubUndefinedReferenceEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubUndefinedReferenceEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Microsoft.Ajax.Utilities.Fakes.StubUnknownParameterEventArgs">
            <summary>Microsoft.Ajax.Utilities.UnknownParameterEventArgs 的存根类型</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubUnknownParameterEventArgs.#ctor(System.Collections.Generic.IList{System.String})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Microsoft.Ajax.Utilities.Fakes.StubUnknownParameterEventArgs.InitializeStub">
            <summary>初始化 type StubUnknownParameterEventArgs 的新实例</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubUnknownParameterEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubUnknownParameterEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Microsoft.Ajax.Utilities.Fakes.StubUnknownParameterEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.WebGreaseDelegates">
            <summary>包含用于 WebGrease 的存根和填充码的自定义委托</summary>
        </member>
        <member name="T:WebGrease.Activities.Fakes.ShimResourceOverrideException">
            <summary>WebGrease.Activities.ResourceOverrideException 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Activities.Fakes.ShimResourceOverrideException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Activities.Fakes.ShimResourceOverrideException.#ctor(WebGrease.Activities.ResourceOverrideException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Activities.Fakes.ShimResourceOverrideException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Activities.Fakes.ShimResourceOverrideException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:WebGrease.Activities.Fakes.ShimResourceOverrideException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WebGrease.Activities.Fakes.ShimResourceOverrideException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Activities.Fakes.ShimResourceOverrideException.Constructor">
            <summary>设置 ResourceOverrideException.ResourceOverrideException() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Activities.Fakes.ShimResourceOverrideException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 ResourceOverrideException.ResourceOverrideException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Activities.Fakes.ShimResourceOverrideException.ConstructorString">
            <summary>设置 ResourceOverrideException.ResourceOverrideException(String message) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Activities.Fakes.ShimResourceOverrideException.ConstructorStringException">
            <summary>设置 ResourceOverrideException.ResourceOverrideException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Activities.Fakes.ShimResourceOverrideException.ConstructorStringString">
            <summary>设置 ResourceOverrideException.ResourceOverrideException(String fileName, String tokenKey) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Activities.Fakes.ShimResourceOverrideException.FileNameGet">
            <summary>设置 ResourceOverrideException.get_FileName() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Activities.Fakes.ShimResourceOverrideException.FileNameSetString">
            <summary>设置 ResourceOverrideException.set_FileName(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Activities.Fakes.ShimResourceOverrideException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 ResourceOverrideException.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Activities.Fakes.ShimResourceOverrideException.TokenKeyGet">
            <summary>设置 ResourceOverrideException.get_TokenKey() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Activities.Fakes.ShimResourceOverrideException.TokenKeySetString">
            <summary>设置 ResourceOverrideException.set_TokenKey(String value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Activities.Fakes.ShimResourceOverrideException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Activities.Fakes.ShimResourceOverrideException.AllInstances.FileNameGet">
            <summary>设置 ResourceOverrideException.get_FileName() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Activities.Fakes.ShimResourceOverrideException.AllInstances.FileNameSetString">
            <summary>设置 ResourceOverrideException.set_FileName(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Activities.Fakes.ShimResourceOverrideException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 ResourceOverrideException.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Activities.Fakes.ShimResourceOverrideException.AllInstances.TokenKeyGet">
            <summary>设置 ResourceOverrideException.get_TokenKey() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Activities.Fakes.ShimResourceOverrideException.AllInstances.TokenKeySetString">
            <summary>设置 ResourceOverrideException.set_TokenKey(String value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Activities.Fakes.StubResourceOverrideException">
            <summary>WebGrease.Activities.ResourceOverrideException 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Activities.Fakes.StubResourceOverrideException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Activities.Fakes.StubResourceOverrideException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Activities.Fakes.StubResourceOverrideException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Activities.Fakes.StubResourceOverrideException.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Activities.Fakes.StubResourceOverrideException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Activities.Fakes.StubResourceOverrideException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubResourceOverrideException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WebGrease.Activities.Fakes.StubResourceOverrideException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubResourceOverrideException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:WebGrease.Activities.Fakes.StubResourceOverrideException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Activities.Fakes.StubResourceOverrideException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:WebGrease.Activities.Fakes.StubResourceOverrideException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Activities.Fakes.StubResourceOverrideException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 ResourceOverrideException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Activities.Fakes.StubResourceOverrideException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 ResourceOverrideException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Activities.Fakes.StubResourceOverrideException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Activities.Fakes.StubResourceOverrideException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Activities.Fakes.StubResourceOverrideException.InitializeStub">
            <summary>初始化 type StubResourceOverrideException 的新实例</summary>
        </member>
        <member name="F:WebGrease.Activities.Fakes.StubResourceOverrideException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Activities.Fakes.StubResourceOverrideException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Activities.Fakes.StubResourceOverrideException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Activities.Fakes.StubResourceOverrideException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Activities.Fakes.StubResourceOverrideException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:WebGrease.Activities.Fakes.StubResourceOverrideException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Activities.Fakes.StubResourceOverrideException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:WebGrease.Activities.Fakes.StubResourceOverrideException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Activities.Fakes.StubResourceOverrideException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Activities.Fakes.StubResourceOverrideException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WebGrease.Activities.Fakes.StubResourceOverrideException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:WebGrease.Activities.Fakes.StubResourceOverrideException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Activities.Fakes.StubResourceOverrideException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Activities.Fakes.StubResourceOverrideException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:WebGrease.Configuration.Fakes.ShimAutoNameConfig">
            <summary>WebGrease.Configuration.AutoNameConfig 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimAutoNameConfig.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimAutoNameConfig.#ctor(WebGrease.Configuration.AutoNameConfig)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimAutoNameConfig.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimAutoNameConfig.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimAutoNameConfig.Bind(WebGrease.Configuration.INamedConfig)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimAutoNameConfig.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimAutoNameConfig.Constructor">
            <summary>设置 AutoNameConfig.AutoNameConfig() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimAutoNameConfig.ConstructorXElement">
            <summary>设置 AutoNameConfig.AutoNameConfig(XElement element) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimAutoNameConfig.NameGet">
            <summary>设置 AutoNameConfig.get_Name() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimAutoNameConfig.NameSetString">
            <summary>设置 AutoNameConfig.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimAutoNameConfig.ShouldAutoNameGet">
            <summary>设置 AutoNameConfig.get_ShouldAutoName() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimAutoNameConfig.ShouldAutoNameSetBoolean">
            <summary>设置 AutoNameConfig.set_ShouldAutoName(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Configuration.Fakes.ShimAutoNameConfig.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimAutoNameConfig.AllInstances.NameGet">
            <summary>设置 AutoNameConfig.get_Name() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimAutoNameConfig.AllInstances.NameSetString">
            <summary>设置 AutoNameConfig.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimAutoNameConfig.AllInstances.ShouldAutoNameGet">
            <summary>设置 AutoNameConfig.get_ShouldAutoName() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimAutoNameConfig.AllInstances.ShouldAutoNameSetBoolean">
            <summary>设置 AutoNameConfig.set_ShouldAutoName(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Configuration.Fakes.ShimBundlingConfig">
            <summary>WebGrease.Configuration.BundlingConfig 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimBundlingConfig.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimBundlingConfig.#ctor(WebGrease.Configuration.BundlingConfig)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimBundlingConfig.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimBundlingConfig.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimBundlingConfig.Bind(WebGrease.Configuration.INamedConfig)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimBundlingConfig.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimBundlingConfig.Constructor">
            <summary>设置 BundlingConfig.BundlingConfig() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimBundlingConfig.ConstructorXElement">
            <summary>设置 BundlingConfig.BundlingConfig(XElement element) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimBundlingConfig.MinimalOutputGet">
            <summary>设置 BundlingConfig.get_MinimalOutput() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimBundlingConfig.MinimalOutputSetBoolean">
            <summary>设置 BundlingConfig.set_MinimalOutput(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimBundlingConfig.NameGet">
            <summary>设置 BundlingConfig.get_Name() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimBundlingConfig.NameSetString">
            <summary>设置 BundlingConfig.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimBundlingConfig.ShouldBundleFilesGet">
            <summary>设置 BundlingConfig.get_ShouldBundleFiles() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimBundlingConfig.ShouldBundleFilesSetBoolean">
            <summary>设置 BundlingConfig.set_ShouldBundleFiles(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Configuration.Fakes.ShimBundlingConfig.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimBundlingConfig.AllInstances.MinimalOutputGet">
            <summary>设置 BundlingConfig.get_MinimalOutput() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimBundlingConfig.AllInstances.MinimalOutputSetBoolean">
            <summary>设置 BundlingConfig.set_MinimalOutput(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimBundlingConfig.AllInstances.NameGet">
            <summary>设置 BundlingConfig.get_Name() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimBundlingConfig.AllInstances.NameSetString">
            <summary>设置 BundlingConfig.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimBundlingConfig.AllInstances.ShouldBundleFilesGet">
            <summary>设置 BundlingConfig.get_ShouldBundleFiles() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimBundlingConfig.AllInstances.ShouldBundleFilesSetBoolean">
            <summary>设置 BundlingConfig.set_ShouldBundleFiles(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Configuration.Fakes.ShimCssSpritingConfig">
            <summary>WebGrease.Configuration.CssSpritingConfig 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.#ctor(WebGrease.Configuration.CssSpritingConfig)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.Bind(WebGrease.Configuration.INamedConfig)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.Constructor">
            <summary>设置 CssSpritingConfig.CssSpritingConfig() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.ConstructorXElement">
            <summary>设置 CssSpritingConfig.CssSpritingConfig(XElement element) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.DestinationImageFolderGet">
            <summary>设置 CssSpritingConfig.get_DestinationImageFolder() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.DestinationImageFolderSetString">
            <summary>设置 CssSpritingConfig.set_DestinationImageFolder(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.ErrorOnInvalidSpriteGet">
            <summary>设置 CssSpritingConfig.get_ErrorOnInvalidSprite() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.ErrorOnInvalidSpriteSetBoolean">
            <summary>设置 CssSpritingConfig.set_ErrorOnInvalidSprite(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.IgnoreImagesWithNonDefaultBackgroundSizeGet">
            <summary>设置 CssSpritingConfig.get_IgnoreImagesWithNonDefaultBackgroundSize() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.IgnoreImagesWithNonDefaultBackgroundSizeSetBoolean">
            <summary>设置 CssSpritingConfig.set_IgnoreImagesWithNonDefaultBackgroundSize(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.ImagePaddingGet">
            <summary>设置 CssSpritingConfig.get_ImagePadding() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.ImagePaddingSetInt32">
            <summary>设置 CssSpritingConfig.set_ImagePadding(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.ImagesToIgnoreGet">
            <summary>设置 CssSpritingConfig.get_ImagesToIgnore() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.ImagesToIgnoreSetIEnumerableOfString">
            <summary>设置 CssSpritingConfig.set_ImagesToIgnore(IEnumerable`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.NameGet">
            <summary>设置 CssSpritingConfig.get_Name() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.NameSetString">
            <summary>设置 CssSpritingConfig.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.OutputUnitFactorGet">
            <summary>设置 CssSpritingConfig.get_OutputUnitFactor() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.OutputUnitFactorSetDouble">
            <summary>设置 CssSpritingConfig.set_OutputUnitFactor(Double value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.OutputUnitGet">
            <summary>设置 CssSpritingConfig.get_OutputUnit() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.OutputUnitSetString">
            <summary>设置 CssSpritingConfig.set_OutputUnit(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.ShouldAutoSpriteGet">
            <summary>设置 CssSpritingConfig.get_ShouldAutoSprite() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.ShouldAutoSpriteSetBoolean">
            <summary>设置 CssSpritingConfig.set_ShouldAutoSprite(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.ShouldAutoVersionBackgroundImagesGet">
            <summary>设置 CssSpritingConfig.get_ShouldAutoVersionBackgroundImages() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.ShouldAutoVersionBackgroundImagesSetBoolean">
            <summary>设置 CssSpritingConfig.set_ShouldAutoVersionBackgroundImages(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.WriteLogFileGet">
            <summary>设置 CssSpritingConfig.get_WriteLogFile() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.WriteLogFileSetBoolean">
            <summary>设置 CssSpritingConfig.set_WriteLogFile(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.AllInstances.DestinationImageFolderGet">
            <summary>设置 CssSpritingConfig.get_DestinationImageFolder() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.AllInstances.DestinationImageFolderSetString">
            <summary>设置 CssSpritingConfig.set_DestinationImageFolder(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.AllInstances.ErrorOnInvalidSpriteGet">
            <summary>设置 CssSpritingConfig.get_ErrorOnInvalidSprite() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.AllInstances.ErrorOnInvalidSpriteSetBoolean">
            <summary>设置 CssSpritingConfig.set_ErrorOnInvalidSprite(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.AllInstances.IgnoreImagesWithNonDefaultBackgroundSizeGet">
            <summary>设置 CssSpritingConfig.get_IgnoreImagesWithNonDefaultBackgroundSize() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.AllInstances.IgnoreImagesWithNonDefaultBackgroundSizeSetBoolean">
            <summary>设置 CssSpritingConfig.set_IgnoreImagesWithNonDefaultBackgroundSize(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.AllInstances.ImagePaddingGet">
            <summary>设置 CssSpritingConfig.get_ImagePadding() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.AllInstances.ImagePaddingSetInt32">
            <summary>设置 CssSpritingConfig.set_ImagePadding(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.AllInstances.ImagesToIgnoreGet">
            <summary>设置 CssSpritingConfig.get_ImagesToIgnore() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.AllInstances.ImagesToIgnoreSetIEnumerableOfString">
            <summary>设置 CssSpritingConfig.set_ImagesToIgnore(IEnumerable`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.AllInstances.NameGet">
            <summary>设置 CssSpritingConfig.get_Name() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.AllInstances.NameSetString">
            <summary>设置 CssSpritingConfig.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.AllInstances.OutputUnitFactorGet">
            <summary>设置 CssSpritingConfig.get_OutputUnitFactor() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.AllInstances.OutputUnitFactorSetDouble">
            <summary>设置 CssSpritingConfig.set_OutputUnitFactor(Double value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.AllInstances.OutputUnitGet">
            <summary>设置 CssSpritingConfig.get_OutputUnit() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.AllInstances.OutputUnitSetString">
            <summary>设置 CssSpritingConfig.set_OutputUnit(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.AllInstances.ShouldAutoSpriteGet">
            <summary>设置 CssSpritingConfig.get_ShouldAutoSprite() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.AllInstances.ShouldAutoSpriteSetBoolean">
            <summary>设置 CssSpritingConfig.set_ShouldAutoSprite(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.AllInstances.ShouldAutoVersionBackgroundImagesGet">
            <summary>设置 CssSpritingConfig.get_ShouldAutoVersionBackgroundImages() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.AllInstances.ShouldAutoVersionBackgroundImagesSetBoolean">
            <summary>设置 CssSpritingConfig.set_ShouldAutoVersionBackgroundImages(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.AllInstances.WriteLogFileGet">
            <summary>设置 CssSpritingConfig.get_WriteLogFile() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimCssSpritingConfig.AllInstances.WriteLogFileSetBoolean">
            <summary>设置 CssSpritingConfig.set_WriteLogFile(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Configuration.Fakes.ShimGlobalConfig">
            <summary>WebGrease.Configuration.GlobalConfig 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimGlobalConfig.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimGlobalConfig.#ctor(WebGrease.Configuration.GlobalConfig)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimGlobalConfig.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimGlobalConfig.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimGlobalConfig.Bind(WebGrease.Configuration.INamedConfig)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimGlobalConfig.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimGlobalConfig.Constructor">
            <summary>设置 GlobalConfig.GlobalConfig() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimGlobalConfig.ConstructorXElement">
            <summary>设置 GlobalConfig.GlobalConfig(XElement settingElement) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimGlobalConfig.NameGet">
            <summary>设置 GlobalConfig.get_Name() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimGlobalConfig.NameSetString">
            <summary>设置 GlobalConfig.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimGlobalConfig.TreatWarningsAsErrorsGet">
            <summary>设置 GlobalConfig.get_TreatWarningsAsErrors() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimGlobalConfig.TreatWarningsAsErrorsSetNullableOfBoolean">
            <summary>设置 GlobalConfig.set_TreatWarningsAsErrors(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Configuration.Fakes.ShimGlobalConfig.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimGlobalConfig.AllInstances.NameGet">
            <summary>设置 GlobalConfig.get_Name() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimGlobalConfig.AllInstances.NameSetString">
            <summary>设置 GlobalConfig.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimGlobalConfig.AllInstances.TreatWarningsAsErrorsGet">
            <summary>设置 GlobalConfig.get_TreatWarningsAsErrors() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimGlobalConfig.AllInstances.TreatWarningsAsErrorsSetNullableOfBoolean">
            <summary>设置 GlobalConfig.set_TreatWarningsAsErrors(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Configuration.Fakes.ShimInputSpec">
            <summary>WebGrease.Configuration.InputSpec 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimInputSpec.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimInputSpec.#ctor(WebGrease.Configuration.InputSpec)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimInputSpec.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimInputSpec.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimInputSpec.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimInputSpec.Constructor">
            <summary>设置 InputSpec.InputSpec() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimInputSpec.ConstructorXElementString">
            <summary>设置 InputSpec.InputSpec(XElement element, String sourceDirectory) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimInputSpec.EqualsObject">
            <summary>设置 InputSpec.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimInputSpec.GetHashCode">
            <summary>设置 InputSpec.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimInputSpec.GetObjectHashCodeObject">
            <summary>设置 InputSpec.GetObjectHashCode(Object obj) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimInputSpec.IsOptionalGet">
            <summary>设置 InputSpec.get_IsOptional() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimInputSpec.IsOptionalSetBoolean">
            <summary>设置 InputSpec.set_IsOptional(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimInputSpec.PathGet">
            <summary>设置 InputSpec.get_Path() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimInputSpec.PathSetString">
            <summary>设置 InputSpec.set_Path(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimInputSpec.SearchOptionGet">
            <summary>设置 InputSpec.get_SearchOption() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimInputSpec.SearchOptionSetSearchOption">
            <summary>设置 InputSpec.set_SearchOption(SearchOption value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimInputSpec.SearchPatternGet">
            <summary>设置 InputSpec.get_SearchPattern() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimInputSpec.SearchPatternSetString">
            <summary>设置 InputSpec.set_SearchPattern(String value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Configuration.Fakes.ShimInputSpec.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimInputSpec.AllInstances.EqualsObject">
            <summary>设置 InputSpec.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimInputSpec.AllInstances.GetHashCode01">
            <summary>设置 InputSpec.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimInputSpec.AllInstances.IsOptionalGet">
            <summary>设置 InputSpec.get_IsOptional() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimInputSpec.AllInstances.IsOptionalSetBoolean">
            <summary>设置 InputSpec.set_IsOptional(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimInputSpec.AllInstances.PathGet">
            <summary>设置 InputSpec.get_Path() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimInputSpec.AllInstances.PathSetString">
            <summary>设置 InputSpec.set_Path(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimInputSpec.AllInstances.SearchOptionGet">
            <summary>设置 InputSpec.get_SearchOption() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimInputSpec.AllInstances.SearchOptionSetSearchOption">
            <summary>设置 InputSpec.set_SearchOption(SearchOption value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimInputSpec.AllInstances.SearchPatternGet">
            <summary>设置 InputSpec.get_SearchPattern() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimInputSpec.AllInstances.SearchPatternSetString">
            <summary>设置 InputSpec.set_SearchPattern(String value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Configuration.Fakes.ShimJSFileSet">
            <summary>WebGrease.Configuration.JSFileSet 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimJSFileSet.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimJSFileSet.#ctor(WebGrease.Configuration.JSFileSet)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimJSFileSet.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimJSFileSet.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimJSFileSet.Bind(WebGrease.Configuration.IFileSet)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.AutoNamingGet">
            <summary>设置 JSFileSet.get_AutoNaming() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.AutoNamingSetIDictionaryOfStringAutoNameConfig">
            <summary>设置 JSFileSet.set_AutoNaming(IDictionary`2&lt;String,AutoNameConfig&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.BundlingGet">
            <summary>设置 JSFileSet.get_Bundling() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.BundlingSetIDictionaryOfStringBundlingConfig">
            <summary>设置 JSFileSet.set_Bundling(IDictionary`2&lt;String,BundlingConfig&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.Constructor">
            <summary>设置 JSFileSet.JSFileSet() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.GlobalConfigGet">
            <summary>设置 JSFileSet.get_GlobalConfig() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.GlobalConfigSetGlobalConfig">
            <summary>设置 JSFileSet.set_GlobalConfig(GlobalConfig value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.InputSpecsGet">
            <summary>设置 JSFileSet.get_InputSpecs() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.InputSpecsSetIListOfInputSpec">
            <summary>设置 JSFileSet.set_InputSpecs(IList`1&lt;InputSpec&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.LoadedConfigurationFilesGet">
            <summary>设置 JSFileSet.get_LoadedConfigurationFiles() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.LoadedConfigurationFilesSetIListOfString">
            <summary>设置 JSFileSet.set_LoadedConfigurationFiles(IList`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.LocalesGet">
            <summary>设置 JSFileSet.get_Locales() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.LocalesSetIListOfString">
            <summary>设置 JSFileSet.set_Locales(IList`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.OutputGet">
            <summary>设置 JSFileSet.get_Output() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.OutputSetString">
            <summary>设置 JSFileSet.set_Output(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.PreprocessingGet">
            <summary>设置 JSFileSet.get_Preprocessing() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.PreprocessingSetIDictionaryOfStringPreprocessingConfig">
            <summary>设置 JSFileSet.set_Preprocessing(IDictionary`2&lt;String,PreprocessingConfig&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.ValidationGet">
            <summary>设置 JSFileSet.get_Validation() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.ValidationSetIDictionaryOfStringJSValidationConfig">
            <summary>设置 JSFileSet.set_Validation(IDictionary`2&lt;String,JSValidationConfig&gt; value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Configuration.Fakes.ShimJSFileSet.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.AllInstances.AutoNamingGet">
            <summary>设置 JSFileSet.get_AutoNaming() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.AllInstances.AutoNamingSetIDictionaryOfStringAutoNameConfig">
            <summary>设置 JSFileSet.set_AutoNaming(IDictionary`2&lt;String,AutoNameConfig&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.AllInstances.BundlingGet">
            <summary>设置 JSFileSet.get_Bundling() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.AllInstances.BundlingSetIDictionaryOfStringBundlingConfig">
            <summary>设置 JSFileSet.set_Bundling(IDictionary`2&lt;String,BundlingConfig&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.AllInstances.GlobalConfigGet">
            <summary>设置 JSFileSet.get_GlobalConfig() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.AllInstances.GlobalConfigSetGlobalConfig">
            <summary>设置 JSFileSet.set_GlobalConfig(GlobalConfig value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.AllInstances.InputSpecsGet">
            <summary>设置 JSFileSet.get_InputSpecs() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.AllInstances.InputSpecsSetIListOfInputSpec">
            <summary>设置 JSFileSet.set_InputSpecs(IList`1&lt;InputSpec&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.AllInstances.LoadedConfigurationFilesGet">
            <summary>设置 JSFileSet.get_LoadedConfigurationFiles() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.AllInstances.LoadedConfigurationFilesSetIListOfString">
            <summary>设置 JSFileSet.set_LoadedConfigurationFiles(IList`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.AllInstances.LocalesGet">
            <summary>设置 JSFileSet.get_Locales() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.AllInstances.LocalesSetIListOfString">
            <summary>设置 JSFileSet.set_Locales(IList`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.AllInstances.OutputGet">
            <summary>设置 JSFileSet.get_Output() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.AllInstances.OutputSetString">
            <summary>设置 JSFileSet.set_Output(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.AllInstances.PreprocessingGet">
            <summary>设置 JSFileSet.get_Preprocessing() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.AllInstances.PreprocessingSetIDictionaryOfStringPreprocessingConfig">
            <summary>设置 JSFileSet.set_Preprocessing(IDictionary`2&lt;String,PreprocessingConfig&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.AllInstances.ValidationGet">
            <summary>设置 JSFileSet.get_Validation() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSFileSet.AllInstances.ValidationSetIDictionaryOfStringJSValidationConfig">
            <summary>设置 JSFileSet.set_Validation(IDictionary`2&lt;String,JSValidationConfig&gt; value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Configuration.Fakes.ShimJSValidationConfig">
            <summary>WebGrease.Configuration.JSValidationConfig 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimJSValidationConfig.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimJSValidationConfig.#ctor(WebGrease.Configuration.JSValidationConfig)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimJSValidationConfig.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimJSValidationConfig.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimJSValidationConfig.Bind(WebGrease.Configuration.INamedConfig)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSValidationConfig.AnalyzeArgumentsGet">
            <summary>设置 JSValidationConfig.get_AnalyzeArguments() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSValidationConfig.AnalyzeArgumentsSetString">
            <summary>设置 JSValidationConfig.set_AnalyzeArguments(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSValidationConfig.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSValidationConfig.Constructor">
            <summary>设置 JSValidationConfig.JSValidationConfig() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSValidationConfig.ConstructorXElement">
            <summary>设置 JSValidationConfig.JSValidationConfig(XElement element) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSValidationConfig.NameGet">
            <summary>设置 JSValidationConfig.get_Name() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSValidationConfig.NameSetString">
            <summary>设置 JSValidationConfig.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSValidationConfig.ShouldAnalyzeGet">
            <summary>设置 JSValidationConfig.get_ShouldAnalyze() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSValidationConfig.ShouldAnalyzeSetBoolean">
            <summary>设置 JSValidationConfig.set_ShouldAnalyze(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Configuration.Fakes.ShimJSValidationConfig.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSValidationConfig.AllInstances.AnalyzeArgumentsGet">
            <summary>设置 JSValidationConfig.get_AnalyzeArguments() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSValidationConfig.AllInstances.AnalyzeArgumentsSetString">
            <summary>设置 JSValidationConfig.set_AnalyzeArguments(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSValidationConfig.AllInstances.NameGet">
            <summary>设置 JSValidationConfig.get_Name() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSValidationConfig.AllInstances.NameSetString">
            <summary>设置 JSValidationConfig.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSValidationConfig.AllInstances.ShouldAnalyzeGet">
            <summary>设置 JSValidationConfig.get_ShouldAnalyze() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimJSValidationConfig.AllInstances.ShouldAnalyzeSetBoolean">
            <summary>设置 JSValidationConfig.set_ShouldAnalyze(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Configuration.Fakes.ShimPreprocessingConfig">
            <summary>WebGrease.Configuration.PreprocessingConfig 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimPreprocessingConfig.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimPreprocessingConfig.#ctor(WebGrease.Configuration.PreprocessingConfig)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimPreprocessingConfig.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimPreprocessingConfig.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimPreprocessingConfig.Bind(WebGrease.Configuration.INamedConfig)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimPreprocessingConfig.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimPreprocessingConfig.Constructor">
            <summary>设置 PreprocessingConfig.PreprocessingConfig() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimPreprocessingConfig.ConstructorXElement">
            <summary>设置 PreprocessingConfig.PreprocessingConfig(XElement element) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimPreprocessingConfig.ElementGet">
            <summary>设置 PreprocessingConfig.get_Element() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimPreprocessingConfig.ElementSetXElement">
            <summary>设置 PreprocessingConfig.set_Element(XElement value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimPreprocessingConfig.EnabledGet">
            <summary>设置 PreprocessingConfig.get_Enabled() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimPreprocessingConfig.EnabledSetBoolean">
            <summary>设置 PreprocessingConfig.set_Enabled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimPreprocessingConfig.NameGet">
            <summary>设置 PreprocessingConfig.get_Name() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimPreprocessingConfig.NameSetString">
            <summary>设置 PreprocessingConfig.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimPreprocessingConfig.PreprocessingEnginesGet">
            <summary>设置 PreprocessingConfig.get_PreprocessingEngines() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimPreprocessingConfig.PreprocessingEnginesSetCollectionOfString">
            <summary>设置 PreprocessingConfig.set_PreprocessingEngines(Collection`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Configuration.Fakes.ShimPreprocessingConfig.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimPreprocessingConfig.AllInstances.ElementGet">
            <summary>设置 PreprocessingConfig.get_Element() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimPreprocessingConfig.AllInstances.ElementSetXElement">
            <summary>设置 PreprocessingConfig.set_Element(XElement value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimPreprocessingConfig.AllInstances.EnabledGet">
            <summary>设置 PreprocessingConfig.get_Enabled() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimPreprocessingConfig.AllInstances.EnabledSetBoolean">
            <summary>设置 PreprocessingConfig.set_Enabled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimPreprocessingConfig.AllInstances.NameGet">
            <summary>设置 PreprocessingConfig.get_Name() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimPreprocessingConfig.AllInstances.NameSetString">
            <summary>设置 PreprocessingConfig.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimPreprocessingConfig.AllInstances.PreprocessingEnginesGet">
            <summary>设置 PreprocessingConfig.get_PreprocessingEngines() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimPreprocessingConfig.AllInstances.PreprocessingEnginesSetCollectionOfString">
            <summary>设置 PreprocessingConfig.set_PreprocessingEngines(Collection`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration">
            <summary>WebGrease.Configuration.WebGreaseConfiguration 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.#ctor(WebGrease.Configuration.WebGreaseConfiguration)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AddSeperatedValuesIListOfStringStringFuncOfStringString">
            <summary>设置 WebGreaseConfiguration.AddSeperatedValues(IList`1&lt;String&gt; list, String seperatedValues, Func`2&lt;String,String&gt; action) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllLoadedConfigurationFilesGet">
            <summary>设置 WebGreaseConfiguration.get_AllLoadedConfigurationFiles() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.ApplicationRootDirectoryGet">
            <summary>设置 WebGreaseConfiguration.get_ApplicationRootDirectory() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.ApplicationRootDirectorySetString">
            <summary>设置 WebGreaseConfiguration.set_ApplicationRootDirectory(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.CacheEnabledGet">
            <summary>设置 WebGreaseConfiguration.get_CacheEnabled() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.CacheEnabledSetBoolean">
            <summary>设置 WebGreaseConfiguration.set_CacheEnabled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.CacheRootPathGet">
            <summary>设置 WebGreaseConfiguration.get_CacheRootPath() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.CacheRootPathSetString">
            <summary>设置 WebGreaseConfiguration.set_CacheRootPath(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.CacheTimeoutGet">
            <summary>设置 WebGreaseConfiguration.get_CacheTimeout() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.CacheTimeoutSetTimeSpan">
            <summary>设置 WebGreaseConfiguration.set_CacheTimeout(TimeSpan value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.CacheUniqueKeyGet">
            <summary>设置 WebGreaseConfiguration.get_CacheUniqueKey() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.CacheUniqueKeySetString">
            <summary>设置 WebGreaseConfiguration.set_CacheUniqueKey(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.ConfigTypeGet">
            <summary>设置 WebGreaseConfiguration.get_ConfigType() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.ConfigTypeSetString">
            <summary>设置 WebGreaseConfiguration.set_ConfigType(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.Constructor">
            <summary>设置 WebGreaseConfiguration.WebGreaseConfiguration() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.ConstructorFileInfoStringStringStringStringStringStringString">
            <summary>设置 WebGreaseConfiguration.WebGreaseConfiguration(FileInfo configurationFile, String configType, String sourceDirectory, String destinationDirectory, String logsDirectory, String toolsTempDirectory, String appRootDirectory, String preprocessingPluginPath) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.ConstructorStringString">
            <summary>设置 WebGreaseConfiguration.WebGreaseConfiguration(String configType, String preprocessingPluginPath) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.ConstructorStringStringStringStringStringStringString">
            <summary>设置 WebGreaseConfiguration.WebGreaseConfiguration(String configType, String sourceDirectory, String destinationDirectory, String logsDirectory, String toolsTempDirectory, String appRootDirectory, String preprocessingPluginPath) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.ConstructorWebGreaseConfigurationFileInfo">
            <summary>设置 WebGreaseConfiguration.WebGreaseConfiguration(WebGreaseConfiguration configuration, FileInfo configurationFile) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.DefaultBundlingGet">
            <summary>设置 WebGreaseConfiguration.get_DefaultBundling() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.DefaultBundlingSetIDictionaryOfStringBundlingConfig">
            <summary>设置 WebGreaseConfiguration.set_DefaultBundling(IDictionary`2&lt;String,BundlingConfig&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.DefaultLocalesGet">
            <summary>设置 WebGreaseConfiguration.get_DefaultLocales() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.DefaultLocalesSetIListOfString">
            <summary>设置 WebGreaseConfiguration.set_DefaultLocales(IList`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.DefaultPreprocessingGet">
            <summary>设置 WebGreaseConfiguration.get_DefaultPreprocessing() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.DefaultPreprocessingSetIDictionaryOfStringPreprocessingConfig">
            <summary>设置 WebGreaseConfiguration.set_DefaultPreprocessing(IDictionary`2&lt;String,PreprocessingConfig&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.DefaultSpritingGet">
            <summary>设置 WebGreaseConfiguration.get_DefaultSpriting() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.DefaultSpritingSetIDictionaryOfStringCssSpritingConfig">
            <summary>设置 WebGreaseConfiguration.set_DefaultSpriting(IDictionary`2&lt;String,CssSpritingConfig&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.DefaultThemesGet">
            <summary>设置 WebGreaseConfiguration.get_DefaultThemes() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.DefaultThemesSetIListOfString">
            <summary>设置 WebGreaseConfiguration.set_DefaultThemes(IList`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.DestinationDirectoryGet">
            <summary>设置 WebGreaseConfiguration.get_DestinationDirectory() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.DestinationDirectorySetString">
            <summary>设置 WebGreaseConfiguration.set_DestinationDirectory(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.EnsureAndExpandDirectoryStringBoolean">
            <summary>设置 WebGreaseConfiguration.EnsureAndExpandDirectory(String directory, Boolean allowCreate) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.ForEachConfigSourceElementXElementStringActionOfXElementString">
            <summary>设置 WebGreaseConfiguration.ForEachConfigSourceElement(XElement parentElement, String parentFilePath, Action`2&lt;XElement,String&gt; configSourceAction) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.GlobalGet">
            <summary>设置 WebGreaseConfiguration.get_Global() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.GlobalSetGlobalConfig">
            <summary>设置 WebGreaseConfiguration.set_Global(GlobalConfig value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.ImageDirectoriesGet">
            <summary>设置 WebGreaseConfiguration.get_ImageDirectories() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.ImageDirectoriesSetIListOfString">
            <summary>设置 WebGreaseConfiguration.set_ImageDirectories(IList`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.ImageDirectoriesToHashGet">
            <summary>设置 WebGreaseConfiguration.get_ImageDirectoriesToHash() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.ImageDirectoriesToHashSetIListOfString">
            <summary>设置 WebGreaseConfiguration.set_ImageDirectoriesToHash(IList`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.ImageExtensionsGet">
            <summary>设置 WebGreaseConfiguration.get_ImageExtensions() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.ImageExtensionsSetIListOfString">
            <summary>设置 WebGreaseConfiguration.set_ImageExtensions(IList`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.IntermediateErrorDirectoryGet">
            <summary>设置 WebGreaseConfiguration.get_IntermediateErrorDirectory() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.IntermediateErrorDirectorySetString">
            <summary>设置 WebGreaseConfiguration.set_IntermediateErrorDirectory(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.JSFileSetsGet">
            <summary>设置 WebGreaseConfiguration.get_JSFileSets() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.JSFileSetsSetIListOfJSFileSet">
            <summary>设置 WebGreaseConfiguration.set_JSFileSets(IList`1&lt;JSFileSet&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.LoadedConfigurationFilesGet">
            <summary>设置 WebGreaseConfiguration.get_LoadedConfigurationFiles() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.LoadedConfigurationFilesSetIListOfString">
            <summary>设置 WebGreaseConfiguration.set_LoadedConfigurationFiles(IList`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.LogsDirectoryGet">
            <summary>设置 WebGreaseConfiguration.get_LogsDirectory() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.LogsDirectorySetString">
            <summary>设置 WebGreaseConfiguration.set_LogsDirectory(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.MeasureGet">
            <summary>设置 WebGreaseConfiguration.get_Measure() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.MeasureSetBoolean">
            <summary>设置 WebGreaseConfiguration.set_Measure(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.OverrideTokensDirectoryGet">
            <summary>设置 WebGreaseConfiguration.get_OverrideTokensDirectory() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.OverrideTokensDirectorySetString">
            <summary>设置 WebGreaseConfiguration.set_OverrideTokensDirectory(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.OverridesGet">
            <summary>设置 WebGreaseConfiguration.get_Overrides() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.OverridesSetTemporaryOverrides">
            <summary>设置 WebGreaseConfiguration.set_Overrides(TemporaryOverrides value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.ParseSettingsIEnumerableOfXElementString">
            <summary>设置 WebGreaseConfiguration.ParseSettings(IEnumerable`1&lt;XElement&gt; settingsElements, String configurationFile) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.ParseSettingsXElementString">
            <summary>设置 WebGreaseConfiguration.ParseSettings(XElement settingsElement, String configurationFile) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.ParseString">
            <summary>设置 WebGreaseConfiguration.Parse(String configurationFile) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.ParseXElementString">
            <summary>设置 WebGreaseConfiguration.Parse(XElement element, String configurationFile) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.PreprocessingPluginPathGet">
            <summary>设置 WebGreaseConfiguration.get_PreprocessingPluginPath() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.PreprocessingPluginPathSetString">
            <summary>设置 WebGreaseConfiguration.set_PreprocessingPluginPath(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.ReportPathGet">
            <summary>设置 WebGreaseConfiguration.get_ReportPath() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.ReportPathSetString">
            <summary>设置 WebGreaseConfiguration.set_ReportPath(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.SourceDirectoryGet">
            <summary>设置 WebGreaseConfiguration.get_SourceDirectory() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.SourceDirectorySetString">
            <summary>设置 WebGreaseConfiguration.set_SourceDirectory(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.StaticConstructor">
            <summary>设置 WebGreaseConfiguration.WebGreaseConfiguration() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.TokensDirectoryGet">
            <summary>设置 WebGreaseConfiguration.get_TokensDirectory() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.TokensDirectorySetString">
            <summary>设置 WebGreaseConfiguration.set_TokensDirectory(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.ToolsTempDirectoryGet">
            <summary>设置 WebGreaseConfiguration.get_ToolsTempDirectory() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.ToolsTempDirectorySetString">
            <summary>设置 WebGreaseConfiguration.set_ToolsTempDirectory(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.Validate">
            <summary>设置 WebGreaseConfiguration.Validate() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration._EnsureAndExpandDirectoryb__8Match">
            <summary>设置 WebGreaseConfiguration.&lt;EnsureAndExpandDirectory&gt;b__8(Match match) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration._ForEachConfigSourceElementb__4XElement">
            <summary>设置 WebGreaseConfiguration.&lt;ForEachConfigSourceElement&gt;b__4(XElement e) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration._ForEachConfigSourceElementb__5String">
            <summary>设置 WebGreaseConfiguration.&lt;ForEachConfigSourceElement&gt;b__5(String cs) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration._ParseSettingsb__aXElement">
            <summary>设置 WebGreaseConfiguration.&lt;ParseSettings&gt;b__a(XElement e) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration._ParseSettingsb__cXElementString">
            <summary>设置 WebGreaseConfiguration.&lt;ParseSettings&gt;b__c(XElement element, String s) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration._ParseSettingsb__dString">
            <summary>设置 WebGreaseConfiguration.&lt;ParseSettings&gt;b__d(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration._ParseSettingsb__eString">
            <summary>设置 WebGreaseConfiguration.&lt;ParseSettings&gt;b__e(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration._get_AllLoadedConfigurationFilesb__1JSFileSet">
            <summary>设置 WebGreaseConfiguration.&lt;get_AllLoadedConfigurationFiles&gt;b__1(JSFileSet cfs) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.AllLoadedConfigurationFilesGet">
            <summary>设置 WebGreaseConfiguration.get_AllLoadedConfigurationFiles() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.ApplicationRootDirectoryGet">
            <summary>设置 WebGreaseConfiguration.get_ApplicationRootDirectory() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.ApplicationRootDirectorySetString">
            <summary>设置 WebGreaseConfiguration.set_ApplicationRootDirectory(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.CacheEnabledGet">
            <summary>设置 WebGreaseConfiguration.get_CacheEnabled() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.CacheEnabledSetBoolean">
            <summary>设置 WebGreaseConfiguration.set_CacheEnabled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.CacheRootPathGet">
            <summary>设置 WebGreaseConfiguration.get_CacheRootPath() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.CacheRootPathSetString">
            <summary>设置 WebGreaseConfiguration.set_CacheRootPath(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.CacheTimeoutGet">
            <summary>设置 WebGreaseConfiguration.get_CacheTimeout() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.CacheTimeoutSetTimeSpan">
            <summary>设置 WebGreaseConfiguration.set_CacheTimeout(TimeSpan value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.CacheUniqueKeyGet">
            <summary>设置 WebGreaseConfiguration.get_CacheUniqueKey() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.CacheUniqueKeySetString">
            <summary>设置 WebGreaseConfiguration.set_CacheUniqueKey(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.ConfigTypeGet">
            <summary>设置 WebGreaseConfiguration.get_ConfigType() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.ConfigTypeSetString">
            <summary>设置 WebGreaseConfiguration.set_ConfigType(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.DefaultBundlingGet">
            <summary>设置 WebGreaseConfiguration.get_DefaultBundling() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.DefaultBundlingSetIDictionaryOfStringBundlingConfig">
            <summary>设置 WebGreaseConfiguration.set_DefaultBundling(IDictionary`2&lt;String,BundlingConfig&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.DefaultLocalesGet">
            <summary>设置 WebGreaseConfiguration.get_DefaultLocales() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.DefaultLocalesSetIListOfString">
            <summary>设置 WebGreaseConfiguration.set_DefaultLocales(IList`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.DefaultPreprocessingGet">
            <summary>设置 WebGreaseConfiguration.get_DefaultPreprocessing() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.DefaultPreprocessingSetIDictionaryOfStringPreprocessingConfig">
            <summary>设置 WebGreaseConfiguration.set_DefaultPreprocessing(IDictionary`2&lt;String,PreprocessingConfig&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.DefaultSpritingGet">
            <summary>设置 WebGreaseConfiguration.get_DefaultSpriting() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.DefaultSpritingSetIDictionaryOfStringCssSpritingConfig">
            <summary>设置 WebGreaseConfiguration.set_DefaultSpriting(IDictionary`2&lt;String,CssSpritingConfig&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.DefaultThemesGet">
            <summary>设置 WebGreaseConfiguration.get_DefaultThemes() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.DefaultThemesSetIListOfString">
            <summary>设置 WebGreaseConfiguration.set_DefaultThemes(IList`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.DestinationDirectoryGet">
            <summary>设置 WebGreaseConfiguration.get_DestinationDirectory() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.DestinationDirectorySetString">
            <summary>设置 WebGreaseConfiguration.set_DestinationDirectory(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.GlobalGet">
            <summary>设置 WebGreaseConfiguration.get_Global() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.GlobalSetGlobalConfig">
            <summary>设置 WebGreaseConfiguration.set_Global(GlobalConfig value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.ImageDirectoriesGet">
            <summary>设置 WebGreaseConfiguration.get_ImageDirectories() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.ImageDirectoriesSetIListOfString">
            <summary>设置 WebGreaseConfiguration.set_ImageDirectories(IList`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.ImageDirectoriesToHashGet">
            <summary>设置 WebGreaseConfiguration.get_ImageDirectoriesToHash() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.ImageDirectoriesToHashSetIListOfString">
            <summary>设置 WebGreaseConfiguration.set_ImageDirectoriesToHash(IList`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.ImageExtensionsGet">
            <summary>设置 WebGreaseConfiguration.get_ImageExtensions() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.ImageExtensionsSetIListOfString">
            <summary>设置 WebGreaseConfiguration.set_ImageExtensions(IList`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.IntermediateErrorDirectoryGet">
            <summary>设置 WebGreaseConfiguration.get_IntermediateErrorDirectory() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.IntermediateErrorDirectorySetString">
            <summary>设置 WebGreaseConfiguration.set_IntermediateErrorDirectory(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.JSFileSetsGet">
            <summary>设置 WebGreaseConfiguration.get_JSFileSets() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.JSFileSetsSetIListOfJSFileSet">
            <summary>设置 WebGreaseConfiguration.set_JSFileSets(IList`1&lt;JSFileSet&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.LoadedConfigurationFilesGet">
            <summary>设置 WebGreaseConfiguration.get_LoadedConfigurationFiles() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.LoadedConfigurationFilesSetIListOfString">
            <summary>设置 WebGreaseConfiguration.set_LoadedConfigurationFiles(IList`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.LogsDirectoryGet">
            <summary>设置 WebGreaseConfiguration.get_LogsDirectory() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.LogsDirectorySetString">
            <summary>设置 WebGreaseConfiguration.set_LogsDirectory(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.MeasureGet">
            <summary>设置 WebGreaseConfiguration.get_Measure() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.MeasureSetBoolean">
            <summary>设置 WebGreaseConfiguration.set_Measure(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.OverrideTokensDirectoryGet">
            <summary>设置 WebGreaseConfiguration.get_OverrideTokensDirectory() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.OverrideTokensDirectorySetString">
            <summary>设置 WebGreaseConfiguration.set_OverrideTokensDirectory(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.OverridesGet">
            <summary>设置 WebGreaseConfiguration.get_Overrides() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.OverridesSetTemporaryOverrides">
            <summary>设置 WebGreaseConfiguration.set_Overrides(TemporaryOverrides value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.ParseSettingsIEnumerableOfXElementString">
            <summary>设置 WebGreaseConfiguration.ParseSettings(IEnumerable`1&lt;XElement&gt; settingsElements, String configurationFile) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.ParseSettingsXElementString">
            <summary>设置 WebGreaseConfiguration.ParseSettings(XElement settingsElement, String configurationFile) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.ParseString">
            <summary>设置 WebGreaseConfiguration.Parse(String configurationFile) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.ParseXElementString">
            <summary>设置 WebGreaseConfiguration.Parse(XElement element, String configurationFile) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.PreprocessingPluginPathGet">
            <summary>设置 WebGreaseConfiguration.get_PreprocessingPluginPath() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.PreprocessingPluginPathSetString">
            <summary>设置 WebGreaseConfiguration.set_PreprocessingPluginPath(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.ReportPathGet">
            <summary>设置 WebGreaseConfiguration.get_ReportPath() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.ReportPathSetString">
            <summary>设置 WebGreaseConfiguration.set_ReportPath(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.SourceDirectoryGet">
            <summary>设置 WebGreaseConfiguration.get_SourceDirectory() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.SourceDirectorySetString">
            <summary>设置 WebGreaseConfiguration.set_SourceDirectory(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.TokensDirectoryGet">
            <summary>设置 WebGreaseConfiguration.get_TokensDirectory() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.TokensDirectorySetString">
            <summary>设置 WebGreaseConfiguration.set_TokensDirectory(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.ToolsTempDirectoryGet">
            <summary>设置 WebGreaseConfiguration.get_ToolsTempDirectory() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.ToolsTempDirectorySetString">
            <summary>设置 WebGreaseConfiguration.set_ToolsTempDirectory(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances.Validate">
            <summary>设置 WebGreaseConfiguration.Validate() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances._ParseSettingsb__cXElementString">
            <summary>设置 WebGreaseConfiguration.&lt;ParseSettings&gt;b__c(XElement element, String s) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances._ParseSettingsb__dString">
            <summary>设置 WebGreaseConfiguration.&lt;ParseSettings&gt;b__d(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.ShimWebGreaseConfiguration.AllInstances._ParseSettingsb__eString">
            <summary>设置 WebGreaseConfiguration.&lt;ParseSettings&gt;b__e(String value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Configuration.Fakes.StubAutoNameConfig">
            <summary>WebGrease.Configuration.AutoNameConfig 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.StubAutoNameConfig.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.StubAutoNameConfig.InitializeStub">
            <summary>初始化 type StubAutoNameConfig 的新实例</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.StubAutoNameConfig.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.StubAutoNameConfig.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.StubAutoNameConfig.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WebGrease.Configuration.Fakes.StubBundlingConfig">
            <summary>WebGrease.Configuration.BundlingConfig 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.StubBundlingConfig.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.StubBundlingConfig.InitializeStub">
            <summary>初始化 type StubBundlingConfig 的新实例</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.StubBundlingConfig.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.StubBundlingConfig.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.StubBundlingConfig.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WebGrease.Configuration.Fakes.StubCssSpritingConfig">
            <summary>WebGrease.Configuration.CssSpritingConfig 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.StubCssSpritingConfig.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.StubCssSpritingConfig.#ctor(System.Xml.Linq.XElement)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.StubCssSpritingConfig.InitializeStub">
            <summary>初始化 type StubCssSpritingConfig 的新实例</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.StubCssSpritingConfig.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.StubCssSpritingConfig.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.StubCssSpritingConfig.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WebGrease.Configuration.Fakes.StubGlobalConfig">
            <summary>WebGrease.Configuration.GlobalConfig 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.StubGlobalConfig.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.StubGlobalConfig.#ctor(System.Xml.Linq.XElement)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.StubGlobalConfig.InitializeStub">
            <summary>初始化 type StubGlobalConfig 的新实例</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.StubGlobalConfig.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.StubGlobalConfig.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.StubGlobalConfig.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WebGrease.Configuration.Fakes.StubIFileSet">
            <summary>WebGrease.Configuration.IFileSet 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.StubIFileSet.#ctor">
            <summary>初始化 type StubIFileSet 的新实例</summary>
        </member>
        <member name="F:WebGrease.Configuration.Fakes.StubIFileSet.BundlingGet">
            <summary>设置 IFileSet.get_Bundling() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Configuration.Fakes.StubIFileSet.InputSpecsGet">
            <summary>设置 IFileSet.get_InputSpecs() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Configuration.Fakes.StubIFileSet.LoadedConfigurationFilesGet">
            <summary>设置 IFileSet.get_LoadedConfigurationFiles() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Configuration.Fakes.StubIFileSet.LocalesGet">
            <summary>设置 IFileSet.get_Locales() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Configuration.Fakes.StubIFileSet.OutputGet">
            <summary>设置 IFileSet.get_Output() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Configuration.Fakes.StubIFileSet.PreprocessingGet">
            <summary>设置 IFileSet.get_Preprocessing() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.StubIFileSet.wg::WebGrease#Configuration#IFileSet#Bundling">
            <summary>设置 IFileSet.get_Bundling() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.StubIFileSet.wg::WebGrease#Configuration#IFileSet#InputSpecs">
            <summary>设置 IFileSet.get_InputSpecs() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.StubIFileSet.wg::WebGrease#Configuration#IFileSet#LoadedConfigurationFiles">
            <summary>设置 IFileSet.get_LoadedConfigurationFiles() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.StubIFileSet.wg::WebGrease#Configuration#IFileSet#Locales">
            <summary>设置 IFileSet.get_Locales() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.StubIFileSet.wg::WebGrease#Configuration#IFileSet#Output">
            <summary>设置 IFileSet.get_Output() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.StubIFileSet.wg::WebGrease#Configuration#IFileSet#Preprocessing">
            <summary>设置 IFileSet.get_Preprocessing() 的 stub</summary>
        </member>
        <member name="T:WebGrease.Configuration.Fakes.StubINamedConfig">
            <summary>WebGrease.Configuration.INamedConfig 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.StubINamedConfig.#ctor">
            <summary>初始化 type StubINamedConfig 的新实例</summary>
        </member>
        <member name="F:WebGrease.Configuration.Fakes.StubINamedConfig.NameGet">
            <summary>设置 INamedConfig.get_Name() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.StubINamedConfig.wg::WebGrease#Configuration#INamedConfig#Name">
            <summary>设置 INamedConfig.get_Name() 的 stub</summary>
        </member>
        <member name="T:WebGrease.Configuration.Fakes.StubInputSpec">
            <summary>WebGrease.Configuration.InputSpec 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.StubInputSpec.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.StubInputSpec.Equals(System.Object)">
            <summary>设置 InputSpec.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Configuration.Fakes.StubInputSpec.EqualsObject">
            <summary>设置 InputSpec.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.StubInputSpec.GetHashCode">
            <summary>设置 InputSpec.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:WebGrease.Configuration.Fakes.StubInputSpec.GetHashCode01">
            <summary>设置 InputSpec.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.StubInputSpec.InitializeStub">
            <summary>初始化 type StubInputSpec 的新实例</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.StubInputSpec.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.StubInputSpec.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.StubInputSpec.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WebGrease.Configuration.Fakes.StubJSValidationConfig">
            <summary>WebGrease.Configuration.JSValidationConfig 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.StubJSValidationConfig.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.StubJSValidationConfig.InitializeStub">
            <summary>初始化 type StubJSValidationConfig 的新实例</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.StubJSValidationConfig.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.StubJSValidationConfig.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.StubJSValidationConfig.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WebGrease.Configuration.Fakes.StubPreprocessingConfig">
            <summary>WebGrease.Configuration.PreprocessingConfig 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.StubPreprocessingConfig.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.StubPreprocessingConfig.#ctor(System.Xml.Linq.XElement)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Configuration.Fakes.StubPreprocessingConfig.InitializeStub">
            <summary>初始化 type StubPreprocessingConfig 的新实例</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.StubPreprocessingConfig.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.StubPreprocessingConfig.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WebGrease.Configuration.Fakes.StubPreprocessingConfig.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesBlockNode">
            <summary>WebGrease.Css.Ast.Animation.KeyFramesBlockNode 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesBlockNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesBlockNode.#ctor(WebGrease.Css.Ast.Animation.KeyFramesBlockNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesBlockNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesBlockNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesBlockNode.AcceptNodeVisitor">
            <summary>设置 KeyFramesBlockNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesBlockNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesBlockNode.ConstructorReadOnlyCollectionOfStringReadOnlyCollectionOfDeclarationNode">
            <summary>设置 KeyFramesBlockNode.KeyFramesBlockNode(ReadOnlyCollection`1&lt;String&gt; keyFramesSelectors, ReadOnlyCollection`1&lt;DeclarationNode&gt; declarationNodes) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesBlockNode.DeclarationNodesGet">
            <summary>设置 KeyFramesBlockNode.get_DeclarationNodes() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesBlockNode.DeclarationNodesSetReadOnlyCollectionOfDeclarationNode">
            <summary>设置 KeyFramesBlockNode.set_DeclarationNodes(ReadOnlyCollection`1&lt;DeclarationNode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesBlockNode.KeyFramesSelectorsGet">
            <summary>设置 KeyFramesBlockNode.get_KeyFramesSelectors() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesBlockNode.KeyFramesSelectorsSetReadOnlyCollectionOfString">
            <summary>设置 KeyFramesBlockNode.set_KeyFramesSelectors(ReadOnlyCollection`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesBlockNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesBlockNode.AllInstances.AcceptNodeVisitor">
            <summary>设置 KeyFramesBlockNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesBlockNode.AllInstances.DeclarationNodesGet">
            <summary>设置 KeyFramesBlockNode.get_DeclarationNodes() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesBlockNode.AllInstances.DeclarationNodesSetReadOnlyCollectionOfDeclarationNode">
            <summary>设置 KeyFramesBlockNode.set_DeclarationNodes(ReadOnlyCollection`1&lt;DeclarationNode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesBlockNode.AllInstances.KeyFramesSelectorsGet">
            <summary>设置 KeyFramesBlockNode.get_KeyFramesSelectors() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesBlockNode.AllInstances.KeyFramesSelectorsSetReadOnlyCollectionOfString">
            <summary>设置 KeyFramesBlockNode.set_KeyFramesSelectors(ReadOnlyCollection`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesNode">
            <summary>WebGrease.Css.Ast.Animation.KeyFramesNode 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesNode.#ctor(WebGrease.Css.Ast.Animation.KeyFramesNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesNode.AcceptNodeVisitor">
            <summary>设置 KeyFramesNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesNode.ConstructorStringStringStringReadOnlyCollectionOfKeyFramesBlockNode">
            <summary>设置 KeyFramesNode.KeyFramesNode(String keyFramesSymbol, String identValue, String stringValue, ReadOnlyCollection`1&lt;KeyFramesBlockNode&gt; keyFramesBlockNodes) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesNode.IdentValueGet">
            <summary>设置 KeyFramesNode.get_IdentValue() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesNode.IdentValueSetString">
            <summary>设置 KeyFramesNode.set_IdentValue(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesNode.KeyFramesBlockNodesGet">
            <summary>设置 KeyFramesNode.get_KeyFramesBlockNodes() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesNode.KeyFramesBlockNodesSetReadOnlyCollectionOfKeyFramesBlockNode">
            <summary>设置 KeyFramesNode.set_KeyFramesBlockNodes(ReadOnlyCollection`1&lt;KeyFramesBlockNode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesNode.KeyFramesSymbolGet">
            <summary>设置 KeyFramesNode.get_KeyFramesSymbol() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesNode.KeyFramesSymbolSetString">
            <summary>设置 KeyFramesNode.set_KeyFramesSymbol(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesNode.StringValueGet">
            <summary>设置 KeyFramesNode.get_StringValue() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesNode.StringValueSetString">
            <summary>设置 KeyFramesNode.set_StringValue(String value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesNode.AllInstances.AcceptNodeVisitor">
            <summary>设置 KeyFramesNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesNode.AllInstances.IdentValueGet">
            <summary>设置 KeyFramesNode.get_IdentValue() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesNode.AllInstances.IdentValueSetString">
            <summary>设置 KeyFramesNode.set_IdentValue(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesNode.AllInstances.KeyFramesBlockNodesGet">
            <summary>设置 KeyFramesNode.get_KeyFramesBlockNodes() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesNode.AllInstances.KeyFramesBlockNodesSetReadOnlyCollectionOfKeyFramesBlockNode">
            <summary>设置 KeyFramesNode.set_KeyFramesBlockNodes(ReadOnlyCollection`1&lt;KeyFramesBlockNode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesNode.AllInstances.KeyFramesSymbolGet">
            <summary>设置 KeyFramesNode.get_KeyFramesSymbol() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesNode.AllInstances.KeyFramesSymbolSetString">
            <summary>设置 KeyFramesNode.set_KeyFramesSymbol(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesNode.AllInstances.StringValueGet">
            <summary>设置 KeyFramesNode.get_StringValue() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Animation.Fakes.ShimKeyFramesNode.AllInstances.StringValueSetString">
            <summary>设置 KeyFramesNode.set_StringValue(String value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Fakes.ShimAstException">
            <summary>WebGrease.Css.Ast.AstException 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimAstException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimAstException.#ctor(WebGrease.Css.Ast.AstException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimAstException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimAstException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimAstException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimAstException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimAstException.Constructor">
            <summary>设置 AstException.AstException() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimAstException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 AstException.AstException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimAstException.ConstructorString">
            <summary>设置 AstException.AstException(String message) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimAstException.ConstructorStringException">
            <summary>设置 AstException.AstException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Fakes.ShimAstException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Fakes.ShimAstNode">
            <summary>WebGrease.Css.Ast.AstNode 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimAstNode.#ctor(WebGrease.Css.Ast.AstNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimAstNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimAstNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimAstNode.AcceptNodeVisitor">
            <summary>设置 AstNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimAstNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimAstNode.Constructor">
            <summary>设置 AstNode.AstNode() 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Fakes.ShimAstNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimAstNode.AllInstances.AcceptNodeVisitor">
            <summary>设置 AstNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Fakes.ShimCombinatorSimpleSelectorSequenceNode">
            <summary>WebGrease.Css.Ast.CombinatorSimpleSelectorSequenceNode 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimCombinatorSimpleSelectorSequenceNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimCombinatorSimpleSelectorSequenceNode.#ctor(WebGrease.Css.Ast.CombinatorSimpleSelectorSequenceNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimCombinatorSimpleSelectorSequenceNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimCombinatorSimpleSelectorSequenceNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimCombinatorSimpleSelectorSequenceNode.AcceptNodeVisitor">
            <summary>设置 CombinatorSimpleSelectorSequenceNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimCombinatorSimpleSelectorSequenceNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimCombinatorSimpleSelectorSequenceNode.CombinatorGet">
            <summary>设置 CombinatorSimpleSelectorSequenceNode.get_Combinator() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimCombinatorSimpleSelectorSequenceNode.CombinatorSetCombinator">
            <summary>设置 CombinatorSimpleSelectorSequenceNode.set_Combinator(Combinator value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimCombinatorSimpleSelectorSequenceNode.ConstructorCombinatorSimpleSelectorSequenceNode">
            <summary>设置 CombinatorSimpleSelectorSequenceNode.CombinatorSimpleSelectorSequenceNode(Combinator combinator, SimpleSelectorSequenceNode simpleSelectorSequenceNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimCombinatorSimpleSelectorSequenceNode.SimpleSelectorSequenceNodeGet">
            <summary>设置 CombinatorSimpleSelectorSequenceNode.get_SimpleSelectorSequenceNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimCombinatorSimpleSelectorSequenceNode.SimpleSelectorSequenceNodeSetSimpleSelectorSequenceNode">
            <summary>设置 CombinatorSimpleSelectorSequenceNode.set_SimpleSelectorSequenceNode(SimpleSelectorSequenceNode value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Fakes.ShimCombinatorSimpleSelectorSequenceNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimCombinatorSimpleSelectorSequenceNode.AllInstances.AcceptNodeVisitor">
            <summary>设置 CombinatorSimpleSelectorSequenceNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimCombinatorSimpleSelectorSequenceNode.AllInstances.CombinatorGet">
            <summary>设置 CombinatorSimpleSelectorSequenceNode.get_Combinator() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimCombinatorSimpleSelectorSequenceNode.AllInstances.CombinatorSetCombinator">
            <summary>设置 CombinatorSimpleSelectorSequenceNode.set_Combinator(Combinator value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimCombinatorSimpleSelectorSequenceNode.AllInstances.SimpleSelectorSequenceNodeGet">
            <summary>设置 CombinatorSimpleSelectorSequenceNode.get_SimpleSelectorSequenceNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimCombinatorSimpleSelectorSequenceNode.AllInstances.SimpleSelectorSequenceNodeSetSimpleSelectorSequenceNode">
            <summary>设置 CombinatorSimpleSelectorSequenceNode.set_SimpleSelectorSequenceNode(SimpleSelectorSequenceNode value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Fakes.ShimDeclarationNode">
            <summary>WebGrease.Css.Ast.DeclarationNode 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimDeclarationNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimDeclarationNode.#ctor(WebGrease.Css.Ast.DeclarationNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimDeclarationNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimDeclarationNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimDeclarationNode.AcceptNodeVisitor">
            <summary>设置 DeclarationNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimDeclarationNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimDeclarationNode.ConstructorStringExprNodeString">
            <summary>设置 DeclarationNode.DeclarationNode(String property, ExprNode exprNode, String prio) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimDeclarationNode.ExprNodeGet">
            <summary>设置 DeclarationNode.get_ExprNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimDeclarationNode.ExprNodeSetExprNode">
            <summary>设置 DeclarationNode.set_ExprNode(ExprNode value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimDeclarationNode.PrioGet">
            <summary>设置 DeclarationNode.get_Prio() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimDeclarationNode.PrioSetString">
            <summary>设置 DeclarationNode.set_Prio(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimDeclarationNode.PropertyGet">
            <summary>设置 DeclarationNode.get_Property() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimDeclarationNode.PropertySetString">
            <summary>设置 DeclarationNode.set_Property(String value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Fakes.ShimDeclarationNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimDeclarationNode.AllInstances.AcceptNodeVisitor">
            <summary>设置 DeclarationNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimDeclarationNode.AllInstances.ExprNodeGet">
            <summary>设置 DeclarationNode.get_ExprNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimDeclarationNode.AllInstances.ExprNodeSetExprNode">
            <summary>设置 DeclarationNode.set_ExprNode(ExprNode value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimDeclarationNode.AllInstances.PrioGet">
            <summary>设置 DeclarationNode.get_Prio() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimDeclarationNode.AllInstances.PrioSetString">
            <summary>设置 DeclarationNode.set_Prio(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimDeclarationNode.AllInstances.PropertyGet">
            <summary>设置 DeclarationNode.get_Property() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimDeclarationNode.AllInstances.PropertySetString">
            <summary>设置 DeclarationNode.set_Property(String value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Fakes.ShimDocumentQueryNode">
            <summary>WebGrease.Css.Ast.DocumentQueryNode 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimDocumentQueryNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimDocumentQueryNode.#ctor(WebGrease.Css.Ast.DocumentQueryNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimDocumentQueryNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimDocumentQueryNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimDocumentQueryNode.AcceptNodeVisitor">
            <summary>设置 DocumentQueryNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimDocumentQueryNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimDocumentQueryNode.ConstructorStringStringReadOnlyCollectionOfRulesetNode">
            <summary>设置 DocumentQueryNode.DocumentQueryNode(String matchFunctionName, String documentSymbol, ReadOnlyCollection`1&lt;RulesetNode&gt; rulesets) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimDocumentQueryNode.DocumentSymbolGet">
            <summary>设置 DocumentQueryNode.get_DocumentSymbol() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimDocumentQueryNode.DocumentSymbolSetString">
            <summary>设置 DocumentQueryNode.set_DocumentSymbol(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimDocumentQueryNode.MatchFunctionNameGet">
            <summary>设置 DocumentQueryNode.get_MatchFunctionName() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimDocumentQueryNode.MatchFunctionNameSetString">
            <summary>设置 DocumentQueryNode.set_MatchFunctionName(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimDocumentQueryNode.RulesetsGet">
            <summary>设置 DocumentQueryNode.get_Rulesets() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimDocumentQueryNode.RulesetsSetReadOnlyCollectionOfRulesetNode">
            <summary>设置 DocumentQueryNode.set_Rulesets(ReadOnlyCollection`1&lt;RulesetNode&gt; value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Fakes.ShimDocumentQueryNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimDocumentQueryNode.AllInstances.AcceptNodeVisitor">
            <summary>设置 DocumentQueryNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimDocumentQueryNode.AllInstances.DocumentSymbolGet">
            <summary>设置 DocumentQueryNode.get_DocumentSymbol() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimDocumentQueryNode.AllInstances.DocumentSymbolSetString">
            <summary>设置 DocumentQueryNode.set_DocumentSymbol(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimDocumentQueryNode.AllInstances.MatchFunctionNameGet">
            <summary>设置 DocumentQueryNode.get_MatchFunctionName() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimDocumentQueryNode.AllInstances.MatchFunctionNameSetString">
            <summary>设置 DocumentQueryNode.set_MatchFunctionName(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimDocumentQueryNode.AllInstances.RulesetsGet">
            <summary>设置 DocumentQueryNode.get_Rulesets() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimDocumentQueryNode.AllInstances.RulesetsSetReadOnlyCollectionOfRulesetNode">
            <summary>设置 DocumentQueryNode.set_Rulesets(ReadOnlyCollection`1&lt;RulesetNode&gt; value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Fakes.ShimExprNode">
            <summary>WebGrease.Css.Ast.ExprNode 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimExprNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimExprNode.#ctor(WebGrease.Css.Ast.ExprNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimExprNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimExprNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimExprNode.AcceptNodeVisitor">
            <summary>设置 ExprNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimExprNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimExprNode.ConstructorTermNodeReadOnlyCollectionOfTermWithOperatorNode">
            <summary>设置 ExprNode.ExprNode(TermNode termNode, ReadOnlyCollection`1&lt;TermWithOperatorNode&gt; termsWithOperators) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimExprNode.TermNodeGet">
            <summary>设置 ExprNode.get_TermNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimExprNode.TermNodeSetTermNode">
            <summary>设置 ExprNode.set_TermNode(TermNode value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimExprNode.TermsWithOperatorsGet">
            <summary>设置 ExprNode.get_TermsWithOperators() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimExprNode.TermsWithOperatorsSetReadOnlyCollectionOfTermWithOperatorNode">
            <summary>设置 ExprNode.set_TermsWithOperators(ReadOnlyCollection`1&lt;TermWithOperatorNode&gt; value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Fakes.ShimExprNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimExprNode.AllInstances.AcceptNodeVisitor">
            <summary>设置 ExprNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimExprNode.AllInstances.TermNodeGet">
            <summary>设置 ExprNode.get_TermNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimExprNode.AllInstances.TermNodeSetTermNode">
            <summary>设置 ExprNode.set_TermNode(TermNode value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimExprNode.AllInstances.TermsWithOperatorsGet">
            <summary>设置 ExprNode.get_TermsWithOperators() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimExprNode.AllInstances.TermsWithOperatorsSetReadOnlyCollectionOfTermWithOperatorNode">
            <summary>设置 ExprNode.set_TermsWithOperators(ReadOnlyCollection`1&lt;TermWithOperatorNode&gt; value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Fakes.ShimFunctionNode">
            <summary>WebGrease.Css.Ast.FunctionNode 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimFunctionNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimFunctionNode.#ctor(WebGrease.Css.Ast.FunctionNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimFunctionNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimFunctionNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimFunctionNode.AcceptNodeVisitor">
            <summary>设置 FunctionNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimFunctionNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimFunctionNode.ConstructorStringExprNode">
            <summary>设置 FunctionNode.FunctionNode(String functionName, ExprNode exprNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimFunctionNode.ExprNodeGet">
            <summary>设置 FunctionNode.get_ExprNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimFunctionNode.ExprNodeSetExprNode">
            <summary>设置 FunctionNode.set_ExprNode(ExprNode value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimFunctionNode.FunctionNameGet">
            <summary>设置 FunctionNode.get_FunctionName() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimFunctionNode.FunctionNameSetString">
            <summary>设置 FunctionNode.set_FunctionName(String value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Fakes.ShimFunctionNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimFunctionNode.AllInstances.AcceptNodeVisitor">
            <summary>设置 FunctionNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimFunctionNode.AllInstances.ExprNodeGet">
            <summary>设置 FunctionNode.get_ExprNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimFunctionNode.AllInstances.ExprNodeSetExprNode">
            <summary>设置 FunctionNode.set_ExprNode(ExprNode value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimFunctionNode.AllInstances.FunctionNameGet">
            <summary>设置 FunctionNode.get_FunctionName() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimFunctionNode.AllInstances.FunctionNameSetString">
            <summary>设置 FunctionNode.set_FunctionName(String value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Fakes.ShimImportNode">
            <summary>WebGrease.Css.Ast.ImportNode 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimImportNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimImportNode.#ctor(WebGrease.Css.Ast.ImportNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimImportNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimImportNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimImportNode.AcceptNodeVisitor">
            <summary>设置 ImportNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimImportNode.AllowedImportDataTypeGet">
            <summary>设置 ImportNode.get_AllowedImportDataType() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimImportNode.AllowedImportDataTypeSetAllowedImportData">
            <summary>设置 ImportNode.set_AllowedImportDataType(AllowedImportData value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimImportNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimImportNode.ConstructorAllowedImportDataStringReadOnlyCollectionOfMediaQueryNode">
            <summary>设置 ImportNode.ImportNode(AllowedImportData allowedImportDataType, String importDataValue, ReadOnlyCollection`1&lt;MediaQueryNode&gt; mediaQueries) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimImportNode.ImportDataValueGet">
            <summary>设置 ImportNode.get_ImportDataValue() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimImportNode.ImportDataValueSetString">
            <summary>设置 ImportNode.set_ImportDataValue(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimImportNode.MediaQueriesGet">
            <summary>设置 ImportNode.get_MediaQueries() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimImportNode.MediaQueriesSetReadOnlyCollectionOfMediaQueryNode">
            <summary>设置 ImportNode.set_MediaQueries(ReadOnlyCollection`1&lt;MediaQueryNode&gt; value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Fakes.ShimImportNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimImportNode.AllInstances.AcceptNodeVisitor">
            <summary>设置 ImportNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimImportNode.AllInstances.AllowedImportDataTypeGet">
            <summary>设置 ImportNode.get_AllowedImportDataType() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimImportNode.AllInstances.AllowedImportDataTypeSetAllowedImportData">
            <summary>设置 ImportNode.set_AllowedImportDataType(AllowedImportData value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimImportNode.AllInstances.ImportDataValueGet">
            <summary>设置 ImportNode.get_ImportDataValue() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimImportNode.AllInstances.ImportDataValueSetString">
            <summary>设置 ImportNode.set_ImportDataValue(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimImportNode.AllInstances.MediaQueriesGet">
            <summary>设置 ImportNode.get_MediaQueries() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimImportNode.AllInstances.MediaQueriesSetReadOnlyCollectionOfMediaQueryNode">
            <summary>设置 ImportNode.set_MediaQueries(ReadOnlyCollection`1&lt;MediaQueryNode&gt; value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Fakes.ShimNamespaceNode">
            <summary>WebGrease.Css.Ast.NamespaceNode 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimNamespaceNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimNamespaceNode.#ctor(WebGrease.Css.Ast.NamespaceNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimNamespaceNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimNamespaceNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimNamespaceNode.AcceptNodeVisitor">
            <summary>设置 NamespaceNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimNamespaceNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimNamespaceNode.ConstructorStringString">
            <summary>设置 NamespaceNode.NamespaceNode(String prefix, String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimNamespaceNode.PrefixGet">
            <summary>设置 NamespaceNode.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimNamespaceNode.PrefixSetString">
            <summary>设置 NamespaceNode.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimNamespaceNode.ValueGet">
            <summary>设置 NamespaceNode.get_Value() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimNamespaceNode.ValueSetString">
            <summary>设置 NamespaceNode.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Fakes.ShimNamespaceNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimNamespaceNode.AllInstances.AcceptNodeVisitor">
            <summary>设置 NamespaceNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimNamespaceNode.AllInstances.PrefixGet">
            <summary>设置 NamespaceNode.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimNamespaceNode.AllInstances.PrefixSetString">
            <summary>设置 NamespaceNode.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimNamespaceNode.AllInstances.ValueGet">
            <summary>设置 NamespaceNode.get_Value() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimNamespaceNode.AllInstances.ValueSetString">
            <summary>设置 NamespaceNode.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Fakes.ShimPageNode">
            <summary>WebGrease.Css.Ast.PageNode 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimPageNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimPageNode.#ctor(WebGrease.Css.Ast.PageNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimPageNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimPageNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimPageNode.AcceptNodeVisitor">
            <summary>设置 PageNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimPageNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimPageNode.ConstructorStringReadOnlyCollectionOfDeclarationNode">
            <summary>设置 PageNode.PageNode(String pseudoPage, ReadOnlyCollection`1&lt;DeclarationNode&gt; declarations) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimPageNode.DeclarationsGet">
            <summary>设置 PageNode.get_Declarations() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimPageNode.DeclarationsSetReadOnlyCollectionOfDeclarationNode">
            <summary>设置 PageNode.set_Declarations(ReadOnlyCollection`1&lt;DeclarationNode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimPageNode.PseudoPageGet">
            <summary>设置 PageNode.get_PseudoPage() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimPageNode.PseudoPageSetString">
            <summary>设置 PageNode.set_PseudoPage(String value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Fakes.ShimPageNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimPageNode.AllInstances.AcceptNodeVisitor">
            <summary>设置 PageNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimPageNode.AllInstances.DeclarationsGet">
            <summary>设置 PageNode.get_Declarations() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimPageNode.AllInstances.DeclarationsSetReadOnlyCollectionOfDeclarationNode">
            <summary>设置 PageNode.set_Declarations(ReadOnlyCollection`1&lt;DeclarationNode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimPageNode.AllInstances.PseudoPageGet">
            <summary>设置 PageNode.get_PseudoPage() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimPageNode.AllInstances.PseudoPageSetString">
            <summary>设置 PageNode.set_PseudoPage(String value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Fakes.ShimRulesetNode">
            <summary>WebGrease.Css.Ast.RulesetNode 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimRulesetNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimRulesetNode.#ctor(WebGrease.Css.Ast.RulesetNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimRulesetNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimRulesetNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimRulesetNode.AcceptNodeVisitor">
            <summary>设置 RulesetNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimRulesetNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimRulesetNode.ConstructorSelectorsGroupNodeReadOnlyCollectionOfDeclarationNode">
            <summary>设置 RulesetNode.RulesetNode(SelectorsGroupNode selectorsGroupNode, ReadOnlyCollection`1&lt;DeclarationNode&gt; declarations) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimRulesetNode.DeclarationsGet">
            <summary>设置 RulesetNode.get_Declarations() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimRulesetNode.DeclarationsSetReadOnlyCollectionOfDeclarationNode">
            <summary>设置 RulesetNode.set_Declarations(ReadOnlyCollection`1&lt;DeclarationNode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimRulesetNode.SelectorsGroupNodeGet">
            <summary>设置 RulesetNode.get_SelectorsGroupNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimRulesetNode.SelectorsGroupNodeSetSelectorsGroupNode">
            <summary>设置 RulesetNode.set_SelectorsGroupNode(SelectorsGroupNode value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Fakes.ShimRulesetNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimRulesetNode.AllInstances.AcceptNodeVisitor">
            <summary>设置 RulesetNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimRulesetNode.AllInstances.DeclarationsGet">
            <summary>设置 RulesetNode.get_Declarations() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimRulesetNode.AllInstances.DeclarationsSetReadOnlyCollectionOfDeclarationNode">
            <summary>设置 RulesetNode.set_Declarations(ReadOnlyCollection`1&lt;DeclarationNode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimRulesetNode.AllInstances.SelectorsGroupNodeGet">
            <summary>设置 RulesetNode.get_SelectorsGroupNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimRulesetNode.AllInstances.SelectorsGroupNodeSetSelectorsGroupNode">
            <summary>设置 RulesetNode.set_SelectorsGroupNode(SelectorsGroupNode value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Fakes.ShimStyleSheetNode">
            <summary>WebGrease.Css.Ast.StyleSheetNode 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimStyleSheetNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimStyleSheetNode.#ctor(WebGrease.Css.Ast.StyleSheetNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimStyleSheetNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimStyleSheetNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimStyleSheetNode.AcceptNodeVisitor">
            <summary>设置 StyleSheetNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimStyleSheetNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimStyleSheetNode.CharSetStringGet">
            <summary>设置 StyleSheetNode.get_CharSetString() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimStyleSheetNode.CharSetStringSetString">
            <summary>设置 StyleSheetNode.set_CharSetString(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimStyleSheetNode.ConstructorStringNullableOfDoubleReadOnlyCollectionOfImportNodeReadOnlyCollectionOfNamespaceNodeReadOnlyCollectionOfStyleSheetRuleNode">
            <summary>设置 StyleSheetNode.StyleSheetNode(String charSet, Nullable`1&lt;Double&gt; dpi, ReadOnlyCollection`1&lt;ImportNode&gt; imports, ReadOnlyCollection`1&lt;NamespaceNode&gt; namespaces, ReadOnlyCollection`1&lt;StyleSheetRuleNode&gt; styleSheetRules) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimStyleSheetNode.DpiGet">
            <summary>设置 StyleSheetNode.get_Dpi() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimStyleSheetNode.DpiSetNullableOfDouble">
            <summary>设置 StyleSheetNode.set_Dpi(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimStyleSheetNode.ImportsGet">
            <summary>设置 StyleSheetNode.get_Imports() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimStyleSheetNode.ImportsSetReadOnlyCollectionOfImportNode">
            <summary>设置 StyleSheetNode.set_Imports(ReadOnlyCollection`1&lt;ImportNode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimStyleSheetNode.NamespacesGet">
            <summary>设置 StyleSheetNode.get_Namespaces() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimStyleSheetNode.NamespacesSetReadOnlyCollectionOfNamespaceNode">
            <summary>设置 StyleSheetNode.set_Namespaces(ReadOnlyCollection`1&lt;NamespaceNode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimStyleSheetNode.StyleSheetRulesGet">
            <summary>设置 StyleSheetNode.get_StyleSheetRules() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimStyleSheetNode.StyleSheetRulesSetReadOnlyCollectionOfStyleSheetRuleNode">
            <summary>设置 StyleSheetNode.set_StyleSheetRules(ReadOnlyCollection`1&lt;StyleSheetRuleNode&gt; value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Fakes.ShimStyleSheetNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimStyleSheetNode.AllInstances.AcceptNodeVisitor">
            <summary>设置 StyleSheetNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimStyleSheetNode.AllInstances.CharSetStringGet">
            <summary>设置 StyleSheetNode.get_CharSetString() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimStyleSheetNode.AllInstances.CharSetStringSetString">
            <summary>设置 StyleSheetNode.set_CharSetString(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimStyleSheetNode.AllInstances.DpiGet">
            <summary>设置 StyleSheetNode.get_Dpi() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimStyleSheetNode.AllInstances.DpiSetNullableOfDouble">
            <summary>设置 StyleSheetNode.set_Dpi(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimStyleSheetNode.AllInstances.ImportsGet">
            <summary>设置 StyleSheetNode.get_Imports() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimStyleSheetNode.AllInstances.ImportsSetReadOnlyCollectionOfImportNode">
            <summary>设置 StyleSheetNode.set_Imports(ReadOnlyCollection`1&lt;ImportNode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimStyleSheetNode.AllInstances.NamespacesGet">
            <summary>设置 StyleSheetNode.get_Namespaces() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimStyleSheetNode.AllInstances.NamespacesSetReadOnlyCollectionOfNamespaceNode">
            <summary>设置 StyleSheetNode.set_Namespaces(ReadOnlyCollection`1&lt;NamespaceNode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimStyleSheetNode.AllInstances.StyleSheetRulesGet">
            <summary>设置 StyleSheetNode.get_StyleSheetRules() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimStyleSheetNode.AllInstances.StyleSheetRulesSetReadOnlyCollectionOfStyleSheetRuleNode">
            <summary>设置 StyleSheetNode.set_StyleSheetRules(ReadOnlyCollection`1&lt;StyleSheetRuleNode&gt; value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Fakes.ShimStyleSheetRuleNode">
            <summary>WebGrease.Css.Ast.StyleSheetRuleNode 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimStyleSheetRuleNode.#ctor(WebGrease.Css.Ast.StyleSheetRuleNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimStyleSheetRuleNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimStyleSheetRuleNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimStyleSheetRuleNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimStyleSheetRuleNode.Constructor">
            <summary>设置 StyleSheetRuleNode.StyleSheetRuleNode() 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Fakes.ShimStyleSheetRuleNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Fakes.ShimTermNode">
            <summary>WebGrease.Css.Ast.TermNode 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimTermNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimTermNode.#ctor(WebGrease.Css.Ast.TermNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimTermNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimTermNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermNode.AcceptNodeVisitor">
            <summary>设置 TermNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermNode.ConstructorStringStringStringStringFunctionNode">
            <summary>设置 TermNode.TermNode(String unaryOperator, String numberBasedValue, String stringBasedValue, String hexColor, FunctionNode functionNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermNode.FunctionNodeGet">
            <summary>设置 TermNode.get_FunctionNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermNode.FunctionNodeSetFunctionNode">
            <summary>设置 TermNode.set_FunctionNode(FunctionNode value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermNode.HexcolorGet">
            <summary>设置 TermNode.get_Hexcolor() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermNode.HexcolorSetString">
            <summary>设置 TermNode.set_Hexcolor(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermNode.NumberBasedValueGet">
            <summary>设置 TermNode.get_NumberBasedValue() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermNode.NumberBasedValueSetString">
            <summary>设置 TermNode.set_NumberBasedValue(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermNode.StringBasedValueGet">
            <summary>设置 TermNode.get_StringBasedValue() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermNode.StringBasedValueSetString">
            <summary>设置 TermNode.set_StringBasedValue(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermNode.UnaryOperatorGet">
            <summary>设置 TermNode.get_UnaryOperator() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermNode.UnaryOperatorSetString">
            <summary>设置 TermNode.set_UnaryOperator(String value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Fakes.ShimTermNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermNode.AllInstances.AcceptNodeVisitor">
            <summary>设置 TermNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermNode.AllInstances.FunctionNodeGet">
            <summary>设置 TermNode.get_FunctionNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermNode.AllInstances.FunctionNodeSetFunctionNode">
            <summary>设置 TermNode.set_FunctionNode(FunctionNode value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermNode.AllInstances.HexcolorGet">
            <summary>设置 TermNode.get_Hexcolor() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermNode.AllInstances.HexcolorSetString">
            <summary>设置 TermNode.set_Hexcolor(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermNode.AllInstances.NumberBasedValueGet">
            <summary>设置 TermNode.get_NumberBasedValue() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermNode.AllInstances.NumberBasedValueSetString">
            <summary>设置 TermNode.set_NumberBasedValue(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermNode.AllInstances.StringBasedValueGet">
            <summary>设置 TermNode.get_StringBasedValue() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermNode.AllInstances.StringBasedValueSetString">
            <summary>设置 TermNode.set_StringBasedValue(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermNode.AllInstances.UnaryOperatorGet">
            <summary>设置 TermNode.get_UnaryOperator() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermNode.AllInstances.UnaryOperatorSetString">
            <summary>设置 TermNode.set_UnaryOperator(String value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Fakes.ShimTermWithOperatorNode">
            <summary>WebGrease.Css.Ast.TermWithOperatorNode 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimTermWithOperatorNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimTermWithOperatorNode.#ctor(WebGrease.Css.Ast.TermWithOperatorNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimTermWithOperatorNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.ShimTermWithOperatorNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermWithOperatorNode.AcceptNodeVisitor">
            <summary>设置 TermWithOperatorNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermWithOperatorNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermWithOperatorNode.ConstructorStringTermNode">
            <summary>设置 TermWithOperatorNode.TermWithOperatorNode(String op, TermNode termNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermWithOperatorNode.OperatorGet">
            <summary>设置 TermWithOperatorNode.get_Operator() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermWithOperatorNode.OperatorSetString">
            <summary>设置 TermWithOperatorNode.set_Operator(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermWithOperatorNode.TermNodeGet">
            <summary>设置 TermWithOperatorNode.get_TermNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermWithOperatorNode.TermNodeSetTermNode">
            <summary>设置 TermWithOperatorNode.set_TermNode(TermNode value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Fakes.ShimTermWithOperatorNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermWithOperatorNode.AllInstances.AcceptNodeVisitor">
            <summary>设置 TermWithOperatorNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermWithOperatorNode.AllInstances.OperatorGet">
            <summary>设置 TermWithOperatorNode.get_Operator() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermWithOperatorNode.AllInstances.OperatorSetString">
            <summary>设置 TermWithOperatorNode.set_Operator(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermWithOperatorNode.AllInstances.TermNodeGet">
            <summary>设置 TermWithOperatorNode.get_TermNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.ShimTermWithOperatorNode.AllInstances.TermNodeSetTermNode">
            <summary>设置 TermWithOperatorNode.set_TermNode(TermNode value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Fakes.StubAstException">
            <summary>WebGrease.Css.Ast.AstException 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.StubAstException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.StubAstException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.StubAstException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.StubAstException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.StubAstException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubAstException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.StubAstException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubAstException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:WebGrease.Css.Ast.Fakes.StubAstException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.StubAstException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Ast.Fakes.StubAstException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.StubAstException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Ast.Fakes.StubAstException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Ast.Fakes.StubAstException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Ast.Fakes.StubAstException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.StubAstException.InitializeStub">
            <summary>初始化 type StubAstException 的新实例</summary>
        </member>
        <member name="F:WebGrease.Css.Ast.Fakes.StubAstException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Ast.Fakes.StubAstException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Ast.Fakes.StubAstException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Ast.Fakes.StubAstException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.StubAstException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Ast.Fakes.StubAstException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.StubAstException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.StubAstException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.StubAstException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.StubAstException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.StubAstException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.StubAstException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.StubAstException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.StubAstException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Fakes.StubAstNode">
            <summary>WebGrease.Css.Ast.AstNode 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.StubAstNode.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.StubAstNode.Accept(WebGrease.Css.Visitor.NodeVisitor)">
            <summary>设置 AstNode.Accept(NodeVisitor nodeVisitor) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Ast.Fakes.StubAstNode.AcceptNodeVisitor">
            <summary>设置 AstNode.Accept(NodeVisitor nodeVisitor) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.StubAstNode.InitializeStub">
            <summary>初始化 type StubAstNode 的新实例</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.StubAstNode.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.StubAstNode.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.StubAstNode.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Fakes.StubStyleSheetRuleNode">
            <summary>WebGrease.Css.Ast.StyleSheetRuleNode 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.StubStyleSheetRuleNode.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.StubStyleSheetRuleNode.Accept(WebGrease.Css.Visitor.NodeVisitor)">
            <summary>设置 AstNode.Accept(NodeVisitor nodeVisitor) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Ast.Fakes.StubStyleSheetRuleNode.AcceptNodeVisitor">
            <summary>设置 AstNode.Accept(NodeVisitor nodeVisitor) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Fakes.StubStyleSheetRuleNode.InitializeStub">
            <summary>初始化 type StubStyleSheetRuleNode 的新实例</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.StubStyleSheetRuleNode.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.StubStyleSheetRuleNode.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Fakes.StubStyleSheetRuleNode.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaExpressionNode">
            <summary>WebGrease.Css.Ast.MediaQuery.MediaExpressionNode 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaExpressionNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaExpressionNode.#ctor(WebGrease.Css.Ast.MediaQuery.MediaExpressionNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaExpressionNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaExpressionNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaExpressionNode.AcceptNodeVisitor">
            <summary>设置 MediaExpressionNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaExpressionNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaExpressionNode.ConstructorStringExprNode">
            <summary>设置 MediaExpressionNode.MediaExpressionNode(String mediaFeature, ExprNode exprNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaExpressionNode.ExprNodeGet">
            <summary>设置 MediaExpressionNode.get_ExprNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaExpressionNode.ExprNodeSetExprNode">
            <summary>设置 MediaExpressionNode.set_ExprNode(ExprNode value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaExpressionNode.MediaFeatureGet">
            <summary>设置 MediaExpressionNode.get_MediaFeature() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaExpressionNode.MediaFeatureSetString">
            <summary>设置 MediaExpressionNode.set_MediaFeature(String value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaExpressionNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaExpressionNode.AllInstances.AcceptNodeVisitor">
            <summary>设置 MediaExpressionNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaExpressionNode.AllInstances.ExprNodeGet">
            <summary>设置 MediaExpressionNode.get_ExprNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaExpressionNode.AllInstances.ExprNodeSetExprNode">
            <summary>设置 MediaExpressionNode.set_ExprNode(ExprNode value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaExpressionNode.AllInstances.MediaFeatureGet">
            <summary>设置 MediaExpressionNode.get_MediaFeature() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaExpressionNode.AllInstances.MediaFeatureSetString">
            <summary>设置 MediaExpressionNode.set_MediaFeature(String value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaNode">
            <summary>WebGrease.Css.Ast.MediaQuery.MediaNode 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaNode.#ctor(WebGrease.Css.Ast.MediaQuery.MediaNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaNode.AcceptNodeVisitor">
            <summary>设置 MediaNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaNode.ConstructorReadOnlyCollectionOfMediaQueryNodeReadOnlyCollectionOfRulesetNodeReadOnlyCollectionOfPageNode">
            <summary>设置 MediaNode.MediaNode(ReadOnlyCollection`1&lt;MediaQueryNode&gt; mediaQueries, ReadOnlyCollection`1&lt;RulesetNode&gt; rulesets, ReadOnlyCollection`1&lt;PageNode&gt; pages) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaNode.MediaQueriesGet">
            <summary>设置 MediaNode.get_MediaQueries() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaNode.MediaQueriesSetReadOnlyCollectionOfMediaQueryNode">
            <summary>设置 MediaNode.set_MediaQueries(ReadOnlyCollection`1&lt;MediaQueryNode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaNode.PageNodesGet">
            <summary>设置 MediaNode.get_PageNodes() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaNode.PageNodesSetReadOnlyCollectionOfPageNode">
            <summary>设置 MediaNode.set_PageNodes(ReadOnlyCollection`1&lt;PageNode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaNode.RulesetsGet">
            <summary>设置 MediaNode.get_Rulesets() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaNode.RulesetsSetReadOnlyCollectionOfRulesetNode">
            <summary>设置 MediaNode.set_Rulesets(ReadOnlyCollection`1&lt;RulesetNode&gt; value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaNode.AllInstances.AcceptNodeVisitor">
            <summary>设置 MediaNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaNode.AllInstances.MediaQueriesGet">
            <summary>设置 MediaNode.get_MediaQueries() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaNode.AllInstances.MediaQueriesSetReadOnlyCollectionOfMediaQueryNode">
            <summary>设置 MediaNode.set_MediaQueries(ReadOnlyCollection`1&lt;MediaQueryNode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaNode.AllInstances.PageNodesGet">
            <summary>设置 MediaNode.get_PageNodes() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaNode.AllInstances.PageNodesSetReadOnlyCollectionOfPageNode">
            <summary>设置 MediaNode.set_PageNodes(ReadOnlyCollection`1&lt;PageNode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaNode.AllInstances.RulesetsGet">
            <summary>设置 MediaNode.get_Rulesets() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaNode.AllInstances.RulesetsSetReadOnlyCollectionOfRulesetNode">
            <summary>设置 MediaNode.set_Rulesets(ReadOnlyCollection`1&lt;RulesetNode&gt; value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaQueryNode">
            <summary>WebGrease.Css.Ast.MediaQuery.MediaQueryNode 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaQueryNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaQueryNode.#ctor(WebGrease.Css.Ast.MediaQuery.MediaQueryNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaQueryNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaQueryNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaQueryNode.AcceptNodeVisitor">
            <summary>设置 MediaQueryNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaQueryNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaQueryNode.ConstructorStringStringStringReadOnlyCollectionOfMediaExpressionNode">
            <summary>设置 MediaQueryNode.MediaQueryNode(String onlyText, String notText, String mediaType, ReadOnlyCollection`1&lt;MediaExpressionNode&gt; mediaExpressions) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaQueryNode.MediaExpressionsGet">
            <summary>设置 MediaQueryNode.get_MediaExpressions() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaQueryNode.MediaExpressionsSetReadOnlyCollectionOfMediaExpressionNode">
            <summary>设置 MediaQueryNode.set_MediaExpressions(ReadOnlyCollection`1&lt;MediaExpressionNode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaQueryNode.MediaTypeGet">
            <summary>设置 MediaQueryNode.get_MediaType() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaQueryNode.MediaTypeSetString">
            <summary>设置 MediaQueryNode.set_MediaType(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaQueryNode.NotTextGet">
            <summary>设置 MediaQueryNode.get_NotText() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaQueryNode.NotTextSetString">
            <summary>设置 MediaQueryNode.set_NotText(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaQueryNode.OnlyTextGet">
            <summary>设置 MediaQueryNode.get_OnlyText() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaQueryNode.OnlyTextSetString">
            <summary>设置 MediaQueryNode.set_OnlyText(String value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaQueryNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaQueryNode.AllInstances.AcceptNodeVisitor">
            <summary>设置 MediaQueryNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaQueryNode.AllInstances.MediaExpressionsGet">
            <summary>设置 MediaQueryNode.get_MediaExpressions() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaQueryNode.AllInstances.MediaExpressionsSetReadOnlyCollectionOfMediaExpressionNode">
            <summary>设置 MediaQueryNode.set_MediaExpressions(ReadOnlyCollection`1&lt;MediaExpressionNode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaQueryNode.AllInstances.MediaTypeGet">
            <summary>设置 MediaQueryNode.get_MediaType() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaQueryNode.AllInstances.MediaTypeSetString">
            <summary>设置 MediaQueryNode.set_MediaType(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaQueryNode.AllInstances.NotTextGet">
            <summary>设置 MediaQueryNode.get_NotText() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaQueryNode.AllInstances.NotTextSetString">
            <summary>设置 MediaQueryNode.set_NotText(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaQueryNode.AllInstances.OnlyTextGet">
            <summary>设置 MediaQueryNode.get_OnlyText() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.MediaQuery.Fakes.ShimMediaQueryNode.AllInstances.OnlyTextSetString">
            <summary>设置 MediaQueryNode.set_OnlyText(String value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribNode">
            <summary>WebGrease.Css.Ast.Selectors.AttribNode 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribNode.#ctor(WebGrease.Css.Ast.Selectors.AttribNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribNode.AcceptNodeVisitor">
            <summary>设置 AttribNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribNode.ConstructorSelectorNamespacePrefixNodeStringAttribOperatorAndValueNode">
            <summary>设置 AttribNode.AttribNode(SelectorNamespacePrefixNode selectorNamespacePrefixNode, String identity, AttribOperatorAndValueNode attribOperatorAndValueNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribNode.IdentGet">
            <summary>设置 AttribNode.get_Ident() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribNode.IdentSetString">
            <summary>设置 AttribNode.set_Ident(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribNode.OperatorAndValueNodeGet">
            <summary>设置 AttribNode.get_OperatorAndValueNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribNode.OperatorAndValueNodeSetAttribOperatorAndValueNode">
            <summary>设置 AttribNode.set_OperatorAndValueNode(AttribOperatorAndValueNode value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribNode.SelectorNamespacePrefixNodeGet">
            <summary>设置 AttribNode.get_SelectorNamespacePrefixNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribNode.SelectorNamespacePrefixNodeSetSelectorNamespacePrefixNode">
            <summary>设置 AttribNode.set_SelectorNamespacePrefixNode(SelectorNamespacePrefixNode value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribNode.AllInstances.AcceptNodeVisitor">
            <summary>设置 AttribNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribNode.AllInstances.IdentGet">
            <summary>设置 AttribNode.get_Ident() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribNode.AllInstances.IdentSetString">
            <summary>设置 AttribNode.set_Ident(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribNode.AllInstances.OperatorAndValueNodeGet">
            <summary>设置 AttribNode.get_OperatorAndValueNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribNode.AllInstances.OperatorAndValueNodeSetAttribOperatorAndValueNode">
            <summary>设置 AttribNode.set_OperatorAndValueNode(AttribOperatorAndValueNode value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribNode.AllInstances.SelectorNamespacePrefixNodeGet">
            <summary>设置 AttribNode.get_SelectorNamespacePrefixNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribNode.AllInstances.SelectorNamespacePrefixNodeSetSelectorNamespacePrefixNode">
            <summary>设置 AttribNode.set_SelectorNamespacePrefixNode(SelectorNamespacePrefixNode value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribOperatorAndValueNode">
            <summary>WebGrease.Css.Ast.Selectors.AttribOperatorAndValueNode 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribOperatorAndValueNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribOperatorAndValueNode.#ctor(WebGrease.Css.Ast.Selectors.AttribOperatorAndValueNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribOperatorAndValueNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribOperatorAndValueNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribOperatorAndValueNode.AcceptNodeVisitor">
            <summary>设置 AttribOperatorAndValueNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribOperatorAndValueNode.AttribOperatorKindGet">
            <summary>设置 AttribOperatorAndValueNode.get_AttribOperatorKind() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribOperatorAndValueNode.AttribOperatorKindSetAttribOperatorKind">
            <summary>设置 AttribOperatorAndValueNode.set_AttribOperatorKind(AttribOperatorKind value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribOperatorAndValueNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribOperatorAndValueNode.ConstructorAttribOperatorKindString">
            <summary>设置 AttribOperatorAndValueNode.AttribOperatorAndValueNode(AttribOperatorKind operatorKind, String identityOrString) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribOperatorAndValueNode.IdentOrStringGet">
            <summary>设置 AttribOperatorAndValueNode.get_IdentOrString() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribOperatorAndValueNode.IdentOrStringSetString">
            <summary>设置 AttribOperatorAndValueNode.set_IdentOrString(String value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribOperatorAndValueNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribOperatorAndValueNode.AllInstances.AcceptNodeVisitor">
            <summary>设置 AttribOperatorAndValueNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribOperatorAndValueNode.AllInstances.AttribOperatorKindGet">
            <summary>设置 AttribOperatorAndValueNode.get_AttribOperatorKind() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribOperatorAndValueNode.AllInstances.AttribOperatorKindSetAttribOperatorKind">
            <summary>设置 AttribOperatorAndValueNode.set_AttribOperatorKind(AttribOperatorKind value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribOperatorAndValueNode.AllInstances.IdentOrStringGet">
            <summary>设置 AttribOperatorAndValueNode.get_IdentOrString() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimAttribOperatorAndValueNode.AllInstances.IdentOrStringSetString">
            <summary>设置 AttribOperatorAndValueNode.set_IdentOrString(String value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Selectors.Fakes.ShimFunctionalPseudoNode">
            <summary>WebGrease.Css.Ast.Selectors.FunctionalPseudoNode 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimFunctionalPseudoNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimFunctionalPseudoNode.#ctor(WebGrease.Css.Ast.Selectors.FunctionalPseudoNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimFunctionalPseudoNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimFunctionalPseudoNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimFunctionalPseudoNode.AcceptNodeVisitor">
            <summary>设置 FunctionalPseudoNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimFunctionalPseudoNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimFunctionalPseudoNode.ConstructorStringSelectorExpressionNode">
            <summary>设置 FunctionalPseudoNode.FunctionalPseudoNode(String functionName, SelectorExpressionNode selectorExpressionNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimFunctionalPseudoNode.FunctionNameGet">
            <summary>设置 FunctionalPseudoNode.get_FunctionName() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimFunctionalPseudoNode.FunctionNameSetString">
            <summary>设置 FunctionalPseudoNode.set_FunctionName(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimFunctionalPseudoNode.SelectorExpressionNodeGet">
            <summary>设置 FunctionalPseudoNode.get_SelectorExpressionNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimFunctionalPseudoNode.SelectorExpressionNodeSetSelectorExpressionNode">
            <summary>设置 FunctionalPseudoNode.set_SelectorExpressionNode(SelectorExpressionNode value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Selectors.Fakes.ShimFunctionalPseudoNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimFunctionalPseudoNode.AllInstances.AcceptNodeVisitor">
            <summary>设置 FunctionalPseudoNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimFunctionalPseudoNode.AllInstances.FunctionNameGet">
            <summary>设置 FunctionalPseudoNode.get_FunctionName() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimFunctionalPseudoNode.AllInstances.FunctionNameSetString">
            <summary>设置 FunctionalPseudoNode.set_FunctionName(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimFunctionalPseudoNode.AllInstances.SelectorExpressionNodeGet">
            <summary>设置 FunctionalPseudoNode.get_SelectorExpressionNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimFunctionalPseudoNode.AllInstances.SelectorExpressionNodeSetSelectorExpressionNode">
            <summary>设置 FunctionalPseudoNode.set_SelectorExpressionNode(SelectorExpressionNode value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Selectors.Fakes.ShimHashClassAtNameAttribPseudoNegationNode">
            <summary>WebGrease.Css.Ast.Selectors.HashClassAtNameAttribPseudoNegationNode 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimHashClassAtNameAttribPseudoNegationNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimHashClassAtNameAttribPseudoNegationNode.#ctor(WebGrease.Css.Ast.Selectors.HashClassAtNameAttribPseudoNegationNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimHashClassAtNameAttribPseudoNegationNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimHashClassAtNameAttribPseudoNegationNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimHashClassAtNameAttribPseudoNegationNode.AcceptNodeVisitor">
            <summary>设置 HashClassAtNameAttribPseudoNegationNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimHashClassAtNameAttribPseudoNegationNode.AtNameGet">
            <summary>设置 HashClassAtNameAttribPseudoNegationNode.get_AtName() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimHashClassAtNameAttribPseudoNegationNode.AtNameSetString">
            <summary>设置 HashClassAtNameAttribPseudoNegationNode.set_AtName(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimHashClassAtNameAttribPseudoNegationNode.AttribNodeGet">
            <summary>设置 HashClassAtNameAttribPseudoNegationNode.get_AttribNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimHashClassAtNameAttribPseudoNegationNode.AttribNodeSetAttribNode">
            <summary>设置 HashClassAtNameAttribPseudoNegationNode.set_AttribNode(AttribNode value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimHashClassAtNameAttribPseudoNegationNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimHashClassAtNameAttribPseudoNegationNode.ConstructorStringStringStringAttribNodePseudoNodeNegationNode">
            <summary>设置 HashClassAtNameAttribPseudoNegationNode.HashClassAtNameAttribPseudoNegationNode(String hash, String cssClass, String atName, AttribNode attribNode, PseudoNode pseudoNode, NegationNode negationNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimHashClassAtNameAttribPseudoNegationNode.CssClassGet">
            <summary>设置 HashClassAtNameAttribPseudoNegationNode.get_CssClass() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimHashClassAtNameAttribPseudoNegationNode.CssClassSetString">
            <summary>设置 HashClassAtNameAttribPseudoNegationNode.set_CssClass(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimHashClassAtNameAttribPseudoNegationNode.HashGet">
            <summary>设置 HashClassAtNameAttribPseudoNegationNode.get_Hash() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimHashClassAtNameAttribPseudoNegationNode.HashSetString">
            <summary>设置 HashClassAtNameAttribPseudoNegationNode.set_Hash(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimHashClassAtNameAttribPseudoNegationNode.NegationNodeGet">
            <summary>设置 HashClassAtNameAttribPseudoNegationNode.get_NegationNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimHashClassAtNameAttribPseudoNegationNode.NegationNodeSetNegationNode">
            <summary>设置 HashClassAtNameAttribPseudoNegationNode.set_NegationNode(NegationNode value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimHashClassAtNameAttribPseudoNegationNode.PseudoNodeGet">
            <summary>设置 HashClassAtNameAttribPseudoNegationNode.get_PseudoNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimHashClassAtNameAttribPseudoNegationNode.PseudoNodeSetPseudoNode">
            <summary>设置 HashClassAtNameAttribPseudoNegationNode.set_PseudoNode(PseudoNode value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Selectors.Fakes.ShimHashClassAtNameAttribPseudoNegationNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimHashClassAtNameAttribPseudoNegationNode.AllInstances.AcceptNodeVisitor">
            <summary>设置 HashClassAtNameAttribPseudoNegationNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimHashClassAtNameAttribPseudoNegationNode.AllInstances.AtNameGet">
            <summary>设置 HashClassAtNameAttribPseudoNegationNode.get_AtName() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimHashClassAtNameAttribPseudoNegationNode.AllInstances.AtNameSetString">
            <summary>设置 HashClassAtNameAttribPseudoNegationNode.set_AtName(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimHashClassAtNameAttribPseudoNegationNode.AllInstances.AttribNodeGet">
            <summary>设置 HashClassAtNameAttribPseudoNegationNode.get_AttribNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimHashClassAtNameAttribPseudoNegationNode.AllInstances.AttribNodeSetAttribNode">
            <summary>设置 HashClassAtNameAttribPseudoNegationNode.set_AttribNode(AttribNode value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimHashClassAtNameAttribPseudoNegationNode.AllInstances.CssClassGet">
            <summary>设置 HashClassAtNameAttribPseudoNegationNode.get_CssClass() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimHashClassAtNameAttribPseudoNegationNode.AllInstances.CssClassSetString">
            <summary>设置 HashClassAtNameAttribPseudoNegationNode.set_CssClass(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimHashClassAtNameAttribPseudoNegationNode.AllInstances.HashGet">
            <summary>设置 HashClassAtNameAttribPseudoNegationNode.get_Hash() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimHashClassAtNameAttribPseudoNegationNode.AllInstances.HashSetString">
            <summary>设置 HashClassAtNameAttribPseudoNegationNode.set_Hash(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimHashClassAtNameAttribPseudoNegationNode.AllInstances.NegationNodeGet">
            <summary>设置 HashClassAtNameAttribPseudoNegationNode.get_NegationNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimHashClassAtNameAttribPseudoNegationNode.AllInstances.NegationNodeSetNegationNode">
            <summary>设置 HashClassAtNameAttribPseudoNegationNode.set_NegationNode(NegationNode value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimHashClassAtNameAttribPseudoNegationNode.AllInstances.PseudoNodeGet">
            <summary>设置 HashClassAtNameAttribPseudoNegationNode.get_PseudoNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimHashClassAtNameAttribPseudoNegationNode.AllInstances.PseudoNodeSetPseudoNode">
            <summary>设置 HashClassAtNameAttribPseudoNegationNode.set_PseudoNode(PseudoNode value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationArgNode">
            <summary>WebGrease.Css.Ast.Selectors.NegationArgNode 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationArgNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationArgNode.#ctor(WebGrease.Css.Ast.Selectors.NegationArgNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationArgNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationArgNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationArgNode.AcceptNodeVisitor">
            <summary>设置 NegationArgNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationArgNode.AttribNodeGet">
            <summary>设置 NegationArgNode.get_AttribNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationArgNode.AttribNodeSetAttribNode">
            <summary>设置 NegationArgNode.set_AttribNode(AttribNode value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationArgNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationArgNode.ConstructorTypeSelectorNodeUniversalSelectorNodeStringStringAttribNodePseudoNode">
            <summary>设置 NegationArgNode.NegationArgNode(TypeSelectorNode typeSelectorNode, UniversalSelectorNode universalSelectorNode, String hash, String cssClass, AttribNode attribNode, PseudoNode pseudoNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationArgNode.CssClassGet">
            <summary>设置 NegationArgNode.get_CssClass() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationArgNode.CssClassSetString">
            <summary>设置 NegationArgNode.set_CssClass(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationArgNode.HashGet">
            <summary>设置 NegationArgNode.get_Hash() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationArgNode.HashSetString">
            <summary>设置 NegationArgNode.set_Hash(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationArgNode.PseudoNodeGet">
            <summary>设置 NegationArgNode.get_PseudoNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationArgNode.PseudoNodeSetPseudoNode">
            <summary>设置 NegationArgNode.set_PseudoNode(PseudoNode value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationArgNode.TypeSelectorNodeGet">
            <summary>设置 NegationArgNode.get_TypeSelectorNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationArgNode.TypeSelectorNodeSetTypeSelectorNode">
            <summary>设置 NegationArgNode.set_TypeSelectorNode(TypeSelectorNode value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationArgNode.UniversalSelectorNodeGet">
            <summary>设置 NegationArgNode.get_UniversalSelectorNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationArgNode.UniversalSelectorNodeSetUniversalSelectorNode">
            <summary>设置 NegationArgNode.set_UniversalSelectorNode(UniversalSelectorNode value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationArgNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationArgNode.AllInstances.AcceptNodeVisitor">
            <summary>设置 NegationArgNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationArgNode.AllInstances.AttribNodeGet">
            <summary>设置 NegationArgNode.get_AttribNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationArgNode.AllInstances.AttribNodeSetAttribNode">
            <summary>设置 NegationArgNode.set_AttribNode(AttribNode value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationArgNode.AllInstances.CssClassGet">
            <summary>设置 NegationArgNode.get_CssClass() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationArgNode.AllInstances.CssClassSetString">
            <summary>设置 NegationArgNode.set_CssClass(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationArgNode.AllInstances.HashGet">
            <summary>设置 NegationArgNode.get_Hash() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationArgNode.AllInstances.HashSetString">
            <summary>设置 NegationArgNode.set_Hash(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationArgNode.AllInstances.PseudoNodeGet">
            <summary>设置 NegationArgNode.get_PseudoNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationArgNode.AllInstances.PseudoNodeSetPseudoNode">
            <summary>设置 NegationArgNode.set_PseudoNode(PseudoNode value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationArgNode.AllInstances.TypeSelectorNodeGet">
            <summary>设置 NegationArgNode.get_TypeSelectorNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationArgNode.AllInstances.TypeSelectorNodeSetTypeSelectorNode">
            <summary>设置 NegationArgNode.set_TypeSelectorNode(TypeSelectorNode value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationArgNode.AllInstances.UniversalSelectorNodeGet">
            <summary>设置 NegationArgNode.get_UniversalSelectorNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationArgNode.AllInstances.UniversalSelectorNodeSetUniversalSelectorNode">
            <summary>设置 NegationArgNode.set_UniversalSelectorNode(UniversalSelectorNode value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationNode">
            <summary>WebGrease.Css.Ast.Selectors.NegationNode 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationNode.#ctor(WebGrease.Css.Ast.Selectors.NegationNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationNode.AcceptNodeVisitor">
            <summary>设置 NegationNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationNode.ConstructorNegationArgNode">
            <summary>设置 NegationNode.NegationNode(NegationArgNode negationArgNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationNode.NegationArgNodeGet">
            <summary>设置 NegationNode.get_NegationArgNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationNode.NegationArgNodeSetNegationArgNode">
            <summary>设置 NegationNode.set_NegationArgNode(NegationArgNode value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationNode.AllInstances.AcceptNodeVisitor">
            <summary>设置 NegationNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationNode.AllInstances.NegationArgNodeGet">
            <summary>设置 NegationNode.get_NegationArgNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimNegationNode.AllInstances.NegationArgNodeSetNegationArgNode">
            <summary>设置 NegationNode.set_NegationArgNode(NegationArgNode value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Selectors.Fakes.ShimPseudoNode">
            <summary>WebGrease.Css.Ast.Selectors.PseudoNode 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimPseudoNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimPseudoNode.#ctor(WebGrease.Css.Ast.Selectors.PseudoNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimPseudoNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimPseudoNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimPseudoNode.AcceptNodeVisitor">
            <summary>设置 PseudoNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimPseudoNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimPseudoNode.ConstructorInt32StringFunctionalPseudoNode">
            <summary>设置 PseudoNode.PseudoNode(Int32 numberOfColons, String ident, FunctionalPseudoNode functionalPseudoNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimPseudoNode.FunctionalPseudoNodeGet">
            <summary>设置 PseudoNode.get_FunctionalPseudoNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimPseudoNode.FunctionalPseudoNodeSetFunctionalPseudoNode">
            <summary>设置 PseudoNode.set_FunctionalPseudoNode(FunctionalPseudoNode value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimPseudoNode.IdentGet">
            <summary>设置 PseudoNode.get_Ident() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimPseudoNode.IdentSetString">
            <summary>设置 PseudoNode.set_Ident(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimPseudoNode.NumberOfColonsGet">
            <summary>设置 PseudoNode.get_NumberOfColons() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimPseudoNode.NumberOfColonsSetInt32">
            <summary>设置 PseudoNode.set_NumberOfColons(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Selectors.Fakes.ShimPseudoNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimPseudoNode.AllInstances.AcceptNodeVisitor">
            <summary>设置 PseudoNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimPseudoNode.AllInstances.FunctionalPseudoNodeGet">
            <summary>设置 PseudoNode.get_FunctionalPseudoNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimPseudoNode.AllInstances.FunctionalPseudoNodeSetFunctionalPseudoNode">
            <summary>设置 PseudoNode.set_FunctionalPseudoNode(FunctionalPseudoNode value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimPseudoNode.AllInstances.IdentGet">
            <summary>设置 PseudoNode.get_Ident() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimPseudoNode.AllInstances.IdentSetString">
            <summary>设置 PseudoNode.set_Ident(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimPseudoNode.AllInstances.NumberOfColonsGet">
            <summary>设置 PseudoNode.get_NumberOfColons() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimPseudoNode.AllInstances.NumberOfColonsSetInt32">
            <summary>设置 PseudoNode.set_NumberOfColons(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorExpressionNode">
            <summary>WebGrease.Css.Ast.Selectors.SelectorExpressionNode 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorExpressionNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorExpressionNode.#ctor(WebGrease.Css.Ast.Selectors.SelectorExpressionNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorExpressionNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorExpressionNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorExpressionNode.AcceptNodeVisitor">
            <summary>设置 SelectorExpressionNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorExpressionNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorExpressionNode.ConstructorReadOnlyCollectionOfString">
            <summary>设置 SelectorExpressionNode.SelectorExpressionNode(ReadOnlyCollection`1&lt;String&gt; selectorExpressions) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorExpressionNode.SelectorExpressionsGet">
            <summary>设置 SelectorExpressionNode.get_SelectorExpressions() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorExpressionNode.SelectorExpressionsSetReadOnlyCollectionOfString">
            <summary>设置 SelectorExpressionNode.set_SelectorExpressions(ReadOnlyCollection`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorExpressionNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorExpressionNode.AllInstances.AcceptNodeVisitor">
            <summary>设置 SelectorExpressionNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorExpressionNode.AllInstances.SelectorExpressionsGet">
            <summary>设置 SelectorExpressionNode.get_SelectorExpressions() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorExpressionNode.AllInstances.SelectorExpressionsSetReadOnlyCollectionOfString">
            <summary>设置 SelectorExpressionNode.set_SelectorExpressions(ReadOnlyCollection`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorNamespacePrefixNode">
            <summary>WebGrease.Css.Ast.Selectors.SelectorNamespacePrefixNode 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorNamespacePrefixNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorNamespacePrefixNode.#ctor(WebGrease.Css.Ast.Selectors.SelectorNamespacePrefixNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorNamespacePrefixNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorNamespacePrefixNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorNamespacePrefixNode.AcceptNodeVisitor">
            <summary>设置 SelectorNamespacePrefixNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorNamespacePrefixNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorNamespacePrefixNode.ConstructorString">
            <summary>设置 SelectorNamespacePrefixNode.SelectorNamespacePrefixNode(String prefix) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorNamespacePrefixNode.PrefixGet">
            <summary>设置 SelectorNamespacePrefixNode.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorNamespacePrefixNode.PrefixSetString">
            <summary>设置 SelectorNamespacePrefixNode.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorNamespacePrefixNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorNamespacePrefixNode.AllInstances.AcceptNodeVisitor">
            <summary>设置 SelectorNamespacePrefixNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorNamespacePrefixNode.AllInstances.PrefixGet">
            <summary>设置 SelectorNamespacePrefixNode.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorNamespacePrefixNode.AllInstances.PrefixSetString">
            <summary>设置 SelectorNamespacePrefixNode.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorNode">
            <summary>WebGrease.Css.Ast.Selectors.SelectorNode 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorNode.#ctor(WebGrease.Css.Ast.Selectors.SelectorNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorNode.AcceptNodeVisitor">
            <summary>设置 SelectorNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorNode.CombinatorSimpleSelectorSequenceNodesGet">
            <summary>设置 SelectorNode.get_CombinatorSimpleSelectorSequenceNodes() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorNode.CombinatorSimpleSelectorSequenceNodesSetReadOnlyCollectionOfCombinatorSimpleSelectorSequenceNode">
            <summary>设置 SelectorNode.set_CombinatorSimpleSelectorSequenceNodes(ReadOnlyCollection`1&lt;CombinatorSimpleSelectorSequenceNode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorNode.ConstructorSimpleSelectorSequenceNodeReadOnlyCollectionOfCombinatorSimpleSelectorSequenceNode">
            <summary>设置 SelectorNode.SelectorNode(SimpleSelectorSequenceNode simpleSelectorSequenceNode, ReadOnlyCollection`1&lt;CombinatorSimpleSelectorSequenceNode&gt; combinatorSimpleSelectorSequenceNodes) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorNode.SimpleSelectorSequenceNodeGet">
            <summary>设置 SelectorNode.get_SimpleSelectorSequenceNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorNode.SimpleSelectorSequenceNodeSetSimpleSelectorSequenceNode">
            <summary>设置 SelectorNode.set_SimpleSelectorSequenceNode(SimpleSelectorSequenceNode value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorNode.AllInstances.AcceptNodeVisitor">
            <summary>设置 SelectorNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorNode.AllInstances.CombinatorSimpleSelectorSequenceNodesGet">
            <summary>设置 SelectorNode.get_CombinatorSimpleSelectorSequenceNodes() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorNode.AllInstances.CombinatorSimpleSelectorSequenceNodesSetReadOnlyCollectionOfCombinatorSimpleSelectorSequenceNode">
            <summary>设置 SelectorNode.set_CombinatorSimpleSelectorSequenceNodes(ReadOnlyCollection`1&lt;CombinatorSimpleSelectorSequenceNode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorNode.AllInstances.SimpleSelectorSequenceNodeGet">
            <summary>设置 SelectorNode.get_SimpleSelectorSequenceNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorNode.AllInstances.SimpleSelectorSequenceNodeSetSimpleSelectorSequenceNode">
            <summary>设置 SelectorNode.set_SimpleSelectorSequenceNode(SimpleSelectorSequenceNode value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorsGroupNode">
            <summary>WebGrease.Css.Ast.Selectors.SelectorsGroupNode 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorsGroupNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorsGroupNode.#ctor(WebGrease.Css.Ast.Selectors.SelectorsGroupNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorsGroupNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorsGroupNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorsGroupNode.AcceptNodeVisitor">
            <summary>设置 SelectorsGroupNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorsGroupNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorsGroupNode.ConstructorReadOnlyCollectionOfSelectorNode">
            <summary>设置 SelectorsGroupNode.SelectorsGroupNode(ReadOnlyCollection`1&lt;SelectorNode&gt; selectorNodes) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorsGroupNode.SelectorNodesGet">
            <summary>设置 SelectorsGroupNode.get_SelectorNodes() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorsGroupNode.SelectorNodesSetReadOnlyCollectionOfSelectorNode">
            <summary>设置 SelectorsGroupNode.set_SelectorNodes(ReadOnlyCollection`1&lt;SelectorNode&gt; value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorsGroupNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorsGroupNode.AllInstances.AcceptNodeVisitor">
            <summary>设置 SelectorsGroupNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorsGroupNode.AllInstances.SelectorNodesGet">
            <summary>设置 SelectorsGroupNode.get_SelectorNodes() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSelectorsGroupNode.AllInstances.SelectorNodesSetReadOnlyCollectionOfSelectorNode">
            <summary>设置 SelectorsGroupNode.set_SelectorNodes(ReadOnlyCollection`1&lt;SelectorNode&gt; value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Selectors.Fakes.ShimSimpleSelectorSequenceNode">
            <summary>WebGrease.Css.Ast.Selectors.SimpleSelectorSequenceNode 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimSimpleSelectorSequenceNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimSimpleSelectorSequenceNode.#ctor(WebGrease.Css.Ast.Selectors.SimpleSelectorSequenceNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimSimpleSelectorSequenceNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimSimpleSelectorSequenceNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSimpleSelectorSequenceNode.AcceptNodeVisitor">
            <summary>设置 SimpleSelectorSequenceNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSimpleSelectorSequenceNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSimpleSelectorSequenceNode.ConstructorTypeSelectorNodeUniversalSelectorNodeStringReadOnlyCollectionOfHashClassAtNameAttribPseudoNegationNode">
            <summary>设置 SimpleSelectorSequenceNode.SimpleSelectorSequenceNode(TypeSelectorNode typeSelectorNode, UniversalSelectorNode universalSelectorNode, String separator, ReadOnlyCollection`1&lt;HashClassAtNameAttribPseudoNegationNode&gt; simpleSelectorValues) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSimpleSelectorSequenceNode.HashClassAttribPseudoNegationNodesGet">
            <summary>设置 SimpleSelectorSequenceNode.get_HashClassAttribPseudoNegationNodes() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSimpleSelectorSequenceNode.HashClassAttribPseudoNegationNodesSetReadOnlyCollectionOfHashClassAtNameAttribPseudoNegationNode">
            <summary>设置 SimpleSelectorSequenceNode.set_HashClassAttribPseudoNegationNodes(ReadOnlyCollection`1&lt;HashClassAtNameAttribPseudoNegationNode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSimpleSelectorSequenceNode.SeparatorGet">
            <summary>设置 SimpleSelectorSequenceNode.get_Separator() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSimpleSelectorSequenceNode.SeparatorSetString">
            <summary>设置 SimpleSelectorSequenceNode.set_Separator(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSimpleSelectorSequenceNode.TypeSelectorNodeGet">
            <summary>设置 SimpleSelectorSequenceNode.get_TypeSelectorNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSimpleSelectorSequenceNode.TypeSelectorNodeSetTypeSelectorNode">
            <summary>设置 SimpleSelectorSequenceNode.set_TypeSelectorNode(TypeSelectorNode value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSimpleSelectorSequenceNode.UniversalSelectorNodeGet">
            <summary>设置 SimpleSelectorSequenceNode.get_UniversalSelectorNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSimpleSelectorSequenceNode.UniversalSelectorNodeSetUniversalSelectorNode">
            <summary>设置 SimpleSelectorSequenceNode.set_UniversalSelectorNode(UniversalSelectorNode value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Selectors.Fakes.ShimSimpleSelectorSequenceNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSimpleSelectorSequenceNode.AllInstances.AcceptNodeVisitor">
            <summary>设置 SimpleSelectorSequenceNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSimpleSelectorSequenceNode.AllInstances.HashClassAttribPseudoNegationNodesGet">
            <summary>设置 SimpleSelectorSequenceNode.get_HashClassAttribPseudoNegationNodes() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSimpleSelectorSequenceNode.AllInstances.HashClassAttribPseudoNegationNodesSetReadOnlyCollectionOfHashClassAtNameAttribPseudoNegationNode">
            <summary>设置 SimpleSelectorSequenceNode.set_HashClassAttribPseudoNegationNodes(ReadOnlyCollection`1&lt;HashClassAtNameAttribPseudoNegationNode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSimpleSelectorSequenceNode.AllInstances.SeparatorGet">
            <summary>设置 SimpleSelectorSequenceNode.get_Separator() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSimpleSelectorSequenceNode.AllInstances.SeparatorSetString">
            <summary>设置 SimpleSelectorSequenceNode.set_Separator(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSimpleSelectorSequenceNode.AllInstances.TypeSelectorNodeGet">
            <summary>设置 SimpleSelectorSequenceNode.get_TypeSelectorNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSimpleSelectorSequenceNode.AllInstances.TypeSelectorNodeSetTypeSelectorNode">
            <summary>设置 SimpleSelectorSequenceNode.set_TypeSelectorNode(TypeSelectorNode value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSimpleSelectorSequenceNode.AllInstances.UniversalSelectorNodeGet">
            <summary>设置 SimpleSelectorSequenceNode.get_UniversalSelectorNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimSimpleSelectorSequenceNode.AllInstances.UniversalSelectorNodeSetUniversalSelectorNode">
            <summary>设置 SimpleSelectorSequenceNode.set_UniversalSelectorNode(UniversalSelectorNode value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Selectors.Fakes.ShimTypeSelectorNode">
            <summary>WebGrease.Css.Ast.Selectors.TypeSelectorNode 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimTypeSelectorNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimTypeSelectorNode.#ctor(WebGrease.Css.Ast.Selectors.TypeSelectorNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimTypeSelectorNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimTypeSelectorNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimTypeSelectorNode.AcceptNodeVisitor">
            <summary>设置 TypeSelectorNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimTypeSelectorNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimTypeSelectorNode.ConstructorSelectorNamespacePrefixNodeString">
            <summary>设置 TypeSelectorNode.TypeSelectorNode(SelectorNamespacePrefixNode selectorNamespacePrefixNode, String elementName) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimTypeSelectorNode.ElementNameGet">
            <summary>设置 TypeSelectorNode.get_ElementName() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimTypeSelectorNode.ElementNameSetString">
            <summary>设置 TypeSelectorNode.set_ElementName(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimTypeSelectorNode.SelectorNamespacePrefixNodeGet">
            <summary>设置 TypeSelectorNode.get_SelectorNamespacePrefixNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimTypeSelectorNode.SelectorNamespacePrefixNodeSetSelectorNamespacePrefixNode">
            <summary>设置 TypeSelectorNode.set_SelectorNamespacePrefixNode(SelectorNamespacePrefixNode value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Selectors.Fakes.ShimTypeSelectorNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimTypeSelectorNode.AllInstances.AcceptNodeVisitor">
            <summary>设置 TypeSelectorNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimTypeSelectorNode.AllInstances.ElementNameGet">
            <summary>设置 TypeSelectorNode.get_ElementName() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimTypeSelectorNode.AllInstances.ElementNameSetString">
            <summary>设置 TypeSelectorNode.set_ElementName(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimTypeSelectorNode.AllInstances.SelectorNamespacePrefixNodeGet">
            <summary>设置 TypeSelectorNode.get_SelectorNamespacePrefixNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimTypeSelectorNode.AllInstances.SelectorNamespacePrefixNodeSetSelectorNamespacePrefixNode">
            <summary>设置 TypeSelectorNode.set_SelectorNamespacePrefixNode(SelectorNamespacePrefixNode value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Selectors.Fakes.ShimUniversalSelectorNode">
            <summary>WebGrease.Css.Ast.Selectors.UniversalSelectorNode 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimUniversalSelectorNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimUniversalSelectorNode.#ctor(WebGrease.Css.Ast.Selectors.UniversalSelectorNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimUniversalSelectorNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Ast.Selectors.Fakes.ShimUniversalSelectorNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimUniversalSelectorNode.AcceptNodeVisitor">
            <summary>设置 UniversalSelectorNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimUniversalSelectorNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimUniversalSelectorNode.ConstructorSelectorNamespacePrefixNode">
            <summary>设置 UniversalSelectorNode.UniversalSelectorNode(SelectorNamespacePrefixNode selectorNamespacePrefixNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimUniversalSelectorNode.SelectorNamespacePrefixNodeGet">
            <summary>设置 UniversalSelectorNode.get_SelectorNamespacePrefixNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimUniversalSelectorNode.SelectorNamespacePrefixNodeSetSelectorNamespacePrefixNode">
            <summary>设置 UniversalSelectorNode.set_SelectorNamespacePrefixNode(SelectorNamespacePrefixNode value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Ast.Selectors.Fakes.ShimUniversalSelectorNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimUniversalSelectorNode.AllInstances.AcceptNodeVisitor">
            <summary>设置 UniversalSelectorNode.Accept(NodeVisitor nodeVisitor) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimUniversalSelectorNode.AllInstances.SelectorNamespacePrefixNodeGet">
            <summary>设置 UniversalSelectorNode.get_SelectorNamespacePrefixNode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Ast.Selectors.Fakes.ShimUniversalSelectorNode.AllInstances.SelectorNamespacePrefixNodeSetSelectorNamespacePrefixNode">
            <summary>设置 UniversalSelectorNode.set_SelectorNamespacePrefixNode(SelectorNamespacePrefixNode value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Extensions.Fakes.ShimAstNodeExtensions">
            <summary>WebGrease.Css.Extensions.AstNodeExtensions 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Extensions.Fakes.ShimAstNodeExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Extensions.Fakes.ShimAstNodeExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Extensions.Fakes.ShimAstNodeExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Extensions.Fakes.ShimAstNodeExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Extensions.Fakes.ShimAstNodeExtensions.MinifyPrintAstNode">
            <summary>设置 AstNodeExtensions.MinifyPrint(AstNode node) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Extensions.Fakes.ShimAstNodeExtensions.PrettyPrintAstNode">
            <summary>设置 AstNodeExtensions.PrettyPrint(AstNode node) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Extensions.Fakes.ShimAstNodeExtensions.PrintSelectorMediaNode">
            <summary>设置 AstNodeExtensions.PrintSelector(MediaNode node) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Extensions.Fakes.ShimAstNodeExtensions.PrintSelectorRulesetNode">
            <summary>设置 AstNodeExtensions.PrintSelector(RulesetNode rulesetNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Extensions.Fakes.ShimAstNodeExtensions._PrintSelectorb__0MediaQueryNode">
            <summary>设置 AstNodeExtensions.&lt;PrintSelector&gt;b__0(MediaQueryNode mq) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Extensions.Fakes.ShimBackgroundAstNodeExtensions">
            <summary>WebGrease.Css.Extensions.BackgroundAstNodeExtensions 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Extensions.Fakes.ShimBackgroundAstNodeExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Extensions.Fakes.ShimBackgroundAstNodeExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Extensions.Fakes.ShimBackgroundAstNodeExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Extensions.Fakes.ShimBackgroundAstNodeExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Extensions.Fakes.ShimBackgroundAstNodeExtensions.CopyTermTermNode">
            <summary>设置 BackgroundAstNodeExtensions.CopyTerm(TermNode termNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Extensions.Fakes.ShimBackgroundAstNodeExtensions.CreateDeclarationNodeDeclarationNodeListOfTermWithOperatorNode">
            <summary>设置 BackgroundAstNodeExtensions.CreateDeclarationNode(DeclarationNode declarationNode, List`1&lt;TermWithOperatorNode&gt; termWithOperatorNodes) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Extensions.Fakes.ShimBackgroundAstNodeExtensions.DeclarationEnumeratorDeclarationNode">
            <summary>设置 BackgroundAstNodeExtensions.DeclarationEnumerator(DeclarationNode declarationNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Extensions.Fakes.ShimBackgroundAstNodeExtensions.LoadDeclarationPropertiesDictionaryIEnumerableOfDeclarationNode">
            <summary>设置 BackgroundAstNodeExtensions.LoadDeclarationPropertiesDictionary(IEnumerable`1&lt;DeclarationNode&gt; declarationNodes) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Extensions.Fakes.ShimBackgroundAstNodeExtensions.SafeAddImageAssemblyAnalysisLogAstNodeStringNullableOfFailureReason">
            <summary>设置 BackgroundAstNodeExtensions.SafeAdd(ImageAssemblyAnalysisLog imageAssemblyAnalysisLog, AstNode parentAstNode, String image, Nullable`1&lt;FailureReason&gt; failureReason) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Extensions.Fakes.ShimBackgroundAstNodeExtensions.TryGetBackgroundDpiIDictionaryOfStringDeclarationNodeDeclarationNodeOut">
            <summary>设置 BackgroundAstNodeExtensions.TryGetBackgroundDpi(IDictionary`2&lt;String,DeclarationNode&gt; declarationProperties, DeclarationNode&amp; webGreaseBackgroundDpi) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Extensions.Fakes.ShimBackgroundAstNodeExtensions.TryGetBackgroundSizeBooleanIDictionaryOfStringDeclarationNodeDeclarationNodeOut">
            <summary>设置 BackgroundAstNodeExtensions.TryGetBackgroundSize(Boolean ignoreImagesWithNonDefaultBackgroundSize, IDictionary`2&lt;String,DeclarationNode&gt; declarationProperties, DeclarationNode&amp; backgroundSize) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Extensions.Fakes.ShimBackgroundAstNodeExtensions.UpdateFailedUrlsListStringICollectionOfString">
            <summary>设置 BackgroundAstNodeExtensions.UpdateFailedUrlsList(String parsedUrl, ICollection`1&lt;String&gt; imagesCriteriaFailedUrls) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Extensions.Fakes.ShimBackgroundAstNodeExtensions._LoadDeclarationPropertiesDictionaryb__aKeyValuePairOfStringListOfDeclarationNode">
            <summary>设置 BackgroundAstNodeExtensions.&lt;LoadDeclarationPropertiesDictionary&gt;b__a(KeyValuePair`2&lt;String,List`1&lt;DeclarationNode&gt;&gt; d) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Extensions.Fakes.ShimBackgroundAstNodeExtensions._LoadDeclarationPropertiesDictionaryb__bKeyValuePairOfStringListOfDeclarationNode">
            <summary>设置 BackgroundAstNodeExtensions.&lt;LoadDeclarationPropertiesDictionary&gt;b__b(KeyValuePair`2&lt;String,List`1&lt;DeclarationNode&gt;&gt; d) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Extensions.Fakes.ShimBackgroundAstNodeExtensions._TryGetBackgroundDeclarationb__0DeclarationNode">
            <summary>设置 BackgroundAstNodeExtensions.&lt;TryGetBackgroundDeclaration&gt;b__0(DeclarationNode d) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Extensions.Fakes.ShimCommonTreeExtensions">
            <summary>WebGrease.Css.Extensions.CommonTreeExtensions 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Extensions.Fakes.ShimCommonTreeExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Extensions.Fakes.ShimCommonTreeExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Extensions.Fakes.ShimCommonTreeExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Extensions.Fakes.ShimCommonTreeExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Extensions.Fakes.ShimCommonTreeExtensions.ChildrenCommonTreeString">
            <summary>设置 CommonTreeExtensions.Children(CommonTree commonTree, String childFilterText) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Extensions.Fakes.ShimCommonTreeExtensions.FirstChildTextCommonTree">
            <summary>设置 CommonTreeExtensions.FirstChildText(CommonTree commonTree) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Extensions.Fakes.ShimCommonTreeExtensions.FirstChildTextIEnumerableOfCommonTree">
            <summary>设置 CommonTreeExtensions.FirstChildText(IEnumerable`1&lt;CommonTree&gt; commonTree) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Extensions.Fakes.ShimCommonTreeExtensions.FirstChildTextOrDefaultCommonTreeString">
            <summary>设置 CommonTreeExtensions.FirstChildTextOrDefault(CommonTree commonTree, String defaultText) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Extensions.Fakes.ShimCommonTreeExtensions.FirstChildTextOrDefaultIEnumerableOfCommonTreeString">
            <summary>设置 CommonTreeExtensions.FirstChildTextOrDefault(IEnumerable`1&lt;CommonTree&gt; commonTree, String defaultText) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Extensions.Fakes.ShimCommonTreeExtensions.GrandChildrenCommonTreeString">
            <summary>设置 CommonTreeExtensions.GrandChildren(CommonTree commonTree, String childFilterText) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Extensions.Fakes.ShimCommonTreeExtensions.TextOrDefaultCommonTreeString">
            <summary>设置 CommonTreeExtensions.TextOrDefault(CommonTree commonTree, String defaultText) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Extensions.Fakes.ShimCommonTreeExtensions._GrandChildrenb__dCommonTree">
            <summary>设置 CommonTreeExtensions.&lt;GrandChildren&gt;b__d(CommonTree _) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Extensions.Fakes.ShimListExtensions">
            <summary>WebGrease.Css.Extensions.ListExtensions 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Extensions.Fakes.ShimListExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Extensions.Fakes.ShimListExtensions.AsSafeReadOnlyOf1ListOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0},System.Collections.ObjectModel.ReadOnlyCollection{``0}})">
            <summary>设置 ListExtensions.AsSafeReadOnly(List`1&lt;!!0&gt; list) 的 填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Extensions.Fakes.ShimListExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Extensions.Fakes.ShimListExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Extensions.Fakes.ShimListExtensions.ForEachOf1IEnumerableOfM0ActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.IEnumerable{``0},System.Action{``0}})">
            <summary>设置 ListExtensions.ForEach(IEnumerable`1&lt;!!0&gt; list, Action`1&lt;!!0&gt; action) 的 填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Extensions.Fakes.ShimListExtensions.ForEachOf1IEnumerableOfM0ActionOfM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Int32}})">
            <summary>设置 ListExtensions.ForEach(IEnumerable`1&lt;!!0&gt; list, Action`2&lt;!!0,Int32&gt; action) 的 填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Extensions.Fakes.ShimListExtensions.ForEachOf1IListOfM0ActionOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.IList{``0},System.Action{``0,System.Boolean}})">
            <summary>设置 ListExtensions.ForEach(IList`1&lt;!!0&gt; list, Action`2&lt;!!0,Boolean&gt; action) 的 填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Extensions.Fakes.ShimListExtensions.ToSafeReadOnlyCollectionOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.ObjectModel.ReadOnlyCollection{``0}})">
            <summary>设置 ListExtensions.ToSafeReadOnlyCollection(IEnumerable`1&lt;!!0&gt; enumerable) 的 填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Extensions.Fakes.ShimListExtensions._ToSafeReadOnlyCollectionb__0Of1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Boolean})">
            <summary>设置 ListExtensions.&lt;ToSafeReadOnlyCollection&gt;b__0(!!0 _) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Extensions.Fakes.ShimListExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:WebGrease.Css.Extensions.Fakes.ShimOrderedDictionaryExtensions">
            <summary>WebGrease.Css.Extensions.OrderedDictionaryExtensions 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Extensions.Fakes.ShimOrderedDictionaryExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Extensions.Fakes.ShimOrderedDictionaryExtensions.AppendWithOverrideOf1OrderedDictionaryM0FuncOfM0Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Specialized.OrderedDictionary,``0,System.Func{``0,System.Object}})">
            <summary>设置 OrderedDictionaryExtensions.AppendWithOverride(OrderedDictionary dictionary, !!0 item, Func`2&lt;!!0,Object&gt; key) 的 填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Extensions.Fakes.ShimOrderedDictionaryExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Extensions.Fakes.ShimOrderedDictionaryExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Extensions.Fakes.ShimOrderedDictionaryExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:WebGrease.Css.Fakes.ShimCssLexer">
            <summary>WebGrease.Css.CssLexer 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.ShimCssLexer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.ShimCssLexer.#ctor(WebGrease.Css.CssLexer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.ShimCssLexer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.ShimCssLexer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.ShimCssLexer.Bind(Antlr.Runtime.ITokenSource)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.Constructor">
            <summary>设置 CssLexer.CssLexer() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.ConstructorICharStream">
            <summary>设置 CssLexer.CssLexer(ICharStream input) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.ConstructorICharStreamRecognizerSharedState">
            <summary>设置 CssLexer.CssLexer(ICharStream input, RecognizerSharedState state) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.GrammarFileNameGet">
            <summary>设置 CssLexer.get_GrammarFileName() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.InitDFAs">
            <summary>设置 CssLexer.InitDFAs() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.RemoveCommentsString">
            <summary>设置 CssLexer.RemoveComments(String text) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.RemoveUrlEdgeWhitespacesString">
            <summary>设置 CssLexer.RemoveUrlEdgeWhitespaces(String text) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.SpecialStateTransition129DFAInt32IIntStream">
            <summary>设置 CssLexer.SpecialStateTransition129(DFA dfa, Int32 s, IIntStream _input) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.SpecialStateTransition25DFAInt32IIntStream">
            <summary>设置 CssLexer.SpecialStateTransition25(DFA dfa, Int32 s, IIntStream _input) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.StaticConstructor">
            <summary>设置 CssLexer.CssLexer() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mA">
            <summary>设置 CssLexer.mA() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mAND">
            <summary>设置 CssLexer.mAND() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mANGLE">
            <summary>设置 CssLexer.mANGLE() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mAT_NAME">
            <summary>设置 CssLexer.mAT_NAME() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mB">
            <summary>设置 CssLexer.mB() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mBACKWARD_SLASH">
            <summary>设置 CssLexer.mBACKWARD_SLASH() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mC">
            <summary>设置 CssLexer.mC() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mCHARSET_SYM">
            <summary>设置 CssLexer.mCHARSET_SYM() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mCIRCLE_BEGIN">
            <summary>设置 CssLexer.mCIRCLE_BEGIN() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mCIRCLE_END">
            <summary>设置 CssLexer.mCIRCLE_END() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mCLASS_IDENT">
            <summary>设置 CssLexer.mCLASS_IDENT() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mCOLON">
            <summary>设置 CssLexer.mCOLON() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mCOMMA">
            <summary>设置 CssLexer.mCOMMA() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mCOMMENTS">
            <summary>设置 CssLexer.mCOMMENTS() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mCURLY_BEGIN">
            <summary>设置 CssLexer.mCURLY_BEGIN() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mCURLY_END">
            <summary>设置 CssLexer.mCURLY_END() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mD">
            <summary>设置 CssLexer.mD() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mDASHMATCH">
            <summary>设置 CssLexer.mDASHMATCH() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mDIGITS">
            <summary>设置 CssLexer.mDIGITS() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mDIMENSION">
            <summary>设置 CssLexer.mDIMENSION() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mDOCUMENT_SYM">
            <summary>设置 CssLexer.mDOCUMENT_SYM() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mDOMAIN_FUNCTION">
            <summary>设置 CssLexer.mDOMAIN_FUNCTION() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mE">
            <summary>设置 CssLexer.mE() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mEQUALS">
            <summary>设置 CssLexer.mEQUALS() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mESCAPE">
            <summary>设置 CssLexer.mESCAPE() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mF">
            <summary>设置 CssLexer.mF() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mFORWARD_SLASH">
            <summary>设置 CssLexer.mFORWARD_SLASH() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mFREQ">
            <summary>设置 CssLexer.mFREQ() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mFROM">
            <summary>设置 CssLexer.mFROM() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mG">
            <summary>设置 CssLexer.mG() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mGREATER">
            <summary>设置 CssLexer.mGREATER() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mH">
            <summary>设置 CssLexer.mH() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mHASH">
            <summary>设置 CssLexer.mHASH() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mHASH_IDENT">
            <summary>设置 CssLexer.mHASH_IDENT() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mHEXDIGIT">
            <summary>设置 CssLexer.mHEXDIGIT() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mI">
            <summary>设置 CssLexer.mI() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mIDENT">
            <summary>设置 CssLexer.mIDENT() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mIMPORTANT_SYM">
            <summary>设置 CssLexer.mIMPORTANT_SYM() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mIMPORT_SYM">
            <summary>设置 CssLexer.mIMPORT_SYM() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mINCLUDES">
            <summary>设置 CssLexer.mINCLUDES() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mK">
            <summary>设置 CssLexer.mK() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mKEYFRAMES_SYM">
            <summary>设置 CssLexer.mKEYFRAMES_SYM() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mL">
            <summary>设置 CssLexer.mL() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mLENGTH">
            <summary>设置 CssLexer.mLENGTH() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mLETTER">
            <summary>设置 CssLexer.mLETTER() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mM">
            <summary>设置 CssLexer.mM() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mMEDIA_SYM">
            <summary>设置 CssLexer.mMEDIA_SYM() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mMINUS">
            <summary>设置 CssLexer.mMINUS() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mMSIE_EXPRESSION">
            <summary>设置 CssLexer.mMSIE_EXPRESSION() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mMSIE_IMAGE_TRANSFORM">
            <summary>设置 CssLexer.mMSIE_IMAGE_TRANSFORM() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mN">
            <summary>设置 CssLexer.mN() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mNAME">
            <summary>设置 CssLexer.mNAME() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mNAMESPACE_SYM">
            <summary>设置 CssLexer.mNAMESPACE_SYM() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mNL">
            <summary>设置 CssLexer.mNL() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mNMCHAR">
            <summary>设置 CssLexer.mNMCHAR() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mNMSTART">
            <summary>设置 CssLexer.mNMSTART() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mNONASCII">
            <summary>设置 CssLexer.mNONASCII() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mNOT">
            <summary>设置 CssLexer.mNOT() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mNUMBER">
            <summary>设置 CssLexer.mNUMBER() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mO">
            <summary>设置 CssLexer.mO() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mONLY">
            <summary>设置 CssLexer.mONLY() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mP">
            <summary>设置 CssLexer.mP() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mPAGE_SYM">
            <summary>设置 CssLexer.mPAGE_SYM() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mPERCENTAGE">
            <summary>设置 CssLexer.mPERCENTAGE() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mPIPE">
            <summary>设置 CssLexer.mPIPE() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mPLUS">
            <summary>设置 CssLexer.mPLUS() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mPREFIXMATCH">
            <summary>设置 CssLexer.mPREFIXMATCH() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mR">
            <summary>设置 CssLexer.mR() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mREGEXP_FUNCTION">
            <summary>设置 CssLexer.mREGEXP_FUNCTION() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mRELATIVELENGTH">
            <summary>设置 CssLexer.mRELATIVELENGTH() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mRESOLUTION">
            <summary>设置 CssLexer.mRESOLUTION() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mS">
            <summary>设置 CssLexer.mS() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mSEMICOLON">
            <summary>设置 CssLexer.mSEMICOLON() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mSPACE_AFTER_UNICODE">
            <summary>设置 CssLexer.mSPACE_AFTER_UNICODE() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mSPEECH">
            <summary>设置 CssLexer.mSPEECH() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mSQUARE_BEGIN">
            <summary>设置 CssLexer.mSQUARE_BEGIN() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mSQUARE_END">
            <summary>设置 CssLexer.mSQUARE_END() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mSTAR">
            <summary>设置 CssLexer.mSTAR() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mSTRING">
            <summary>设置 CssLexer.mSTRING() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mSUBSTRINGMATCH">
            <summary>设置 CssLexer.mSUBSTRINGMATCH() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mSUFFIXMATCH">
            <summary>设置 CssLexer.mSUFFIXMATCH() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mT">
            <summary>设置 CssLexer.mT() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mTILDE">
            <summary>设置 CssLexer.mTILDE() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mTIME">
            <summary>设置 CssLexer.mTIME() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mTO">
            <summary>设置 CssLexer.mTO() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mTokens">
            <summary>设置 CssLexer.mTokens() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mU">
            <summary>设置 CssLexer.mU() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mUNICODE">
            <summary>设置 CssLexer.mUNICODE() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mUNICODE_ESCAPE_HACK">
            <summary>设置 CssLexer.mUNICODE_ESCAPE_HACK() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mUNICODE_NULLTERM">
            <summary>设置 CssLexer.mUNICODE_NULLTERM() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mUNICODE_RANGE">
            <summary>设置 CssLexer.mUNICODE_RANGE() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mUNICODE_TAB">
            <summary>设置 CssLexer.mUNICODE_TAB() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mUNICODE_ZEROS">
            <summary>设置 CssLexer.mUNICODE_ZEROS() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mURI">
            <summary>设置 CssLexer.mURI() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mURL">
            <summary>设置 CssLexer.mURL() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mURLPREFIX_FUNCTION">
            <summary>设置 CssLexer.mURLPREFIX_FUNCTION() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mV">
            <summary>设置 CssLexer.mV() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mW">
            <summary>设置 CssLexer.mW() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mWG_DPI_SYM">
            <summary>设置 CssLexer.mWG_DPI_SYM() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mWS">
            <summary>设置 CssLexer.mWS() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mWS_FRAGMENT">
            <summary>设置 CssLexer.mWS_FRAGMENT() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mX">
            <summary>设置 CssLexer.mX() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mY">
            <summary>设置 CssLexer.mY() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.mZ">
            <summary>设置 CssLexer.mZ() 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Fakes.ShimCssLexer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.GrammarFileNameGet">
            <summary>设置 CssLexer.get_GrammarFileName() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.InitDFAs">
            <summary>设置 CssLexer.InitDFAs() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.SpecialStateTransition129DFAInt32IIntStream">
            <summary>设置 CssLexer.SpecialStateTransition129(DFA dfa, Int32 s, IIntStream _input) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.SpecialStateTransition25DFAInt32IIntStream">
            <summary>设置 CssLexer.SpecialStateTransition25(DFA dfa, Int32 s, IIntStream _input) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mA">
            <summary>设置 CssLexer.mA() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mAND">
            <summary>设置 CssLexer.mAND() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mANGLE">
            <summary>设置 CssLexer.mANGLE() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mAT_NAME">
            <summary>设置 CssLexer.mAT_NAME() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mB">
            <summary>设置 CssLexer.mB() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mBACKWARD_SLASH">
            <summary>设置 CssLexer.mBACKWARD_SLASH() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mC">
            <summary>设置 CssLexer.mC() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mCHARSET_SYM">
            <summary>设置 CssLexer.mCHARSET_SYM() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mCIRCLE_BEGIN">
            <summary>设置 CssLexer.mCIRCLE_BEGIN() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mCIRCLE_END">
            <summary>设置 CssLexer.mCIRCLE_END() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mCLASS_IDENT">
            <summary>设置 CssLexer.mCLASS_IDENT() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mCOLON">
            <summary>设置 CssLexer.mCOLON() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mCOMMA">
            <summary>设置 CssLexer.mCOMMA() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mCOMMENTS">
            <summary>设置 CssLexer.mCOMMENTS() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mCURLY_BEGIN">
            <summary>设置 CssLexer.mCURLY_BEGIN() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mCURLY_END">
            <summary>设置 CssLexer.mCURLY_END() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mD">
            <summary>设置 CssLexer.mD() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mDASHMATCH">
            <summary>设置 CssLexer.mDASHMATCH() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mDIGITS">
            <summary>设置 CssLexer.mDIGITS() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mDIMENSION">
            <summary>设置 CssLexer.mDIMENSION() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mDOCUMENT_SYM">
            <summary>设置 CssLexer.mDOCUMENT_SYM() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mDOMAIN_FUNCTION">
            <summary>设置 CssLexer.mDOMAIN_FUNCTION() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mE">
            <summary>设置 CssLexer.mE() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mEQUALS">
            <summary>设置 CssLexer.mEQUALS() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mESCAPE">
            <summary>设置 CssLexer.mESCAPE() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mF">
            <summary>设置 CssLexer.mF() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mFORWARD_SLASH">
            <summary>设置 CssLexer.mFORWARD_SLASH() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mFREQ">
            <summary>设置 CssLexer.mFREQ() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mFROM">
            <summary>设置 CssLexer.mFROM() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mG">
            <summary>设置 CssLexer.mG() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mGREATER">
            <summary>设置 CssLexer.mGREATER() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mH">
            <summary>设置 CssLexer.mH() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mHASH">
            <summary>设置 CssLexer.mHASH() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mHASH_IDENT">
            <summary>设置 CssLexer.mHASH_IDENT() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mHEXDIGIT">
            <summary>设置 CssLexer.mHEXDIGIT() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mI">
            <summary>设置 CssLexer.mI() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mIDENT">
            <summary>设置 CssLexer.mIDENT() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mIMPORTANT_SYM">
            <summary>设置 CssLexer.mIMPORTANT_SYM() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mIMPORT_SYM">
            <summary>设置 CssLexer.mIMPORT_SYM() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mINCLUDES">
            <summary>设置 CssLexer.mINCLUDES() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mK">
            <summary>设置 CssLexer.mK() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mKEYFRAMES_SYM">
            <summary>设置 CssLexer.mKEYFRAMES_SYM() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mL">
            <summary>设置 CssLexer.mL() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mLENGTH">
            <summary>设置 CssLexer.mLENGTH() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mLETTER">
            <summary>设置 CssLexer.mLETTER() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mM">
            <summary>设置 CssLexer.mM() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mMEDIA_SYM">
            <summary>设置 CssLexer.mMEDIA_SYM() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mMINUS">
            <summary>设置 CssLexer.mMINUS() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mMSIE_EXPRESSION">
            <summary>设置 CssLexer.mMSIE_EXPRESSION() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mMSIE_IMAGE_TRANSFORM">
            <summary>设置 CssLexer.mMSIE_IMAGE_TRANSFORM() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mN">
            <summary>设置 CssLexer.mN() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mNAME">
            <summary>设置 CssLexer.mNAME() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mNAMESPACE_SYM">
            <summary>设置 CssLexer.mNAMESPACE_SYM() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mNL">
            <summary>设置 CssLexer.mNL() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mNMCHAR">
            <summary>设置 CssLexer.mNMCHAR() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mNMSTART">
            <summary>设置 CssLexer.mNMSTART() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mNONASCII">
            <summary>设置 CssLexer.mNONASCII() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mNOT">
            <summary>设置 CssLexer.mNOT() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mNUMBER">
            <summary>设置 CssLexer.mNUMBER() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mO">
            <summary>设置 CssLexer.mO() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mONLY">
            <summary>设置 CssLexer.mONLY() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mP">
            <summary>设置 CssLexer.mP() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mPAGE_SYM">
            <summary>设置 CssLexer.mPAGE_SYM() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mPERCENTAGE">
            <summary>设置 CssLexer.mPERCENTAGE() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mPIPE">
            <summary>设置 CssLexer.mPIPE() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mPLUS">
            <summary>设置 CssLexer.mPLUS() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mPREFIXMATCH">
            <summary>设置 CssLexer.mPREFIXMATCH() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mR">
            <summary>设置 CssLexer.mR() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mREGEXP_FUNCTION">
            <summary>设置 CssLexer.mREGEXP_FUNCTION() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mRELATIVELENGTH">
            <summary>设置 CssLexer.mRELATIVELENGTH() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mRESOLUTION">
            <summary>设置 CssLexer.mRESOLUTION() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mS">
            <summary>设置 CssLexer.mS() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mSEMICOLON">
            <summary>设置 CssLexer.mSEMICOLON() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mSPACE_AFTER_UNICODE">
            <summary>设置 CssLexer.mSPACE_AFTER_UNICODE() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mSPEECH">
            <summary>设置 CssLexer.mSPEECH() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mSQUARE_BEGIN">
            <summary>设置 CssLexer.mSQUARE_BEGIN() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mSQUARE_END">
            <summary>设置 CssLexer.mSQUARE_END() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mSTAR">
            <summary>设置 CssLexer.mSTAR() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mSTRING">
            <summary>设置 CssLexer.mSTRING() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mSUBSTRINGMATCH">
            <summary>设置 CssLexer.mSUBSTRINGMATCH() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mSUFFIXMATCH">
            <summary>设置 CssLexer.mSUFFIXMATCH() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mT">
            <summary>设置 CssLexer.mT() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mTILDE">
            <summary>设置 CssLexer.mTILDE() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mTIME">
            <summary>设置 CssLexer.mTIME() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mTO">
            <summary>设置 CssLexer.mTO() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mTokens">
            <summary>设置 CssLexer.mTokens() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mU">
            <summary>设置 CssLexer.mU() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mUNICODE">
            <summary>设置 CssLexer.mUNICODE() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mUNICODE_ESCAPE_HACK">
            <summary>设置 CssLexer.mUNICODE_ESCAPE_HACK() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mUNICODE_NULLTERM">
            <summary>设置 CssLexer.mUNICODE_NULLTERM() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mUNICODE_RANGE">
            <summary>设置 CssLexer.mUNICODE_RANGE() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mUNICODE_TAB">
            <summary>设置 CssLexer.mUNICODE_TAB() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mUNICODE_ZEROS">
            <summary>设置 CssLexer.mUNICODE_ZEROS() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mURI">
            <summary>设置 CssLexer.mURI() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mURL">
            <summary>设置 CssLexer.mURL() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mURLPREFIX_FUNCTION">
            <summary>设置 CssLexer.mURLPREFIX_FUNCTION() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mV">
            <summary>设置 CssLexer.mV() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mW">
            <summary>设置 CssLexer.mW() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mWG_DPI_SYM">
            <summary>设置 CssLexer.mWG_DPI_SYM() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mWS">
            <summary>设置 CssLexer.mWS() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mWS_FRAGMENT">
            <summary>设置 CssLexer.mWS_FRAGMENT() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mX">
            <summary>设置 CssLexer.mX() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mY">
            <summary>设置 CssLexer.mY() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssLexer.AllInstances.mZ">
            <summary>设置 CssLexer.mZ() 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Fakes.ShimCssParser">
            <summary>WebGrease.Css.CssParser 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.ShimCssParser.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.ShimCssParser.#ctor(WebGrease.Css.CssParser)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.ShimCssParser.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.ShimCssParser.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.ConstructorITokenStream">
            <summary>设置 CssParser.CssParser(ITokenStream input) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.ConstructorITokenStreamRecognizerSharedState">
            <summary>设置 CssParser.CssParser(ITokenStream input, RecognizerSharedState state) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.EvaluatePredicateAction">
            <summary>设置 CssParser.EvaluatePredicate(Action fragment) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.GetWhitespaceToken">
            <summary>设置 CssParser.GetWhitespaceToken() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.GrammarFileNameGet">
            <summary>设置 CssParser.get_GrammarFileName() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.InitDFAs">
            <summary>设置 CssParser.InitDFAs() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.LogDiagnosticsStringCommonTree">
            <summary>设置 CssParser.LogDiagnostics(String css, CommonTree commonTree) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.LogTreeCommonTree">
            <summary>设置 CssParser.LogTree(CommonTree tree) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.ParseFileInfoBoolean">
            <summary>设置 CssParser.Parse(FileInfo cssFile, Boolean shouldLogDiagnostics) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.ParseIWebGreaseContextStringBoolean">
            <summary>设置 CssParser.Parse(IWebGreaseContext context, String cssContent, Boolean shouldLogDiagnostics) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.ParseStyleSheetIWebGreaseContextStringBoolean">
            <summary>设置 CssParser.ParseStyleSheet(IWebGreaseContext context, String cssContent, Boolean shouldLogDiagnostics) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.ReportErrorRecognitionException">
            <summary>设置 CssParser.ReportError(RecognitionException e) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.SpecialStateTransition28DFAInt32IIntStream">
            <summary>设置 CssParser.SpecialStateTransition28(DFA dfa, Int32 s, IIntStream _input) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.SpecialStateTransition43DFAInt32IIntStream">
            <summary>设置 CssParser.SpecialStateTransition43(DFA dfa, Int32 s, IIntStream _input) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.StaticConstructor">
            <summary>设置 CssParser.CssParser() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.TokenNamesGet">
            <summary>设置 CssParser.get_TokenNames() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.TreeAdaptorGet">
            <summary>设置 CssParser.get_TreeAdaptor() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.TreeAdaptorSetITreeAdaptor">
            <summary>设置 CssParser.set_TreeAdaptor(ITreeAdaptor value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.TrimMsieExpressionString">
            <summary>设置 CssParser.TrimMsieExpression(String text) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.main">
            <summary>设置 CssParser.main() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.synpred1_CssParser_fragment">
            <summary>设置 CssParser.synpred1_CssParser_fragment() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.synpred2_CssParser_fragment">
            <summary>设置 CssParser.synpred2_CssParser_fragment() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.synpred3_CssParser_fragment">
            <summary>设置 CssParser.synpred3_CssParser_fragment() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.synpred4_CssParser_fragment">
            <summary>设置 CssParser.synpred4_CssParser_fragment() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.synpred5_CssParser_fragment">
            <summary>设置 CssParser.synpred5_CssParser_fragment() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.synpred6_CssParser_fragment">
            <summary>设置 CssParser.synpred6_CssParser_fragment() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.synpred7_CssParser_fragment">
            <summary>设置 CssParser.synpred7_CssParser_fragment() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.synpred8_CssParser_fragment">
            <summary>设置 CssParser.synpred8_CssParser_fragment() 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Fakes.ShimCssParser.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.AllInstances.EvaluatePredicateAction">
            <summary>设置 CssParser.EvaluatePredicate(Action fragment) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.AllInstances.GetWhitespaceToken">
            <summary>设置 CssParser.GetWhitespaceToken() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.AllInstances.GrammarFileNameGet">
            <summary>设置 CssParser.get_GrammarFileName() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.AllInstances.InitDFAs">
            <summary>设置 CssParser.InitDFAs() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.AllInstances.ReportErrorRecognitionException">
            <summary>设置 CssParser.ReportError(RecognitionException e) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.AllInstances.SpecialStateTransition28DFAInt32IIntStream">
            <summary>设置 CssParser.SpecialStateTransition28(DFA dfa, Int32 s, IIntStream _input) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.AllInstances.SpecialStateTransition43DFAInt32IIntStream">
            <summary>设置 CssParser.SpecialStateTransition43(DFA dfa, Int32 s, IIntStream _input) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.AllInstances.TokenNamesGet">
            <summary>设置 CssParser.get_TokenNames() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.AllInstances.TreeAdaptorGet">
            <summary>设置 CssParser.get_TreeAdaptor() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.AllInstances.TreeAdaptorSetITreeAdaptor">
            <summary>设置 CssParser.set_TreeAdaptor(ITreeAdaptor value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.AllInstances.main">
            <summary>设置 CssParser.main() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.AllInstances.synpred1_CssParser_fragment">
            <summary>设置 CssParser.synpred1_CssParser_fragment() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.AllInstances.synpred2_CssParser_fragment">
            <summary>设置 CssParser.synpred2_CssParser_fragment() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.AllInstances.synpred3_CssParser_fragment">
            <summary>设置 CssParser.synpred3_CssParser_fragment() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.AllInstances.synpred4_CssParser_fragment">
            <summary>设置 CssParser.synpred4_CssParser_fragment() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.AllInstances.synpred5_CssParser_fragment">
            <summary>设置 CssParser.synpred5_CssParser_fragment() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.AllInstances.synpred6_CssParser_fragment">
            <summary>设置 CssParser.synpred6_CssParser_fragment() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.AllInstances.synpred7_CssParser_fragment">
            <summary>设置 CssParser.synpred7_CssParser_fragment() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.AllInstances.synpred8_CssParser_fragment">
            <summary>设置 CssParser.synpred8_CssParser_fragment() 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Fakes.ShimCssParser.Shimmain_return">
            <summary>WebGrease.Css.CssParser+main_return 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.ShimCssParser.Shimmain_return.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.ShimCssParser.Shimmain_return.#ctor(WebGrease.Css.CssParser.main_return)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.ShimCssParser.Shimmain_return.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.ShimCssParser.Shimmain_return.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.ShimCssParser.Shimmain_return.Bind(Antlr.Runtime.IAstRuleReturnScope)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.ShimCssParser.Shimmain_return.Bind(Antlr.Runtime.IRuleReturnScope)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.ShimCssParser.Shimmain_return.Bind(Antlr.Runtime.IAstRuleReturnScope{System.Object})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.ShimCssParser.Shimmain_return.Bind(Antlr.Runtime.IRuleReturnScope{Antlr.Runtime.CommonToken})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.Shimmain_return.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.Shimmain_return.ConstructorCssParser">
            <summary>设置 main_return.main_return(CssParser grammar) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.Shimmain_return.TreeAntlrRuntimeIAstRuleReturnScopeget">
            <summary>设置 main_return.Antlr.Runtime.IAstRuleReturnScope.get_Tree() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.Shimmain_return.TreeGet">
            <summary>设置 main_return.get_Tree() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.Shimmain_return.TreeSetObject">
            <summary>设置 main_return.set_Tree(Object value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Fakes.ShimCssParser.Shimmain_return.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.Shimmain_return.AllInstances.TreeAntlrRuntimeIAstRuleReturnScopeget">
            <summary>设置 main_return.Antlr.Runtime.IAstRuleReturnScope.get_Tree() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.Shimmain_return.AllInstances.TreeGet">
            <summary>设置 main_return.get_Tree() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimCssParser.Shimmain_return.AllInstances.TreeSetObject">
            <summary>设置 main_return.set_Tree(Object value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Fakes.ShimUnicodeDecoder">
            <summary>WebGrease.Css.UnicodeDecoder 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.ShimUnicodeDecoder.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.ShimUnicodeDecoder.#ctor(WebGrease.Css.UnicodeDecoder)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.ShimUnicodeDecoder.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.ShimUnicodeDecoder.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimUnicodeDecoder.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimUnicodeDecoder.ConstructorTextReader">
            <summary>设置 UnicodeDecoder.UnicodeDecoder(TextReader reader) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimUnicodeDecoder.DecodeString">
            <summary>设置 UnicodeDecoder.Decode(String text) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimUnicodeDecoder.GetUnicode">
            <summary>设置 UnicodeDecoder.GetUnicode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimUnicodeDecoder.GetUnicodeEncodingValue">
            <summary>设置 UnicodeDecoder.GetUnicodeEncodingValue() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimUnicodeDecoder.HValueChar">
            <summary>设置 UnicodeDecoder.HValue(Char ch) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimUnicodeDecoder.IsHChar">
            <summary>设置 UnicodeDecoder.IsH(Char ch) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimUnicodeDecoder.IsSpaceChar">
            <summary>设置 UnicodeDecoder.IsSpace(Char ch) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimUnicodeDecoder.NextChar">
            <summary>设置 UnicodeDecoder.NextChar() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimUnicodeDecoder.PeekChar">
            <summary>设置 UnicodeDecoder.PeekChar() 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Fakes.ShimUnicodeDecoder.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimUnicodeDecoder.AllInstances.GetUnicode">
            <summary>设置 UnicodeDecoder.GetUnicode() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimUnicodeDecoder.AllInstances.GetUnicodeEncodingValue">
            <summary>设置 UnicodeDecoder.GetUnicodeEncodingValue() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimUnicodeDecoder.AllInstances.NextChar">
            <summary>设置 UnicodeDecoder.NextChar() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.ShimUnicodeDecoder.AllInstances.PeekChar">
            <summary>设置 UnicodeDecoder.PeekChar() 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Fakes.StubCssLexer">
            <summary>WebGrease.Css.CssLexer 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.#ctor(Antlr.Runtime.ICharStream)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.#ctor(Antlr.Runtime.ICharStream,Antlr.Runtime.RecognizerSharedState)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.AlreadyParsedRule(Antlr.Runtime.IIntStream,System.Int32)">
            <summary>设置 BaseRecognizer.AlreadyParsedRule(IIntStream input, Int32 ruleIndex) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.AlreadyParsedRuleIIntStreamInt32">
            <summary>设置 BaseRecognizer.AlreadyParsedRule(IIntStream input, Int32 ruleIndex) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.AttachBackingFieldToBacktrackingLevel">
            <summary>附加委托以将 StubCssLexer.BacktrackingLevel 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.AttachBackingFieldToCharStream">
            <summary>附加委托以将 StubCssLexer.CharStream 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.BacktrackingLevelGet">
            <summary>设置 BaseRecognizer.get_BacktrackingLevel() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.BacktrackingLevelSetInt32">
            <summary>设置 BaseRecognizer.set_BacktrackingLevel(Int32 value) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.BeginResync">
            <summary>设置 BaseRecognizer.BeginResync() 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.BeginResync01">
            <summary>设置 BaseRecognizer.BeginResync() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.CharIndexGet">
            <summary>设置 Lexer.get_CharIndex() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.CharStreamGet">
            <summary>设置 Lexer.get_CharStream() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.CharStreamSetICharStream">
            <summary>设置 Lexer.set_CharStream(ICharStream value) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.CombineFollows(System.Boolean)">
            <summary>设置 BaseRecognizer.CombineFollows(Boolean exact) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.CombineFollowsBoolean">
            <summary>设置 BaseRecognizer.CombineFollows(Boolean exact) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.ComputeContextSensitiveRuleFOLLOW">
            <summary>设置 BaseRecognizer.ComputeContextSensitiveRuleFOLLOW() 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.ComputeContextSensitiveRuleFOLLOW01">
            <summary>设置 BaseRecognizer.ComputeContextSensitiveRuleFOLLOW() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.ComputeErrorRecoverySet">
            <summary>设置 BaseRecognizer.ComputeErrorRecoverySet() 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.ComputeErrorRecoverySet01">
            <summary>设置 BaseRecognizer.ComputeErrorRecoverySet() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.ConsumeUntil(Antlr.Runtime.IIntStream,System.Int32)">
            <summary>设置 BaseRecognizer.ConsumeUntil(IIntStream input, Int32 tokenType) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.ConsumeUntil(Antlr.Runtime.IIntStream,Antlr.Runtime.BitSet)">
            <summary>设置 BaseRecognizer.ConsumeUntil(IIntStream input, BitSet set) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.ConsumeUntilIIntStreamBitSet">
            <summary>设置 BaseRecognizer.ConsumeUntil(IIntStream input, BitSet set) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.ConsumeUntilIIntStreamInt32">
            <summary>设置 BaseRecognizer.ConsumeUntil(IIntStream input, Int32 tokenType) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.DebugBeginBacktrack(System.Int32)">
            <summary>设置 BaseRecognizer.DebugBeginBacktrack(Int32 level) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.DebugBeginBacktrackInt32">
            <summary>设置 BaseRecognizer.DebugBeginBacktrack(Int32 level) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.DebugEndBacktrack(System.Int32,System.Boolean)">
            <summary>设置 BaseRecognizer.DebugEndBacktrack(Int32 level, Boolean successful) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.DebugEndBacktrackInt32Boolean">
            <summary>设置 BaseRecognizer.DebugEndBacktrack(Int32 level, Boolean successful) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.DebugEnterAlt(System.Int32)">
            <summary>设置 BaseRecognizer.DebugEnterAlt(Int32 alt) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.DebugEnterAltInt32">
            <summary>设置 BaseRecognizer.DebugEnterAlt(Int32 alt) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.DebugEnterDecision(System.Int32,System.Boolean)">
            <summary>设置 BaseRecognizer.DebugEnterDecision(Int32 decisionNumber, Boolean couldBacktrack) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.DebugEnterDecisionInt32Boolean">
            <summary>设置 BaseRecognizer.DebugEnterDecision(Int32 decisionNumber, Boolean couldBacktrack) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.DebugEnterRule(System.String,System.String)">
            <summary>设置 BaseRecognizer.DebugEnterRule(String grammarFileName, String ruleName) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.DebugEnterRuleStringString">
            <summary>设置 BaseRecognizer.DebugEnterRule(String grammarFileName, String ruleName) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.DebugEnterSubRule(System.Int32)">
            <summary>设置 BaseRecognizer.DebugEnterSubRule(Int32 decisionNumber) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.DebugEnterSubRuleInt32">
            <summary>设置 BaseRecognizer.DebugEnterSubRule(Int32 decisionNumber) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.DebugExitDecision(System.Int32)">
            <summary>设置 BaseRecognizer.DebugExitDecision(Int32 decisionNumber) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.DebugExitDecisionInt32">
            <summary>设置 BaseRecognizer.DebugExitDecision(Int32 decisionNumber) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.DebugExitRule(System.String,System.String)">
            <summary>设置 BaseRecognizer.DebugExitRule(String grammarFileName, String ruleName) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.DebugExitRuleStringString">
            <summary>设置 BaseRecognizer.DebugExitRule(String grammarFileName, String ruleName) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.DebugExitSubRule(System.Int32)">
            <summary>设置 BaseRecognizer.DebugExitSubRule(Int32 decisionNumber) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.DebugExitSubRuleInt32">
            <summary>设置 BaseRecognizer.DebugExitSubRule(Int32 decisionNumber) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.DebugListenerGet">
            <summary>设置 BaseRecognizer.get_DebugListener() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.DebugLocation(System.Int32,System.Int32)">
            <summary>设置 BaseRecognizer.DebugLocation(Int32 line, Int32 charPositionInLine) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.DebugLocationInt32Int32">
            <summary>设置 BaseRecognizer.DebugLocation(Int32 line, Int32 charPositionInLine) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.DebugRecognitionException(Antlr.Runtime.RecognitionException)">
            <summary>设置 BaseRecognizer.DebugRecognitionException(RecognitionException ex) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.DebugRecognitionExceptionRecognitionException">
            <summary>设置 BaseRecognizer.DebugRecognitionException(RecognitionException ex) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.DebugSemanticPredicate(System.Boolean,System.String)">
            <summary>设置 BaseRecognizer.DebugSemanticPredicate(Boolean result, String predicate) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.DebugSemanticPredicateBooleanString">
            <summary>设置 BaseRecognizer.DebugSemanticPredicate(Boolean result, String predicate) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.DisplayRecognitionError(System.String[],Antlr.Runtime.RecognitionException)">
            <summary>设置 BaseRecognizer.DisplayRecognitionError(String[] tokenNames, RecognitionException e) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.DisplayRecognitionErrorStringArrayRecognitionException">
            <summary>设置 BaseRecognizer.DisplayRecognitionError(String[] tokenNames, RecognitionException e) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.Emit">
            <summary>设置 Lexer.Emit() 的 存根</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.Emit(Antlr.Runtime.IToken)">
            <summary>设置 Lexer.Emit(IToken token) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.Emit01">
            <summary>设置 Lexer.Emit() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.EmitErrorMessage(System.String)">
            <summary>设置 BaseRecognizer.EmitErrorMessage(String msg) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.EmitErrorMessageString">
            <summary>设置 BaseRecognizer.EmitErrorMessage(String msg) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.EmitIToken">
            <summary>设置 Lexer.Emit(IToken token) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.EndResync">
            <summary>设置 BaseRecognizer.EndResync() 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.EndResync01">
            <summary>设置 BaseRecognizer.EndResync() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.FailedGet">
            <summary>设置 BaseRecognizer.get_Failed() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.GetCharErrorDisplay(System.Int32)">
            <summary>设置 Lexer.GetCharErrorDisplay(Int32 c) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.GetCharErrorDisplayInt32">
            <summary>设置 Lexer.GetCharErrorDisplay(Int32 c) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.GetCurrentInputSymbol(Antlr.Runtime.IIntStream)">
            <summary>设置 BaseRecognizer.GetCurrentInputSymbol(IIntStream input) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.GetCurrentInputSymbolIIntStream">
            <summary>设置 BaseRecognizer.GetCurrentInputSymbol(IIntStream input) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.GetErrorHeader(Antlr.Runtime.RecognitionException)">
            <summary>设置 BaseRecognizer.GetErrorHeader(RecognitionException e) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.GetErrorHeaderRecognitionException">
            <summary>设置 BaseRecognizer.GetErrorHeader(RecognitionException e) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.GetErrorMessage(Antlr.Runtime.RecognitionException,System.String[])">
            <summary>设置 Lexer.GetErrorMessage(RecognitionException e, String[] tokenNames) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.GetErrorMessageRecognitionExceptionStringArray">
            <summary>设置 Lexer.GetErrorMessage(RecognitionException e, String[] tokenNames) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.GetMissingSymbol(Antlr.Runtime.IIntStream,Antlr.Runtime.RecognitionException,System.Int32,Antlr.Runtime.BitSet)">
            <summary>设置 BaseRecognizer.GetMissingSymbol(IIntStream input, RecognitionException e, Int32 expectedTokenType, BitSet follow) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.GetMissingSymbolIIntStreamRecognitionExceptionInt32BitSet">
            <summary>设置 BaseRecognizer.GetMissingSymbol(IIntStream input, RecognitionException e, Int32 expectedTokenType, BitSet follow) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.GetRuleMemoization(System.Int32,System.Int32)">
            <summary>设置 BaseRecognizer.GetRuleMemoization(Int32 ruleIndex, Int32 ruleStartIndex) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.GetRuleMemoizationCacheSize">
            <summary>设置 BaseRecognizer.GetRuleMemoizationCacheSize() 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.GetRuleMemoizationCacheSize01">
            <summary>设置 BaseRecognizer.GetRuleMemoizationCacheSize() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.GetRuleMemoizationInt32Int32">
            <summary>设置 BaseRecognizer.GetRuleMemoization(Int32 ruleIndex, Int32 ruleStartIndex) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.GetTokenErrorDisplay(Antlr.Runtime.IToken)">
            <summary>设置 BaseRecognizer.GetTokenErrorDisplay(IToken t) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.GetTokenErrorDisplayIToken">
            <summary>设置 BaseRecognizer.GetTokenErrorDisplay(IToken t) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.GrammarFileNameGet">
            <summary>设置 CssLexer.get_GrammarFileName() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.InitDFAs">
            <summary>设置 CssLexer.InitDFAs() 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.InitDFAs01">
            <summary>设置 CssLexer.InitDFAs() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.InitializeStub">
            <summary>初始化 type StubCssLexer 的新实例</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.MTokens">
            <summary>设置 CssLexer.mTokens() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.Match(System.String)">
            <summary>设置 Lexer.Match(String s) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.Match(System.Int32)">
            <summary>设置 Lexer.Match(Int32 c) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.Match(Antlr.Runtime.IIntStream,System.Int32,Antlr.Runtime.BitSet)">
            <summary>设置 BaseRecognizer.Match(IIntStream input, Int32 ttype, BitSet follow) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.MatchAny">
            <summary>设置 Lexer.MatchAny() 的 存根</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.MatchAny(Antlr.Runtime.IIntStream)">
            <summary>设置 BaseRecognizer.MatchAny(IIntStream input) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.MatchAny01">
            <summary>设置 Lexer.MatchAny() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.MatchAnyIIntStream">
            <summary>设置 BaseRecognizer.MatchAny(IIntStream input) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.MatchIIntStreamInt32BitSet">
            <summary>设置 BaseRecognizer.Match(IIntStream input, Int32 ttype, BitSet follow) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.MatchInt32">
            <summary>设置 Lexer.Match(Int32 c) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.MatchRange(System.Int32,System.Int32)">
            <summary>设置 Lexer.MatchRange(Int32 a, Int32 b) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.MatchRangeInt32Int32">
            <summary>设置 Lexer.MatchRange(Int32 a, Int32 b) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.MatchString">
            <summary>设置 Lexer.Match(String s) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.Memoize(Antlr.Runtime.IIntStream,System.Int32,System.Int32)">
            <summary>设置 BaseRecognizer.Memoize(IIntStream input, Int32 ruleIndex, Int32 ruleStartIndex) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.MemoizeIIntStreamInt32Int32">
            <summary>设置 BaseRecognizer.Memoize(IIntStream input, Int32 ruleIndex, Int32 ruleStartIndex) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.MismatchIsMissingToken(Antlr.Runtime.IIntStream,Antlr.Runtime.BitSet)">
            <summary>设置 BaseRecognizer.MismatchIsMissingToken(IIntStream input, BitSet follow) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.MismatchIsMissingTokenIIntStreamBitSet">
            <summary>设置 BaseRecognizer.MismatchIsMissingToken(IIntStream input, BitSet follow) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.MismatchIsUnwantedToken(Antlr.Runtime.IIntStream,System.Int32)">
            <summary>设置 BaseRecognizer.MismatchIsUnwantedToken(IIntStream input, Int32 ttype) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.MismatchIsUnwantedTokenIIntStreamInt32">
            <summary>设置 BaseRecognizer.MismatchIsUnwantedToken(IIntStream input, Int32 ttype) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.NextToken">
            <summary>设置 Lexer.NextToken() 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.NextToken01">
            <summary>设置 Lexer.NextToken() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.NumberOfSyntaxErrorsGet">
            <summary>设置 BaseRecognizer.get_NumberOfSyntaxErrors() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.ParseNextToken">
            <summary>设置 Lexer.ParseNextToken() 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.ParseNextToken01">
            <summary>设置 Lexer.ParseNextToken() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.Recover(Antlr.Runtime.RecognitionException)">
            <summary>设置 Lexer.Recover(RecognitionException re) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.Recover(Antlr.Runtime.IIntStream,Antlr.Runtime.RecognitionException)">
            <summary>设置 BaseRecognizer.Recover(IIntStream input, RecognitionException re) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.RecoverFromMismatchedSet(Antlr.Runtime.IIntStream,Antlr.Runtime.RecognitionException,Antlr.Runtime.BitSet)">
            <summary>设置 BaseRecognizer.RecoverFromMismatchedSet(IIntStream input, RecognitionException e, BitSet follow) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.RecoverFromMismatchedSetIIntStreamRecognitionExceptionBitSet">
            <summary>设置 BaseRecognizer.RecoverFromMismatchedSet(IIntStream input, RecognitionException e, BitSet follow) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.RecoverFromMismatchedToken(Antlr.Runtime.IIntStream,System.Int32,Antlr.Runtime.BitSet)">
            <summary>设置 BaseRecognizer.RecoverFromMismatchedToken(IIntStream input, Int32 ttype, BitSet follow) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.RecoverFromMismatchedTokenIIntStreamInt32BitSet">
            <summary>设置 BaseRecognizer.RecoverFromMismatchedToken(IIntStream input, Int32 ttype, BitSet follow) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.RecoverIIntStreamRecognitionException">
            <summary>设置 BaseRecognizer.Recover(IIntStream input, RecognitionException re) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.RecoverRecognitionException">
            <summary>设置 Lexer.Recover(RecognitionException re) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.ReportError(Antlr.Runtime.RecognitionException)">
            <summary>设置 Lexer.ReportError(RecognitionException e) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.ReportErrorRecognitionException">
            <summary>设置 Lexer.ReportError(RecognitionException e) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.Reset">
            <summary>设置 Lexer.Reset() 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.Reset01">
            <summary>设置 Lexer.Reset() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.SetState(Antlr.Runtime.RecognizerSharedState)">
            <summary>设置 BaseRecognizer.SetState(RecognizerSharedState value) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.SetStateRecognizerSharedState">
            <summary>设置 BaseRecognizer.SetState(RecognizerSharedState value) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.Skip">
            <summary>设置 Lexer.Skip() 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.Skip01">
            <summary>设置 Lexer.Skip() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.SourceNameGet">
            <summary>设置 Lexer.get_SourceName() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.ToStrings(System.Collections.Generic.ICollection{Antlr.Runtime.IToken})">
            <summary>设置 BaseRecognizer.ToStrings(ICollection`1&lt;IToken&gt; tokens) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.ToStringsICollectionOfIToken">
            <summary>设置 BaseRecognizer.ToStrings(ICollection`1&lt;IToken&gt; tokens) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.TokenNamesGet">
            <summary>设置 BaseRecognizer.get_TokenNames() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.TraceIn(System.String,System.Int32)">
            <summary>设置 Lexer.TraceIn(String ruleName, Int32 ruleIndex) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.TraceIn(System.String,System.Int32,System.Object)">
            <summary>设置 BaseRecognizer.TraceIn(String ruleName, Int32 ruleIndex, Object inputSymbol) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.TraceInStringInt32">
            <summary>设置 Lexer.TraceIn(String ruleName, Int32 ruleIndex) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.TraceInStringInt32Object">
            <summary>设置 BaseRecognizer.TraceIn(String ruleName, Int32 ruleIndex, Object inputSymbol) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.TraceOut(System.String,System.Int32)">
            <summary>设置 Lexer.TraceOut(String ruleName, Int32 ruleIndex) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.TraceOut(System.String,System.Int32,System.Object)">
            <summary>设置 BaseRecognizer.TraceOut(String ruleName, Int32 ruleIndex, Object inputSymbol) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.TraceOutStringInt32">
            <summary>设置 Lexer.TraceOut(String ruleName, Int32 ruleIndex) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssLexer.TraceOutStringInt32Object">
            <summary>设置 BaseRecognizer.TraceOut(String ruleName, Int32 ruleIndex, Object inputSymbol) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssLexer.mTokens">
            <summary>设置 CssLexer.mTokens() 的 存根</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.StubCssLexer.BacktrackingLevel">
            <summary>设置 BaseRecognizer.get_BacktrackingLevel() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.StubCssLexer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.StubCssLexer.CharIndex">
            <summary>设置 Lexer.get_CharIndex() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.StubCssLexer.CharStream">
            <summary>设置 Lexer.get_CharStream() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.StubCssLexer.DebugListener">
            <summary>设置 BaseRecognizer.get_DebugListener() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.StubCssLexer.Failed">
            <summary>设置 BaseRecognizer.get_Failed() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.StubCssLexer.GrammarFileName">
            <summary>设置 CssLexer.get_GrammarFileName() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.StubCssLexer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.StubCssLexer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.StubCssLexer.NumberOfSyntaxErrors">
            <summary>设置 BaseRecognizer.get_NumberOfSyntaxErrors() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.StubCssLexer.SourceName">
            <summary>设置 Lexer.get_SourceName() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.StubCssLexer.TokenNames">
            <summary>设置 BaseRecognizer.get_TokenNames() 的 stub</summary>
        </member>
        <member name="T:WebGrease.Css.Fakes.StubCssParser">
            <summary>WebGrease.Css.CssParser 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.#ctor(Antlr.Runtime.ITokenStream)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.#ctor(Antlr.Runtime.ITokenStream,Antlr.Runtime.RecognizerSharedState)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.AlreadyParsedRule(Antlr.Runtime.IIntStream,System.Int32)">
            <summary>设置 BaseRecognizer.AlreadyParsedRule(IIntStream input, Int32 ruleIndex) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.AlreadyParsedRuleIIntStreamInt32">
            <summary>设置 BaseRecognizer.AlreadyParsedRule(IIntStream input, Int32 ruleIndex) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.AttachBackingFieldToBacktrackingLevel">
            <summary>附加委托以将 StubCssParser.BacktrackingLevel 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.AttachBackingFieldToTokenStream">
            <summary>附加委托以将 StubCssParser.TokenStream 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.BacktrackingLevelGet">
            <summary>设置 BaseRecognizer.get_BacktrackingLevel() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.BacktrackingLevelSetInt32">
            <summary>设置 BaseRecognizer.set_BacktrackingLevel(Int32 value) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.BeginResync">
            <summary>设置 BaseRecognizer.BeginResync() 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.BeginResync01">
            <summary>设置 BaseRecognizer.BeginResync() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.CombineFollows(System.Boolean)">
            <summary>设置 BaseRecognizer.CombineFollows(Boolean exact) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.CombineFollowsBoolean">
            <summary>设置 BaseRecognizer.CombineFollows(Boolean exact) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.ComputeContextSensitiveRuleFOLLOW">
            <summary>设置 BaseRecognizer.ComputeContextSensitiveRuleFOLLOW() 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.ComputeContextSensitiveRuleFOLLOW01">
            <summary>设置 BaseRecognizer.ComputeContextSensitiveRuleFOLLOW() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.ComputeErrorRecoverySet">
            <summary>设置 BaseRecognizer.ComputeErrorRecoverySet() 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.ComputeErrorRecoverySet01">
            <summary>设置 BaseRecognizer.ComputeErrorRecoverySet() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.ConsumeUntil(Antlr.Runtime.IIntStream,Antlr.Runtime.BitSet)">
            <summary>设置 BaseRecognizer.ConsumeUntil(IIntStream input, BitSet set) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.ConsumeUntil(Antlr.Runtime.IIntStream,System.Int32)">
            <summary>设置 BaseRecognizer.ConsumeUntil(IIntStream input, Int32 tokenType) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.ConsumeUntilIIntStreamBitSet">
            <summary>设置 BaseRecognizer.ConsumeUntil(IIntStream input, BitSet set) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.ConsumeUntilIIntStreamInt32">
            <summary>设置 BaseRecognizer.ConsumeUntil(IIntStream input, Int32 tokenType) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.DebugBeginBacktrack(System.Int32)">
            <summary>设置 BaseRecognizer.DebugBeginBacktrack(Int32 level) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.DebugBeginBacktrackInt32">
            <summary>设置 BaseRecognizer.DebugBeginBacktrack(Int32 level) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.DebugEndBacktrack(System.Int32,System.Boolean)">
            <summary>设置 BaseRecognizer.DebugEndBacktrack(Int32 level, Boolean successful) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.DebugEndBacktrackInt32Boolean">
            <summary>设置 BaseRecognizer.DebugEndBacktrack(Int32 level, Boolean successful) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.DebugEnterAlt(System.Int32)">
            <summary>设置 BaseRecognizer.DebugEnterAlt(Int32 alt) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.DebugEnterAltInt32">
            <summary>设置 BaseRecognizer.DebugEnterAlt(Int32 alt) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.DebugEnterDecision(System.Int32,System.Boolean)">
            <summary>设置 BaseRecognizer.DebugEnterDecision(Int32 decisionNumber, Boolean couldBacktrack) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.DebugEnterDecisionInt32Boolean">
            <summary>设置 BaseRecognizer.DebugEnterDecision(Int32 decisionNumber, Boolean couldBacktrack) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.DebugEnterRule(System.String,System.String)">
            <summary>设置 BaseRecognizer.DebugEnterRule(String grammarFileName, String ruleName) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.DebugEnterRuleStringString">
            <summary>设置 BaseRecognizer.DebugEnterRule(String grammarFileName, String ruleName) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.DebugEnterSubRule(System.Int32)">
            <summary>设置 BaseRecognizer.DebugEnterSubRule(Int32 decisionNumber) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.DebugEnterSubRuleInt32">
            <summary>设置 BaseRecognizer.DebugEnterSubRule(Int32 decisionNumber) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.DebugExitDecision(System.Int32)">
            <summary>设置 BaseRecognizer.DebugExitDecision(Int32 decisionNumber) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.DebugExitDecisionInt32">
            <summary>设置 BaseRecognizer.DebugExitDecision(Int32 decisionNumber) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.DebugExitRule(System.String,System.String)">
            <summary>设置 BaseRecognizer.DebugExitRule(String grammarFileName, String ruleName) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.DebugExitRuleStringString">
            <summary>设置 BaseRecognizer.DebugExitRule(String grammarFileName, String ruleName) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.DebugExitSubRule(System.Int32)">
            <summary>设置 BaseRecognizer.DebugExitSubRule(Int32 decisionNumber) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.DebugExitSubRuleInt32">
            <summary>设置 BaseRecognizer.DebugExitSubRule(Int32 decisionNumber) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.DebugListenerGet">
            <summary>设置 BaseRecognizer.get_DebugListener() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.DebugLocation(System.Int32,System.Int32)">
            <summary>设置 BaseRecognizer.DebugLocation(Int32 line, Int32 charPositionInLine) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.DebugLocationInt32Int32">
            <summary>设置 BaseRecognizer.DebugLocation(Int32 line, Int32 charPositionInLine) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.DebugRecognitionException(Antlr.Runtime.RecognitionException)">
            <summary>设置 BaseRecognizer.DebugRecognitionException(RecognitionException ex) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.DebugRecognitionExceptionRecognitionException">
            <summary>设置 BaseRecognizer.DebugRecognitionException(RecognitionException ex) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.DebugSemanticPredicate(System.Boolean,System.String)">
            <summary>设置 BaseRecognizer.DebugSemanticPredicate(Boolean result, String predicate) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.DebugSemanticPredicateBooleanString">
            <summary>设置 BaseRecognizer.DebugSemanticPredicate(Boolean result, String predicate) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.DisplayRecognitionError(System.String[],Antlr.Runtime.RecognitionException)">
            <summary>设置 BaseRecognizer.DisplayRecognitionError(String[] tokenNames, RecognitionException e) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.DisplayRecognitionErrorStringArrayRecognitionException">
            <summary>设置 BaseRecognizer.DisplayRecognitionError(String[] tokenNames, RecognitionException e) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.EmitErrorMessage(System.String)">
            <summary>设置 BaseRecognizer.EmitErrorMessage(String msg) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.EmitErrorMessageString">
            <summary>设置 BaseRecognizer.EmitErrorMessage(String msg) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.EndResync">
            <summary>设置 BaseRecognizer.EndResync() 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.EndResync01">
            <summary>设置 BaseRecognizer.EndResync() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.FailedGet">
            <summary>设置 BaseRecognizer.get_Failed() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.GetCurrentInputSymbol(Antlr.Runtime.IIntStream)">
            <summary>设置 Parser.GetCurrentInputSymbol(IIntStream input) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.GetCurrentInputSymbolIIntStream">
            <summary>设置 Parser.GetCurrentInputSymbol(IIntStream input) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.GetErrorHeader(Antlr.Runtime.RecognitionException)">
            <summary>设置 BaseRecognizer.GetErrorHeader(RecognitionException e) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.GetErrorHeaderRecognitionException">
            <summary>设置 BaseRecognizer.GetErrorHeader(RecognitionException e) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.GetErrorMessage(Antlr.Runtime.RecognitionException,System.String[])">
            <summary>设置 BaseRecognizer.GetErrorMessage(RecognitionException e, String[] tokenNames) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.GetErrorMessageRecognitionExceptionStringArray">
            <summary>设置 BaseRecognizer.GetErrorMessage(RecognitionException e, String[] tokenNames) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.GetMissingSymbol(Antlr.Runtime.IIntStream,Antlr.Runtime.RecognitionException,System.Int32,Antlr.Runtime.BitSet)">
            <summary>设置 Parser.GetMissingSymbol(IIntStream input, RecognitionException e, Int32 expectedTokenType, BitSet follow) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.GetMissingSymbolIIntStreamRecognitionExceptionInt32BitSet">
            <summary>设置 Parser.GetMissingSymbol(IIntStream input, RecognitionException e, Int32 expectedTokenType, BitSet follow) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.GetRuleMemoization(System.Int32,System.Int32)">
            <summary>设置 BaseRecognizer.GetRuleMemoization(Int32 ruleIndex, Int32 ruleStartIndex) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.GetRuleMemoizationCacheSize">
            <summary>设置 BaseRecognizer.GetRuleMemoizationCacheSize() 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.GetRuleMemoizationCacheSize01">
            <summary>设置 BaseRecognizer.GetRuleMemoizationCacheSize() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.GetRuleMemoizationInt32Int32">
            <summary>设置 BaseRecognizer.GetRuleMemoization(Int32 ruleIndex, Int32 ruleStartIndex) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.GetTokenErrorDisplay(Antlr.Runtime.IToken)">
            <summary>设置 BaseRecognizer.GetTokenErrorDisplay(IToken t) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.GetTokenErrorDisplayIToken">
            <summary>设置 BaseRecognizer.GetTokenErrorDisplay(IToken t) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.GrammarFileNameGet">
            <summary>设置 CssParser.get_GrammarFileName() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.InitDFAs">
            <summary>设置 CssParser.InitDFAs() 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.InitDFAs01">
            <summary>设置 CssParser.InitDFAs() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.InitializeStub">
            <summary>初始化 type StubCssParser 的新实例</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.Match(Antlr.Runtime.IIntStream,System.Int32,Antlr.Runtime.BitSet)">
            <summary>设置 BaseRecognizer.Match(IIntStream input, Int32 ttype, BitSet follow) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.MatchAny(Antlr.Runtime.IIntStream)">
            <summary>设置 BaseRecognizer.MatchAny(IIntStream input) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.MatchAnyIIntStream">
            <summary>设置 BaseRecognizer.MatchAny(IIntStream input) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.MatchIIntStreamInt32BitSet">
            <summary>设置 BaseRecognizer.Match(IIntStream input, Int32 ttype, BitSet follow) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.Memoize(Antlr.Runtime.IIntStream,System.Int32,System.Int32)">
            <summary>设置 BaseRecognizer.Memoize(IIntStream input, Int32 ruleIndex, Int32 ruleStartIndex) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.MemoizeIIntStreamInt32Int32">
            <summary>设置 BaseRecognizer.Memoize(IIntStream input, Int32 ruleIndex, Int32 ruleStartIndex) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.MismatchIsMissingToken(Antlr.Runtime.IIntStream,Antlr.Runtime.BitSet)">
            <summary>设置 BaseRecognizer.MismatchIsMissingToken(IIntStream input, BitSet follow) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.MismatchIsMissingTokenIIntStreamBitSet">
            <summary>设置 BaseRecognizer.MismatchIsMissingToken(IIntStream input, BitSet follow) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.MismatchIsUnwantedToken(Antlr.Runtime.IIntStream,System.Int32)">
            <summary>设置 BaseRecognizer.MismatchIsUnwantedToken(IIntStream input, Int32 ttype) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.MismatchIsUnwantedTokenIIntStreamInt32">
            <summary>设置 BaseRecognizer.MismatchIsUnwantedToken(IIntStream input, Int32 ttype) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.NumberOfSyntaxErrorsGet">
            <summary>设置 BaseRecognizer.get_NumberOfSyntaxErrors() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.Recover(Antlr.Runtime.IIntStream,Antlr.Runtime.RecognitionException)">
            <summary>设置 BaseRecognizer.Recover(IIntStream input, RecognitionException re) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.RecoverFromMismatchedSet(Antlr.Runtime.IIntStream,Antlr.Runtime.RecognitionException,Antlr.Runtime.BitSet)">
            <summary>设置 BaseRecognizer.RecoverFromMismatchedSet(IIntStream input, RecognitionException e, BitSet follow) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.RecoverFromMismatchedSetIIntStreamRecognitionExceptionBitSet">
            <summary>设置 BaseRecognizer.RecoverFromMismatchedSet(IIntStream input, RecognitionException e, BitSet follow) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.RecoverFromMismatchedToken(Antlr.Runtime.IIntStream,System.Int32,Antlr.Runtime.BitSet)">
            <summary>设置 BaseRecognizer.RecoverFromMismatchedToken(IIntStream input, Int32 ttype, BitSet follow) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.RecoverFromMismatchedTokenIIntStreamInt32BitSet">
            <summary>设置 BaseRecognizer.RecoverFromMismatchedToken(IIntStream input, Int32 ttype, BitSet follow) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.RecoverIIntStreamRecognitionException">
            <summary>设置 BaseRecognizer.Recover(IIntStream input, RecognitionException re) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.ReportError(Antlr.Runtime.RecognitionException)">
            <summary>设置 CssParser.ReportError(RecognitionException e) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.ReportErrorRecognitionException">
            <summary>设置 CssParser.ReportError(RecognitionException e) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.Reset">
            <summary>设置 Parser.Reset() 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.Reset01">
            <summary>设置 Parser.Reset() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.SetState(Antlr.Runtime.RecognizerSharedState)">
            <summary>设置 BaseRecognizer.SetState(RecognizerSharedState value) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.SetStateRecognizerSharedState">
            <summary>设置 BaseRecognizer.SetState(RecognizerSharedState value) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.SourceNameGet">
            <summary>设置 Parser.get_SourceName() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.ToStrings(System.Collections.Generic.ICollection{Antlr.Runtime.IToken})">
            <summary>设置 BaseRecognizer.ToStrings(ICollection`1&lt;IToken&gt; tokens) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.ToStringsICollectionOfIToken">
            <summary>设置 BaseRecognizer.ToStrings(ICollection`1&lt;IToken&gt; tokens) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.TokenNamesGet">
            <summary>设置 CssParser.get_TokenNames() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.TokenStreamGet">
            <summary>设置 Parser.get_TokenStream() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.TokenStreamSetITokenStream">
            <summary>设置 Parser.set_TokenStream(ITokenStream value) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.TraceIn(System.String,System.Int32)">
            <summary>设置 Parser.TraceIn(String ruleName, Int32 ruleIndex) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.TraceIn(System.String,System.Int32,System.Object)">
            <summary>设置 BaseRecognizer.TraceIn(String ruleName, Int32 ruleIndex, Object inputSymbol) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.TraceInStringInt32">
            <summary>设置 Parser.TraceIn(String ruleName, Int32 ruleIndex) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.TraceInStringInt32Object">
            <summary>设置 BaseRecognizer.TraceIn(String ruleName, Int32 ruleIndex, Object inputSymbol) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.TraceOut(System.String,System.Int32)">
            <summary>设置 Parser.TraceOut(String ruleName, Int32 ruleIndex) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Css.Fakes.StubCssParser.TraceOut(System.String,System.Int32,System.Object)">
            <summary>设置 BaseRecognizer.TraceOut(String ruleName, Int32 ruleIndex, Object inputSymbol) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.TraceOutStringInt32">
            <summary>设置 Parser.TraceOut(String ruleName, Int32 ruleIndex) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.Fakes.StubCssParser.TraceOutStringInt32Object">
            <summary>设置 BaseRecognizer.TraceOut(String ruleName, Int32 ruleIndex, Object inputSymbol) 的 stub</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.StubCssParser.BacktrackingLevel">
            <summary>设置 BaseRecognizer.get_BacktrackingLevel() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.StubCssParser.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.StubCssParser.DebugListener">
            <summary>设置 BaseRecognizer.get_DebugListener() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.StubCssParser.Failed">
            <summary>设置 BaseRecognizer.get_Failed() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.StubCssParser.GrammarFileName">
            <summary>设置 CssParser.get_GrammarFileName() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.StubCssParser.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.StubCssParser.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.StubCssParser.NumberOfSyntaxErrors">
            <summary>设置 BaseRecognizer.get_NumberOfSyntaxErrors() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.StubCssParser.SourceName">
            <summary>设置 Parser.get_SourceName() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.StubCssParser.TokenNames">
            <summary>设置 CssParser.get_TokenNames() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Css.Fakes.StubCssParser.TokenStream">
            <summary>设置 Parser.get_TokenStream() 的 stub</summary>
        </member>
        <member name="T:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssembleException">
            <summary>WebGrease.Css.ImageAssemblyAnalysis.ImageAssembleException 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssembleException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssembleException.#ctor(WebGrease.Css.ImageAssemblyAnalysis.ImageAssembleException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssembleException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssembleException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssembleException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssembleException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssembleException.Constructor">
            <summary>设置 ImageAssembleException.ImageAssembleException() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssembleException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 ImageAssembleException.ImageAssembleException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssembleException.ConstructorString">
            <summary>设置 ImageAssembleException.ImageAssembleException(String message) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssembleException.ConstructorStringException">
            <summary>设置 ImageAssembleException.ImageAssembleException(String message, Exception innerException) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssembleException.ConstructorStringStringString">
            <summary>设置 ImageAssembleException.ImageAssembleException(String imageName, String spriteName, String message) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssembleException.ConstructorStringStringStringException">
            <summary>设置 ImageAssembleException.ImageAssembleException(String imageName, String spriteName, String message, Exception innerException) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssembleException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 ImageAssembleException.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssembleException.ImageNameGet">
            <summary>设置 ImageAssembleException.get_ImageName() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssembleException.ImageNameSetString">
            <summary>设置 ImageAssembleException.set_ImageName(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssembleException.SpriteNameGet">
            <summary>设置 ImageAssembleException.get_SpriteName() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssembleException.SpriteNameSetString">
            <summary>设置 ImageAssembleException.set_SpriteName(String value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssembleException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssembleException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 ImageAssembleException.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssembleException.AllInstances.ImageNameGet">
            <summary>设置 ImageAssembleException.get_ImageName() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssembleException.AllInstances.ImageNameSetString">
            <summary>设置 ImageAssembleException.set_ImageName(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssembleException.AllInstances.SpriteNameGet">
            <summary>设置 ImageAssembleException.get_SpriteName() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssembleException.AllInstances.SpriteNameSetString">
            <summary>设置 ImageAssembleException.set_SpriteName(String value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssemblyScanInput">
            <summary>WebGrease.Css.ImageAssemblyAnalysis.ImageAssemblyScanInput 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssemblyScanInput.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssemblyScanInput.#ctor(WebGrease.Css.ImageAssemblyAnalysis.ImageAssemblyScanInput)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssemblyScanInput.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssemblyScanInput.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssemblyScanInput.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssemblyScanInput.BucketNameGet">
            <summary>设置 ImageAssemblyScanInput.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssemblyScanInput.BucketNameSetString">
            <summary>设置 ImageAssemblyScanInput.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssemblyScanInput.ConstructorStringReadOnlyCollectionOfString">
            <summary>设置 ImageAssemblyScanInput.ImageAssemblyScanInput(String bucketName, ReadOnlyCollection`1&lt;String&gt; imagesInBucket) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssemblyScanInput.ImagesInBucketGet">
            <summary>设置 ImageAssemblyScanInput.get_ImagesInBucket() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssemblyScanInput.ImagesInBucketSetReadOnlyCollectionOfString">
            <summary>设置 ImageAssemblyScanInput.set_ImagesInBucket(ReadOnlyCollection`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssemblyScanInput.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssemblyScanInput.AllInstances.BucketNameGet">
            <summary>设置 ImageAssemblyScanInput.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssemblyScanInput.AllInstances.BucketNameSetString">
            <summary>设置 ImageAssemblyScanInput.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssemblyScanInput.AllInstances.ImagesInBucketGet">
            <summary>设置 ImageAssemblyScanInput.get_ImagesInBucket() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.Fakes.ShimImageAssemblyScanInput.AllInstances.ImagesInBucketSetReadOnlyCollectionOfString">
            <summary>设置 ImageAssemblyScanInput.set_ImagesInBucket(ReadOnlyCollection`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.ImageAssemblyAnalysis.Fakes.StubImageAssembleException">
            <summary>WebGrease.Css.ImageAssemblyAnalysis.ImageAssembleException 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Css.ImageAssemblyAnalysis.Fakes.StubImageAssembleException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Css.ImageAssemblyAnalysis.Fakes.StubImageAssembleException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Css.ImageAssemblyAnalysis.Fakes.StubImageAssembleException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Css.ImageAssemblyAnalysis.Fakes.StubImageAssembleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Css.ImageAssemblyAnalysis.Fakes.StubImageAssembleException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubImageAssembleException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WebGrease.Css.ImageAssemblyAnalysis.Fakes.StubImageAssembleException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubImageAssembleException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:WebGrease.Css.ImageAssemblyAnalysis.Fakes.StubImageAssembleException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.ImageAssemblyAnalysis.Fakes.StubImageAssembleException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.ImageAssemblyAnalysis.Fakes.StubImageAssembleException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.ImageAssemblyAnalysis.Fakes.StubImageAssembleException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 ImageAssembleException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.ImageAssemblyAnalysis.Fakes.StubImageAssembleException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 ImageAssembleException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.ImageAssemblyAnalysis.Fakes.StubImageAssembleException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.ImageAssemblyAnalysis.Fakes.StubImageAssembleException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.ImageAssemblyAnalysis.Fakes.StubImageAssembleException.InitializeStub">
            <summary>初始化 type StubImageAssembleException 的新实例</summary>
        </member>
        <member name="F:WebGrease.Css.ImageAssemblyAnalysis.Fakes.StubImageAssembleException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.ImageAssemblyAnalysis.Fakes.StubImageAssembleException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.ImageAssemblyAnalysis.Fakes.StubImageAssembleException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Css.ImageAssemblyAnalysis.Fakes.StubImageAssembleException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.ImageAssemblyAnalysis.Fakes.StubImageAssembleException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.ImageAssemblyAnalysis.Fakes.StubImageAssembleException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.Fakes.StubImageAssembleException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.Fakes.StubImageAssembleException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.Fakes.StubImageAssembleException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.Fakes.StubImageAssembleException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.Fakes.StubImageAssembleException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.Fakes.StubImageAssembleException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.Fakes.StubImageAssembleException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.Fakes.StubImageAssembleException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:WebGrease.Css.ImageAssemblyAnalysis.LogModel.Fakes.ShimImageAssemblyAnalysisLog">
            <summary>WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysisLog 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.ImageAssemblyAnalysis.LogModel.Fakes.ShimImageAssemblyAnalysisLog.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.ImageAssemblyAnalysis.LogModel.Fakes.ShimImageAssemblyAnalysisLog.#ctor(WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysisLog)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.ImageAssemblyAnalysis.LogModel.Fakes.ShimImageAssemblyAnalysisLog.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.ImageAssemblyAnalysis.LogModel.Fakes.ShimImageAssemblyAnalysisLog.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.LogModel.Fakes.ShimImageAssemblyAnalysisLog.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.LogModel.Fakes.ShimImageAssemblyAnalysisLog.Constructor">
            <summary>设置 ImageAssemblyAnalysisLog.ImageAssemblyAnalysisLog() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.LogModel.Fakes.ShimImageAssemblyAnalysisLog.SaveString">
            <summary>设置 ImageAssemblyAnalysisLog.Save(String path) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.ImageAssemblyAnalysis.LogModel.Fakes.ShimImageAssemblyAnalysisLog.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.LogModel.Fakes.ShimImageAssemblyAnalysisLog.AllInstances.SaveString">
            <summary>设置 ImageAssemblyAnalysisLog.Save(String path) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.ImageAssemblyAnalysis.LogModel.Fakes.StubImageAssemblyAnalysisLog">
            <summary>WebGrease.Css.ImageAssemblyAnalysis.LogModel.ImageAssemblyAnalysisLog 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Css.ImageAssemblyAnalysis.LogModel.Fakes.StubImageAssemblyAnalysisLog.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Css.ImageAssemblyAnalysis.LogModel.Fakes.StubImageAssemblyAnalysisLog.InitializeStub">
            <summary>初始化 type StubImageAssemblyAnalysisLog 的新实例</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.LogModel.Fakes.StubImageAssemblyAnalysisLog.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.LogModel.Fakes.StubImageAssemblyAnalysisLog.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WebGrease.Css.ImageAssemblyAnalysis.LogModel.Fakes.StubImageAssemblyAnalysisLog.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WebGrease.Css.Visitor.Fakes.ShimColorOptimizationVisitor">
            <summary>WebGrease.Css.Visitor.ColorOptimizationVisitor 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimColorOptimizationVisitor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimColorOptimizationVisitor.#ctor(WebGrease.Css.Visitor.ColorOptimizationVisitor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimColorOptimizationVisitor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimColorOptimizationVisitor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimColorOptimizationVisitor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimColorOptimizationVisitor.Constructor">
            <summary>设置 ColorOptimizationVisitor.ColorOptimizationVisitor() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimColorOptimizationVisitor.IsCommaNumberTermWithOperatorNode">
            <summary>设置 ColorOptimizationVisitor.IsCommaNumber(TermWithOperatorNode termWithOperatorNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimColorOptimizationVisitor.IsNumberTermTermNode">
            <summary>设置 ColorOptimizationVisitor.IsNumberTerm(TermNode termNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimColorOptimizationVisitor.IsThreeNumberArgumentsExprNode">
            <summary>设置 ColorOptimizationVisitor.IsThreeNumberArguments(ExprNode exprNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimColorOptimizationVisitor.StaticConstructor">
            <summary>设置 ColorOptimizationVisitor.ColorOptimizationVisitor() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimColorOptimizationVisitor.TryGetColorFragmentTermNodeInt32Out">
            <summary>设置 ColorOptimizationVisitor.TryGetColorFragment(TermNode termNode, Int32&amp; fragment) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimColorOptimizationVisitor.TryGetRgbExprNodeInt32OutInt32OutInt32Out">
            <summary>设置 ColorOptimizationVisitor.TryGetRgb(ExprNode exprNode, Int32&amp; red, Int32&amp; green, Int32&amp; blue) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimColorOptimizationVisitor.VisitTermNodeTermNode">
            <summary>设置 ColorOptimizationVisitor.VisitTermNode(TermNode termNode) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Visitor.Fakes.ShimColorOptimizationVisitor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimColorOptimizationVisitor.AllInstances.VisitTermNodeTermNode">
            <summary>设置 ColorOptimizationVisitor.VisitTermNode(TermNode termNode) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Visitor.Fakes.ShimExcludePropertyVisitor">
            <summary>WebGrease.Css.Visitor.ExcludePropertyVisitor 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimExcludePropertyVisitor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimExcludePropertyVisitor.#ctor(WebGrease.Css.Visitor.ExcludePropertyVisitor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimExcludePropertyVisitor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimExcludePropertyVisitor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimExcludePropertyVisitor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimExcludePropertyVisitor.Constructor">
            <summary>设置 ExcludePropertyVisitor.ExcludePropertyVisitor() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimExcludePropertyVisitor.VisitDeclarationNodeDeclarationNode">
            <summary>设置 ExcludePropertyVisitor.VisitDeclarationNode(DeclarationNode declarationNode) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Visitor.Fakes.ShimExcludePropertyVisitor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimExcludePropertyVisitor.AllInstances.VisitDeclarationNodeDeclarationNode">
            <summary>设置 ExcludePropertyVisitor.VisitDeclarationNode(DeclarationNode declarationNode) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Visitor.Fakes.ShimFloatOptimizationVisitor">
            <summary>WebGrease.Css.Visitor.FloatOptimizationVisitor 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimFloatOptimizationVisitor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimFloatOptimizationVisitor.#ctor(WebGrease.Css.Visitor.FloatOptimizationVisitor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimFloatOptimizationVisitor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimFloatOptimizationVisitor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimFloatOptimizationVisitor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimFloatOptimizationVisitor.Constructor">
            <summary>设置 FloatOptimizationVisitor.FloatOptimizationVisitor() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimFloatOptimizationVisitor.StaticConstructor">
            <summary>设置 FloatOptimizationVisitor.FloatOptimizationVisitor() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimFloatOptimizationVisitor.VisitTermNodeTermNode">
            <summary>设置 FloatOptimizationVisitor.VisitTermNode(TermNode termNode) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Visitor.Fakes.ShimFloatOptimizationVisitor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimFloatOptimizationVisitor.AllInstances.VisitTermNodeTermNode">
            <summary>设置 FloatOptimizationVisitor.VisitTermNode(TermNode termNode) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor">
            <summary>WebGrease.Css.Visitor.ImageAssemblyScanVisitor 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor.#ctor(WebGrease.Css.Visitor.ImageAssemblyScanVisitor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor.ConstructorStringIEnumerableOfStringIEnumerableOfImageAssemblyScanInputBooleanStringDoubleIDictionaryOfStringString">
            <summary>设置 ImageAssemblyScanVisitor.ImageAssemblyScanVisitor(String cssPath, IEnumerable`1&lt;String&gt; imageReferencesToIgnore, IEnumerable`1&lt;ImageAssemblyScanInput&gt; additionalImageAssemblyBuckets, Boolean ignoreImagesWithNonDefaultBackgroundSize, String outputUnit, Double outputUnitFactor, IDictionary`2&lt;String,String&gt; availableImageSources) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor.ContextGet">
            <summary>设置 ImageAssemblyScanVisitor.get_Context() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor.ContextSetIWebGreaseContext">
            <summary>设置 ImageAssemblyScanVisitor.set_Context(IWebGreaseContext value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor.ImageAssemblyAnalysisLogGet">
            <summary>设置 ImageAssemblyScanVisitor.get_ImageAssemblyAnalysisLog() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor.VisitBackgroundDeclarationNodeIEnumerableOfDeclarationNodeAstNode">
            <summary>设置 ImageAssemblyScanVisitor.VisitBackgroundDeclarationNode(IEnumerable`1&lt;DeclarationNode&gt; declarations, AstNode parent) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor.VisitMediaNodeMediaNode">
            <summary>设置 ImageAssemblyScanVisitor.VisitMediaNode(MediaNode mediaNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor.VisitPageNodePageNode">
            <summary>设置 ImageAssemblyScanVisitor.VisitPageNode(PageNode pageNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor.VisitRulesetNodeRulesetNode">
            <summary>设置 ImageAssemblyScanVisitor.VisitRulesetNode(RulesetNode rulesetNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor.VisitStyleSheetNodeStyleSheetNode">
            <summary>设置 ImageAssemblyScanVisitor.VisitStyleSheetNode(StyleSheetNode styleSheet) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor.VisitTermWithOperatorNodeTermWithOperatorNode">
            <summary>设置 ImageAssemblyScanVisitor.VisitTermWithOperatorNode(TermWithOperatorNode termWithOperatorNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor._VisitBackgroundDeclarationNodeb__9String">
            <summary>设置 ImageAssemblyScanVisitor.&lt;VisitBackgroundDeclarationNode&gt;b__9(String imagesCriteriaFailedUrl) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor._VisitMediaNodeb__7RulesetNode">
            <summary>设置 ImageAssemblyScanVisitor.&lt;VisitMediaNode&gt;b__7(RulesetNode rulesetNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor._VisitMediaNodeb__8PageNode">
            <summary>设置 ImageAssemblyScanVisitor.&lt;VisitMediaNode&gt;b__8(PageNode pageNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor._VisitStyleSheetNodeb__6StyleSheetRuleNode">
            <summary>设置 ImageAssemblyScanVisitor.&lt;VisitStyleSheetNode&gt;b__6(StyleSheetRuleNode styleSheetRuleNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor._ctorb__1String">
            <summary>设置 ImageAssemblyScanVisitor.&lt;.ctor&gt;b__1(String imageReferenceToIgnore) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor.AllInstances.ContextGet">
            <summary>设置 ImageAssemblyScanVisitor.get_Context() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor.AllInstances.ContextSetIWebGreaseContext">
            <summary>设置 ImageAssemblyScanVisitor.set_Context(IWebGreaseContext value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor.AllInstances.ImageAssemblyAnalysisLogGet">
            <summary>设置 ImageAssemblyScanVisitor.get_ImageAssemblyAnalysisLog() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor.AllInstances.VisitBackgroundDeclarationNodeIEnumerableOfDeclarationNodeAstNode">
            <summary>设置 ImageAssemblyScanVisitor.VisitBackgroundDeclarationNode(IEnumerable`1&lt;DeclarationNode&gt; declarations, AstNode parent) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor.AllInstances.VisitMediaNodeMediaNode">
            <summary>设置 ImageAssemblyScanVisitor.VisitMediaNode(MediaNode mediaNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor.AllInstances.VisitPageNodePageNode">
            <summary>设置 ImageAssemblyScanVisitor.VisitPageNode(PageNode pageNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor.AllInstances.VisitRulesetNodeRulesetNode">
            <summary>设置 ImageAssemblyScanVisitor.VisitRulesetNode(RulesetNode rulesetNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor.AllInstances.VisitStyleSheetNodeStyleSheetNode">
            <summary>设置 ImageAssemblyScanVisitor.VisitStyleSheetNode(StyleSheetNode styleSheet) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor.AllInstances.VisitTermWithOperatorNodeTermWithOperatorNode">
            <summary>设置 ImageAssemblyScanVisitor.VisitTermWithOperatorNode(TermWithOperatorNode termWithOperatorNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor.AllInstances._VisitBackgroundDeclarationNodeb__9String">
            <summary>设置 ImageAssemblyScanVisitor.&lt;VisitBackgroundDeclarationNode&gt;b__9(String imagesCriteriaFailedUrl) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor.AllInstances._VisitMediaNodeb__7RulesetNode">
            <summary>设置 ImageAssemblyScanVisitor.&lt;VisitMediaNode&gt;b__7(RulesetNode rulesetNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor.AllInstances._VisitMediaNodeb__8PageNode">
            <summary>设置 ImageAssemblyScanVisitor.&lt;VisitMediaNode&gt;b__8(PageNode pageNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor.AllInstances._VisitStyleSheetNodeb__6StyleSheetRuleNode">
            <summary>设置 ImageAssemblyScanVisitor.&lt;VisitStyleSheetNode&gt;b__6(StyleSheetRuleNode styleSheetRuleNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyScanVisitor.AllInstances._ctorb__1String">
            <summary>设置 ImageAssemblyScanVisitor.&lt;.ctor&gt;b__1(String imageReferenceToIgnore) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyUpdateVisitor">
            <summary>WebGrease.Css.Visitor.ImageAssemblyUpdateVisitor 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyUpdateVisitor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyUpdateVisitor.#ctor(WebGrease.Css.Visitor.ImageAssemblyUpdateVisitor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyUpdateVisitor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyUpdateVisitor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyUpdateVisitor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyUpdateVisitor.CreateDebugDeclarationCommentStringString">
            <summary>设置 ImageAssemblyUpdateVisitor.CreateDebugDeclarationComment(String propertyName, String propertyValue) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyUpdateVisitor.CreateDebugSpritePositionCommentNullableOfInt32NullableOfInt32">
            <summary>设置 ImageAssemblyUpdateVisitor.CreateDebugSpritePositionComment(Nullable`1&lt;Int32&gt; xPixels, Nullable`1&lt;Int32&gt; yPixels) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyUpdateVisitor.CreateDpiCommentDouble">
            <summary>设置 ImageAssemblyUpdateVisitor.CreateDpiComment(Double dpi) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyUpdateVisitor.UpdateDeclarationsIListOfDeclarationNodeDeclarationNodeDeclarationNode">
            <summary>设置 ImageAssemblyUpdateVisitor.UpdateDeclarations(IList`1&lt;DeclarationNode&gt; declarationNodes, DeclarationNode originalDeclarationNode, DeclarationNode updatedDeclarationNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyUpdateVisitor.UpdateDeclarationsReadOnlyCollectionOfDeclarationNodeAstNode">
            <summary>设置 ImageAssemblyUpdateVisitor.UpdateDeclarations(ReadOnlyCollection`1&lt;DeclarationNode&gt; declarationNodes, AstNode parent) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyUpdateVisitor.VisitMediaNodeMediaNode">
            <summary>设置 ImageAssemblyUpdateVisitor.VisitMediaNode(MediaNode mediaNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyUpdateVisitor.VisitPageNodePageNode">
            <summary>设置 ImageAssemblyUpdateVisitor.VisitPageNode(PageNode pageNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyUpdateVisitor.VisitRulesetNodeRulesetNode">
            <summary>设置 ImageAssemblyUpdateVisitor.VisitRulesetNode(RulesetNode rulesetNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyUpdateVisitor.VisitStyleSheetNodeStyleSheetNode">
            <summary>设置 ImageAssemblyUpdateVisitor.VisitStyleSheetNode(StyleSheetNode styleSheet) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyUpdateVisitor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyUpdateVisitor.AllInstances.UpdateDeclarationsReadOnlyCollectionOfDeclarationNodeAstNode">
            <summary>设置 ImageAssemblyUpdateVisitor.UpdateDeclarations(ReadOnlyCollection`1&lt;DeclarationNode&gt; declarationNodes, AstNode parent) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyUpdateVisitor.AllInstances.VisitMediaNodeMediaNode">
            <summary>设置 ImageAssemblyUpdateVisitor.VisitMediaNode(MediaNode mediaNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyUpdateVisitor.AllInstances.VisitPageNodePageNode">
            <summary>设置 ImageAssemblyUpdateVisitor.VisitPageNode(PageNode pageNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyUpdateVisitor.AllInstances.VisitRulesetNodeRulesetNode">
            <summary>设置 ImageAssemblyUpdateVisitor.VisitRulesetNode(RulesetNode rulesetNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimImageAssemblyUpdateVisitor.AllInstances.VisitStyleSheetNodeStyleSheetNode">
            <summary>设置 ImageAssemblyUpdateVisitor.VisitStyleSheetNode(StyleSheetNode styleSheet) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor">
            <summary>WebGrease.Css.Visitor.NodeTransformVisitor 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.#ctor(WebGrease.Css.Visitor.NodeTransformVisitor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.Constructor">
            <summary>设置 NodeTransformVisitor.NodeTransformVisitor() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.VisitAttribNodeAttribNode">
            <summary>设置 NodeTransformVisitor.VisitAttribNode(AttribNode attrib) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.VisitAttribOperatorAndValueNodeAttribOperatorAndValueNode">
            <summary>设置 NodeTransformVisitor.VisitAttribOperatorAndValueNode(AttribOperatorAndValueNode attribOperatorAndValueNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.VisitCombinatorSimpleSelectorSequenceNodeCombinatorSimpleSelectorSequenceNode">
            <summary>设置 NodeTransformVisitor.VisitCombinatorSimpleSelectorSequenceNode(CombinatorSimpleSelectorSequenceNode combinatorSimpleSelectorSequenceNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.VisitDeclarationNodeDeclarationNode">
            <summary>设置 NodeTransformVisitor.VisitDeclarationNode(DeclarationNode declarationNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.VisitDocumentQueryNodeDocumentQueryNode">
            <summary>设置 NodeTransformVisitor.VisitDocumentQueryNode(DocumentQueryNode documentQueryNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.VisitExprNodeExprNode">
            <summary>设置 NodeTransformVisitor.VisitExprNode(ExprNode exprNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.VisitFunctionNodeFunctionNode">
            <summary>设置 NodeTransformVisitor.VisitFunctionNode(FunctionNode functionNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.VisitFunctionalPseudoNodeFunctionalPseudoNode">
            <summary>设置 NodeTransformVisitor.VisitFunctionalPseudoNode(FunctionalPseudoNode functionalPseudoNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.VisitHashClassAtNameAttribPseudoNegationNodeHashClassAtNameAttribPseudoNegationNode">
            <summary>设置 NodeTransformVisitor.VisitHashClassAtNameAttribPseudoNegationNode(HashClassAtNameAttribPseudoNegationNode hashClassAtNameAttribPseudoNegationNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.VisitImportNodeImportNode">
            <summary>设置 NodeTransformVisitor.VisitImportNode(ImportNode importNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.VisitKeyFramesBlockNodeKeyFramesBlockNode">
            <summary>设置 NodeTransformVisitor.VisitKeyFramesBlockNode(KeyFramesBlockNode keyFramesBlockNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.VisitKeyFramesNodeKeyFramesNode">
            <summary>设置 NodeTransformVisitor.VisitKeyFramesNode(KeyFramesNode keyFramesNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.VisitMediaExpressionNodeMediaExpressionNode">
            <summary>设置 NodeTransformVisitor.VisitMediaExpressionNode(MediaExpressionNode mediaExpressionNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.VisitMediaNodeMediaNode">
            <summary>设置 NodeTransformVisitor.VisitMediaNode(MediaNode mediaNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.VisitMediaQueryNodeMediaQueryNode">
            <summary>设置 NodeTransformVisitor.VisitMediaQueryNode(MediaQueryNode mediaQueryNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.VisitNamespaceNodeNamespaceNode">
            <summary>设置 NodeTransformVisitor.VisitNamespaceNode(NamespaceNode namespaceNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.VisitNegationArgNodeNegationArgNode">
            <summary>设置 NodeTransformVisitor.VisitNegationArgNode(NegationArgNode negationArgNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.VisitNegationNodeNegationNode">
            <summary>设置 NodeTransformVisitor.VisitNegationNode(NegationNode negationNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.VisitPageNodePageNode">
            <summary>设置 NodeTransformVisitor.VisitPageNode(PageNode pageNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.VisitPseudoNodePseudoNode">
            <summary>设置 NodeTransformVisitor.VisitPseudoNode(PseudoNode pseudoNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.VisitRulesetNodeRulesetNode">
            <summary>设置 NodeTransformVisitor.VisitRulesetNode(RulesetNode rulesetNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.VisitSelectorExpressionNodeSelectorExpressionNode">
            <summary>设置 NodeTransformVisitor.VisitSelectorExpressionNode(SelectorExpressionNode selectorExpressionNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.VisitSelectorNamespacePrefixNodeSelectorNamespacePrefixNode">
            <summary>设置 NodeTransformVisitor.VisitSelectorNamespacePrefixNode(SelectorNamespacePrefixNode selectorNamespacePrefixNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.VisitSelectorNodeSelectorNode">
            <summary>设置 NodeTransformVisitor.VisitSelectorNode(SelectorNode selectorNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.VisitSelectorsGroupNodeSelectorsGroupNode">
            <summary>设置 NodeTransformVisitor.VisitSelectorsGroupNode(SelectorsGroupNode selectorsGroupNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.VisitSimpleSelectorSequenceNodeSimpleSelectorSequenceNode">
            <summary>设置 NodeTransformVisitor.VisitSimpleSelectorSequenceNode(SimpleSelectorSequenceNode simpleSelectorSequenceNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.VisitStyleSheetNodeStyleSheetNode">
            <summary>设置 NodeTransformVisitor.VisitStyleSheetNode(StyleSheetNode styleSheet) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.VisitTermNodeTermNode">
            <summary>设置 NodeTransformVisitor.VisitTermNode(TermNode termNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.VisitTermWithOperatorNodeTermWithOperatorNode">
            <summary>设置 NodeTransformVisitor.VisitTermWithOperatorNode(TermWithOperatorNode termWithOperatorNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.VisitTypeSelectorNodeTypeSelectorNode">
            <summary>设置 NodeTransformVisitor.VisitTypeSelectorNode(TypeSelectorNode typeSelectorNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.VisitUniversalSelectorNodeUniversalSelectorNode">
            <summary>设置 NodeTransformVisitor.VisitUniversalSelectorNode(UniversalSelectorNode universalSelectorNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor._VisitDocumentQueryNodeb__6RulesetNode">
            <summary>设置 NodeTransformVisitor.&lt;VisitDocumentQueryNode&gt;b__6(RulesetNode ruleset) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor._VisitExprNodeb__7TermWithOperatorNode">
            <summary>设置 NodeTransformVisitor.&lt;VisitExprNode&gt;b__7(TermWithOperatorNode termWithOperatorNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor._VisitImportNodeb__1MediaQueryNode">
            <summary>设置 NodeTransformVisitor.&lt;VisitImportNode&gt;b__1(MediaQueryNode mediaQueryNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor._VisitKeyFramesBlockNodeb__dDeclarationNode">
            <summary>设置 NodeTransformVisitor.&lt;VisitKeyFramesBlockNode&gt;b__d(DeclarationNode declarationNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor._VisitKeyFramesNodeb__cKeyFramesBlockNode">
            <summary>设置 NodeTransformVisitor.&lt;VisitKeyFramesNode&gt;b__c(KeyFramesBlockNode keyFramesBlockNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor._VisitMediaNodeb__3RulesetNode">
            <summary>设置 NodeTransformVisitor.&lt;VisitMediaNode&gt;b__3(RulesetNode ruleset) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor._VisitMediaNodeb__4PageNode">
            <summary>设置 NodeTransformVisitor.&lt;VisitMediaNode&gt;b__4(PageNode pages) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor._VisitMediaQueryNodeb__bMediaExpressionNode">
            <summary>设置 NodeTransformVisitor.&lt;VisitMediaQueryNode&gt;b__b(MediaExpressionNode mediaExpressionNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor._VisitPageNodeb__5DeclarationNode">
            <summary>设置 NodeTransformVisitor.&lt;VisitPageNode&gt;b__5(DeclarationNode declaration) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor._VisitRulesetNodeb__2DeclarationNode">
            <summary>设置 NodeTransformVisitor.&lt;VisitRulesetNode&gt;b__2(DeclarationNode declarationNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor._VisitSelectorNodeb__8CombinatorSimpleSelectorSequenceNode">
            <summary>设置 NodeTransformVisitor.&lt;VisitSelectorNode&gt;b__8(CombinatorSimpleSelectorSequenceNode combinatorSimpleSelectorSequenceNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor._VisitSelectorsGroupNodeb__9SelectorNode">
            <summary>设置 NodeTransformVisitor.&lt;VisitSelectorsGroupNode&gt;b__9(SelectorNode selectorNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor._VisitSimpleSelectorSequenceNodeb__aHashClassAtNameAttribPseudoNegationNode">
            <summary>设置 NodeTransformVisitor.&lt;VisitSimpleSelectorSequenceNode&gt;b__a(HashClassAtNameAttribPseudoNegationNode hashClassAtNameAttribPseudoNegationNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor._VisitStyleSheetNodeb__0StyleSheetRuleNode">
            <summary>设置 NodeTransformVisitor.&lt;VisitStyleSheetNode&gt;b__0(StyleSheetRuleNode styleSheetRule) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances.VisitAttribNodeAttribNode">
            <summary>设置 NodeTransformVisitor.VisitAttribNode(AttribNode attrib) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances.VisitAttribOperatorAndValueNodeAttribOperatorAndValueNode">
            <summary>设置 NodeTransformVisitor.VisitAttribOperatorAndValueNode(AttribOperatorAndValueNode attribOperatorAndValueNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances.VisitCombinatorSimpleSelectorSequenceNodeCombinatorSimpleSelectorSequenceNode">
            <summary>设置 NodeTransformVisitor.VisitCombinatorSimpleSelectorSequenceNode(CombinatorSimpleSelectorSequenceNode combinatorSimpleSelectorSequenceNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances.VisitDeclarationNodeDeclarationNode">
            <summary>设置 NodeTransformVisitor.VisitDeclarationNode(DeclarationNode declarationNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances.VisitDocumentQueryNodeDocumentQueryNode">
            <summary>设置 NodeTransformVisitor.VisitDocumentQueryNode(DocumentQueryNode documentQueryNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances.VisitExprNodeExprNode">
            <summary>设置 NodeTransformVisitor.VisitExprNode(ExprNode exprNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances.VisitFunctionNodeFunctionNode">
            <summary>设置 NodeTransformVisitor.VisitFunctionNode(FunctionNode functionNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances.VisitFunctionalPseudoNodeFunctionalPseudoNode">
            <summary>设置 NodeTransformVisitor.VisitFunctionalPseudoNode(FunctionalPseudoNode functionalPseudoNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances.VisitHashClassAtNameAttribPseudoNegationNodeHashClassAtNameAttribPseudoNegationNode">
            <summary>设置 NodeTransformVisitor.VisitHashClassAtNameAttribPseudoNegationNode(HashClassAtNameAttribPseudoNegationNode hashClassAtNameAttribPseudoNegationNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances.VisitImportNodeImportNode">
            <summary>设置 NodeTransformVisitor.VisitImportNode(ImportNode importNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances.VisitKeyFramesBlockNodeKeyFramesBlockNode">
            <summary>设置 NodeTransformVisitor.VisitKeyFramesBlockNode(KeyFramesBlockNode keyFramesBlockNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances.VisitKeyFramesNodeKeyFramesNode">
            <summary>设置 NodeTransformVisitor.VisitKeyFramesNode(KeyFramesNode keyFramesNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances.VisitMediaExpressionNodeMediaExpressionNode">
            <summary>设置 NodeTransformVisitor.VisitMediaExpressionNode(MediaExpressionNode mediaExpressionNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances.VisitMediaNodeMediaNode">
            <summary>设置 NodeTransformVisitor.VisitMediaNode(MediaNode mediaNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances.VisitMediaQueryNodeMediaQueryNode">
            <summary>设置 NodeTransformVisitor.VisitMediaQueryNode(MediaQueryNode mediaQueryNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances.VisitNamespaceNodeNamespaceNode">
            <summary>设置 NodeTransformVisitor.VisitNamespaceNode(NamespaceNode namespaceNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances.VisitNegationArgNodeNegationArgNode">
            <summary>设置 NodeTransformVisitor.VisitNegationArgNode(NegationArgNode negationArgNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances.VisitNegationNodeNegationNode">
            <summary>设置 NodeTransformVisitor.VisitNegationNode(NegationNode negationNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances.VisitPageNodePageNode">
            <summary>设置 NodeTransformVisitor.VisitPageNode(PageNode pageNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances.VisitPseudoNodePseudoNode">
            <summary>设置 NodeTransformVisitor.VisitPseudoNode(PseudoNode pseudoNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances.VisitRulesetNodeRulesetNode">
            <summary>设置 NodeTransformVisitor.VisitRulesetNode(RulesetNode rulesetNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances.VisitSelectorExpressionNodeSelectorExpressionNode">
            <summary>设置 NodeTransformVisitor.VisitSelectorExpressionNode(SelectorExpressionNode selectorExpressionNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances.VisitSelectorNamespacePrefixNodeSelectorNamespacePrefixNode">
            <summary>设置 NodeTransformVisitor.VisitSelectorNamespacePrefixNode(SelectorNamespacePrefixNode selectorNamespacePrefixNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances.VisitSelectorNodeSelectorNode">
            <summary>设置 NodeTransformVisitor.VisitSelectorNode(SelectorNode selectorNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances.VisitSelectorsGroupNodeSelectorsGroupNode">
            <summary>设置 NodeTransformVisitor.VisitSelectorsGroupNode(SelectorsGroupNode selectorsGroupNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances.VisitSimpleSelectorSequenceNodeSimpleSelectorSequenceNode">
            <summary>设置 NodeTransformVisitor.VisitSimpleSelectorSequenceNode(SimpleSelectorSequenceNode simpleSelectorSequenceNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances.VisitStyleSheetNodeStyleSheetNode">
            <summary>设置 NodeTransformVisitor.VisitStyleSheetNode(StyleSheetNode styleSheet) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances.VisitTermNodeTermNode">
            <summary>设置 NodeTransformVisitor.VisitTermNode(TermNode termNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances.VisitTermWithOperatorNodeTermWithOperatorNode">
            <summary>设置 NodeTransformVisitor.VisitTermWithOperatorNode(TermWithOperatorNode termWithOperatorNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances.VisitTypeSelectorNodeTypeSelectorNode">
            <summary>设置 NodeTransformVisitor.VisitTypeSelectorNode(TypeSelectorNode typeSelectorNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances.VisitUniversalSelectorNodeUniversalSelectorNode">
            <summary>设置 NodeTransformVisitor.VisitUniversalSelectorNode(UniversalSelectorNode universalSelectorNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances._VisitDocumentQueryNodeb__6RulesetNode">
            <summary>设置 NodeTransformVisitor.&lt;VisitDocumentQueryNode&gt;b__6(RulesetNode ruleset) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances._VisitExprNodeb__7TermWithOperatorNode">
            <summary>设置 NodeTransformVisitor.&lt;VisitExprNode&gt;b__7(TermWithOperatorNode termWithOperatorNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances._VisitImportNodeb__1MediaQueryNode">
            <summary>设置 NodeTransformVisitor.&lt;VisitImportNode&gt;b__1(MediaQueryNode mediaQueryNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances._VisitKeyFramesBlockNodeb__dDeclarationNode">
            <summary>设置 NodeTransformVisitor.&lt;VisitKeyFramesBlockNode&gt;b__d(DeclarationNode declarationNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances._VisitKeyFramesNodeb__cKeyFramesBlockNode">
            <summary>设置 NodeTransformVisitor.&lt;VisitKeyFramesNode&gt;b__c(KeyFramesBlockNode keyFramesBlockNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances._VisitMediaNodeb__3RulesetNode">
            <summary>设置 NodeTransformVisitor.&lt;VisitMediaNode&gt;b__3(RulesetNode ruleset) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances._VisitMediaNodeb__4PageNode">
            <summary>设置 NodeTransformVisitor.&lt;VisitMediaNode&gt;b__4(PageNode pages) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances._VisitMediaQueryNodeb__bMediaExpressionNode">
            <summary>设置 NodeTransformVisitor.&lt;VisitMediaQueryNode&gt;b__b(MediaExpressionNode mediaExpressionNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances._VisitPageNodeb__5DeclarationNode">
            <summary>设置 NodeTransformVisitor.&lt;VisitPageNode&gt;b__5(DeclarationNode declaration) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances._VisitRulesetNodeb__2DeclarationNode">
            <summary>设置 NodeTransformVisitor.&lt;VisitRulesetNode&gt;b__2(DeclarationNode declarationNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances._VisitSelectorNodeb__8CombinatorSimpleSelectorSequenceNode">
            <summary>设置 NodeTransformVisitor.&lt;VisitSelectorNode&gt;b__8(CombinatorSimpleSelectorSequenceNode combinatorSimpleSelectorSequenceNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances._VisitSelectorsGroupNodeb__9SelectorNode">
            <summary>设置 NodeTransformVisitor.&lt;VisitSelectorsGroupNode&gt;b__9(SelectorNode selectorNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances._VisitSimpleSelectorSequenceNodeb__aHashClassAtNameAttribPseudoNegationNode">
            <summary>设置 NodeTransformVisitor.&lt;VisitSimpleSelectorSequenceNode&gt;b__a(HashClassAtNameAttribPseudoNegationNode hashClassAtNameAttribPseudoNegationNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeTransformVisitor.AllInstances._VisitStyleSheetNodeb__0StyleSheetRuleNode">
            <summary>设置 NodeTransformVisitor.&lt;VisitStyleSheetNode&gt;b__0(StyleSheetRuleNode styleSheetRule) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor">
            <summary>WebGrease.Css.Visitor.NodeVisitor 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.#ctor(WebGrease.Css.Visitor.NodeVisitor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.Constructor">
            <summary>设置 NodeVisitor.NodeVisitor() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.VisitAttribNodeAttribNode">
            <summary>设置 NodeVisitor.VisitAttribNode(AttribNode attrib) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.VisitAttribOperatorAndValueNodeAttribOperatorAndValueNode">
            <summary>设置 NodeVisitor.VisitAttribOperatorAndValueNode(AttribOperatorAndValueNode attribOperatorAndValueNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.VisitCombinatorSimpleSelectorSequenceNodeCombinatorSimpleSelectorSequenceNode">
            <summary>设置 NodeVisitor.VisitCombinatorSimpleSelectorSequenceNode(CombinatorSimpleSelectorSequenceNode combinatorSimpleSelectorSequenceNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.VisitDeclarationNodeDeclarationNode">
            <summary>设置 NodeVisitor.VisitDeclarationNode(DeclarationNode declarationNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.VisitDocumentQueryNodeDocumentQueryNode">
            <summary>设置 NodeVisitor.VisitDocumentQueryNode(DocumentQueryNode documentQueryNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.VisitExprNodeExprNode">
            <summary>设置 NodeVisitor.VisitExprNode(ExprNode exprNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.VisitFunctionNodeFunctionNode">
            <summary>设置 NodeVisitor.VisitFunctionNode(FunctionNode functionNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.VisitFunctionalPseudoNodeFunctionalPseudoNode">
            <summary>设置 NodeVisitor.VisitFunctionalPseudoNode(FunctionalPseudoNode functionalPseudoNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.VisitHashClassAtNameAttribPseudoNegationNodeHashClassAtNameAttribPseudoNegationNode">
            <summary>设置 NodeVisitor.VisitHashClassAtNameAttribPseudoNegationNode(HashClassAtNameAttribPseudoNegationNode hashClassAtNameAttribPseudoNegationNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.VisitImportNodeImportNode">
            <summary>设置 NodeVisitor.VisitImportNode(ImportNode importNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.VisitKeyFramesBlockNodeKeyFramesBlockNode">
            <summary>设置 NodeVisitor.VisitKeyFramesBlockNode(KeyFramesBlockNode keyFramesBlockNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.VisitKeyFramesNodeKeyFramesNode">
            <summary>设置 NodeVisitor.VisitKeyFramesNode(KeyFramesNode keyFramesNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.VisitMediaExpressionNodeMediaExpressionNode">
            <summary>设置 NodeVisitor.VisitMediaExpressionNode(MediaExpressionNode mediaExpressionNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.VisitMediaNodeMediaNode">
            <summary>设置 NodeVisitor.VisitMediaNode(MediaNode mediaNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.VisitMediaQueryNodeMediaQueryNode">
            <summary>设置 NodeVisitor.VisitMediaQueryNode(MediaQueryNode mediaQueryNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.VisitNamespaceNodeNamespaceNode">
            <summary>设置 NodeVisitor.VisitNamespaceNode(NamespaceNode namespaceNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.VisitNegationArgNodeNegationArgNode">
            <summary>设置 NodeVisitor.VisitNegationArgNode(NegationArgNode negationArgNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.VisitNegationNodeNegationNode">
            <summary>设置 NodeVisitor.VisitNegationNode(NegationNode negationNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.VisitPageNodePageNode">
            <summary>设置 NodeVisitor.VisitPageNode(PageNode pageNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.VisitPseudoNodePseudoNode">
            <summary>设置 NodeVisitor.VisitPseudoNode(PseudoNode pseudoNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.VisitRulesetNodeRulesetNode">
            <summary>设置 NodeVisitor.VisitRulesetNode(RulesetNode rulesetNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.VisitSelectorExpressionNodeSelectorExpressionNode">
            <summary>设置 NodeVisitor.VisitSelectorExpressionNode(SelectorExpressionNode selectorExpressionNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.VisitSelectorNamespacePrefixNodeSelectorNamespacePrefixNode">
            <summary>设置 NodeVisitor.VisitSelectorNamespacePrefixNode(SelectorNamespacePrefixNode selectorNamespacePrefixNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.VisitSelectorNodeSelectorNode">
            <summary>设置 NodeVisitor.VisitSelectorNode(SelectorNode selectorNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.VisitSelectorsGroupNodeSelectorsGroupNode">
            <summary>设置 NodeVisitor.VisitSelectorsGroupNode(SelectorsGroupNode selectorsGroupNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.VisitSimpleSelectorSequenceNodeSimpleSelectorSequenceNode">
            <summary>设置 NodeVisitor.VisitSimpleSelectorSequenceNode(SimpleSelectorSequenceNode simpleSelectorSequenceNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.VisitStyleSheetNodeStyleSheetNode">
            <summary>设置 NodeVisitor.VisitStyleSheetNode(StyleSheetNode styleSheet) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.VisitTermNodeTermNode">
            <summary>设置 NodeVisitor.VisitTermNode(TermNode termNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.VisitTermWithOperatorNodeTermWithOperatorNode">
            <summary>设置 NodeVisitor.VisitTermWithOperatorNode(TermWithOperatorNode termWithOperatorNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.VisitTypeSelectorNodeTypeSelectorNode">
            <summary>设置 NodeVisitor.VisitTypeSelectorNode(TypeSelectorNode typeSelectorNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.VisitUniversalSelectorNodeUniversalSelectorNode">
            <summary>设置 NodeVisitor.VisitUniversalSelectorNode(UniversalSelectorNode universalSelectorNode) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.AllInstances.VisitAttribNodeAttribNode">
            <summary>设置 NodeVisitor.VisitAttribNode(AttribNode attrib) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.AllInstances.VisitAttribOperatorAndValueNodeAttribOperatorAndValueNode">
            <summary>设置 NodeVisitor.VisitAttribOperatorAndValueNode(AttribOperatorAndValueNode attribOperatorAndValueNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.AllInstances.VisitCombinatorSimpleSelectorSequenceNodeCombinatorSimpleSelectorSequenceNode">
            <summary>设置 NodeVisitor.VisitCombinatorSimpleSelectorSequenceNode(CombinatorSimpleSelectorSequenceNode combinatorSimpleSelectorSequenceNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.AllInstances.VisitDeclarationNodeDeclarationNode">
            <summary>设置 NodeVisitor.VisitDeclarationNode(DeclarationNode declarationNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.AllInstances.VisitDocumentQueryNodeDocumentQueryNode">
            <summary>设置 NodeVisitor.VisitDocumentQueryNode(DocumentQueryNode documentQueryNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.AllInstances.VisitExprNodeExprNode">
            <summary>设置 NodeVisitor.VisitExprNode(ExprNode exprNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.AllInstances.VisitFunctionNodeFunctionNode">
            <summary>设置 NodeVisitor.VisitFunctionNode(FunctionNode functionNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.AllInstances.VisitFunctionalPseudoNodeFunctionalPseudoNode">
            <summary>设置 NodeVisitor.VisitFunctionalPseudoNode(FunctionalPseudoNode functionalPseudoNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.AllInstances.VisitHashClassAtNameAttribPseudoNegationNodeHashClassAtNameAttribPseudoNegationNode">
            <summary>设置 NodeVisitor.VisitHashClassAtNameAttribPseudoNegationNode(HashClassAtNameAttribPseudoNegationNode hashClassAtNameAttribPseudoNegationNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.AllInstances.VisitImportNodeImportNode">
            <summary>设置 NodeVisitor.VisitImportNode(ImportNode importNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.AllInstances.VisitKeyFramesBlockNodeKeyFramesBlockNode">
            <summary>设置 NodeVisitor.VisitKeyFramesBlockNode(KeyFramesBlockNode keyFramesBlockNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.AllInstances.VisitKeyFramesNodeKeyFramesNode">
            <summary>设置 NodeVisitor.VisitKeyFramesNode(KeyFramesNode keyFramesNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.AllInstances.VisitMediaExpressionNodeMediaExpressionNode">
            <summary>设置 NodeVisitor.VisitMediaExpressionNode(MediaExpressionNode mediaExpressionNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.AllInstances.VisitMediaNodeMediaNode">
            <summary>设置 NodeVisitor.VisitMediaNode(MediaNode mediaNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.AllInstances.VisitMediaQueryNodeMediaQueryNode">
            <summary>设置 NodeVisitor.VisitMediaQueryNode(MediaQueryNode mediaQueryNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.AllInstances.VisitNamespaceNodeNamespaceNode">
            <summary>设置 NodeVisitor.VisitNamespaceNode(NamespaceNode namespaceNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.AllInstances.VisitNegationArgNodeNegationArgNode">
            <summary>设置 NodeVisitor.VisitNegationArgNode(NegationArgNode negationArgNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.AllInstances.VisitNegationNodeNegationNode">
            <summary>设置 NodeVisitor.VisitNegationNode(NegationNode negationNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.AllInstances.VisitPageNodePageNode">
            <summary>设置 NodeVisitor.VisitPageNode(PageNode pageNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.AllInstances.VisitPseudoNodePseudoNode">
            <summary>设置 NodeVisitor.VisitPseudoNode(PseudoNode pseudoNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.AllInstances.VisitRulesetNodeRulesetNode">
            <summary>设置 NodeVisitor.VisitRulesetNode(RulesetNode rulesetNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.AllInstances.VisitSelectorExpressionNodeSelectorExpressionNode">
            <summary>设置 NodeVisitor.VisitSelectorExpressionNode(SelectorExpressionNode selectorExpressionNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.AllInstances.VisitSelectorNamespacePrefixNodeSelectorNamespacePrefixNode">
            <summary>设置 NodeVisitor.VisitSelectorNamespacePrefixNode(SelectorNamespacePrefixNode selectorNamespacePrefixNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.AllInstances.VisitSelectorNodeSelectorNode">
            <summary>设置 NodeVisitor.VisitSelectorNode(SelectorNode selectorNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.AllInstances.VisitSelectorsGroupNodeSelectorsGroupNode">
            <summary>设置 NodeVisitor.VisitSelectorsGroupNode(SelectorsGroupNode selectorsGroupNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.AllInstances.VisitSimpleSelectorSequenceNodeSimpleSelectorSequenceNode">
            <summary>设置 NodeVisitor.VisitSimpleSelectorSequenceNode(SimpleSelectorSequenceNode simpleSelectorSequenceNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.AllInstances.VisitStyleSheetNodeStyleSheetNode">
            <summary>设置 NodeVisitor.VisitStyleSheetNode(StyleSheetNode styleSheet) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.AllInstances.VisitTermNodeTermNode">
            <summary>设置 NodeVisitor.VisitTermNode(TermNode termNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.AllInstances.VisitTermWithOperatorNodeTermWithOperatorNode">
            <summary>设置 NodeVisitor.VisitTermWithOperatorNode(TermWithOperatorNode termWithOperatorNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.AllInstances.VisitTypeSelectorNodeTypeSelectorNode">
            <summary>设置 NodeVisitor.VisitTypeSelectorNode(TypeSelectorNode typeSelectorNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimNodeVisitor.AllInstances.VisitUniversalSelectorNodeUniversalSelectorNode">
            <summary>设置 NodeVisitor.VisitUniversalSelectorNode(UniversalSelectorNode universalSelectorNode) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor">
            <summary>WebGrease.Css.Visitor.PrintVisitor 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.#ctor(WebGrease.Css.Visitor.PrintVisitor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.Constructor">
            <summary>设置 PrintVisitor.PrintVisitor() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.IndentCharacterGet">
            <summary>设置 PrintVisitor.get_IndentCharacter() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.IndentCharacterSetChar">
            <summary>设置 PrintVisitor.set_IndentCharacter(Char value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.IndentSizeGet">
            <summary>设置 PrintVisitor.get_IndentSize() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.IndentSizeSetInt32">
            <summary>设置 PrintVisitor.set_IndentSize(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.PrintAstNodeBoolean">
            <summary>设置 PrintVisitor.Print(AstNode node, Boolean prettyPrint) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.PrintBooleanAstNode">
            <summary>设置 PrintVisitor.Print(Boolean prettyPrint, AstNode node) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.VisitAttribNodeAttribNode">
            <summary>设置 PrintVisitor.VisitAttribNode(AttribNode attrib) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.VisitAttribOperatorAndValueNodeAttribOperatorAndValueNode">
            <summary>设置 PrintVisitor.VisitAttribOperatorAndValueNode(AttribOperatorAndValueNode attribOperatorAndValueNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.VisitCombinatorSimpleSelectorSequenceNodeCombinatorSimpleSelectorSequenceNode">
            <summary>设置 PrintVisitor.VisitCombinatorSimpleSelectorSequenceNode(CombinatorSimpleSelectorSequenceNode combinatorSimpleSelectorSequenceNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.VisitDeclarationNodeDeclarationNode">
            <summary>设置 PrintVisitor.VisitDeclarationNode(DeclarationNode declarationNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.VisitDocumentQueryNodeDocumentQueryNode">
            <summary>设置 PrintVisitor.VisitDocumentQueryNode(DocumentQueryNode documentQueryNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.VisitExprNodeExprNode">
            <summary>设置 PrintVisitor.VisitExprNode(ExprNode exprNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.VisitFunctionNodeFunctionNode">
            <summary>设置 PrintVisitor.VisitFunctionNode(FunctionNode functionNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.VisitFunctionalPseudoNodeFunctionalPseudoNode">
            <summary>设置 PrintVisitor.VisitFunctionalPseudoNode(FunctionalPseudoNode functionalPseudoNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.VisitHashClassAtNameAttribPseudoNegationNodeHashClassAtNameAttribPseudoNegationNode">
            <summary>设置 PrintVisitor.VisitHashClassAtNameAttribPseudoNegationNode(HashClassAtNameAttribPseudoNegationNode hashClassAtNameAttribPseudoNegationNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.VisitImportNodeImportNode">
            <summary>设置 PrintVisitor.VisitImportNode(ImportNode importNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.VisitKeyFramesBlockNodeKeyFramesBlockNode">
            <summary>设置 PrintVisitor.VisitKeyFramesBlockNode(KeyFramesBlockNode keyFramesBlockNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.VisitKeyFramesNodeKeyFramesNode">
            <summary>设置 PrintVisitor.VisitKeyFramesNode(KeyFramesNode keyFramesNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.VisitMediaExpressionNodeMediaExpressionNode">
            <summary>设置 PrintVisitor.VisitMediaExpressionNode(MediaExpressionNode mediaExpressionNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.VisitMediaNodeMediaNode">
            <summary>设置 PrintVisitor.VisitMediaNode(MediaNode mediaNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.VisitMediaQueryNodeMediaQueryNode">
            <summary>设置 PrintVisitor.VisitMediaQueryNode(MediaQueryNode mediaQueryNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.VisitNamespaceNodeNamespaceNode">
            <summary>设置 PrintVisitor.VisitNamespaceNode(NamespaceNode namespaceNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.VisitNegationArgNodeNegationArgNode">
            <summary>设置 PrintVisitor.VisitNegationArgNode(NegationArgNode negationArgNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.VisitNegationNodeNegationNode">
            <summary>设置 PrintVisitor.VisitNegationNode(NegationNode negationNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.VisitPageNodePageNode">
            <summary>设置 PrintVisitor.VisitPageNode(PageNode pageNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.VisitPseudoNodePseudoNode">
            <summary>设置 PrintVisitor.VisitPseudoNode(PseudoNode pseudoNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.VisitRulesetNodeRulesetNode">
            <summary>设置 PrintVisitor.VisitRulesetNode(RulesetNode rulesetNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.VisitSelectorExpressionNodeSelectorExpressionNode">
            <summary>设置 PrintVisitor.VisitSelectorExpressionNode(SelectorExpressionNode selectorExpressionNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.VisitSelectorNamespacePrefixNodeSelectorNamespacePrefixNode">
            <summary>设置 PrintVisitor.VisitSelectorNamespacePrefixNode(SelectorNamespacePrefixNode selectorNamespacePrefixNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.VisitSelectorNodeSelectorNode">
            <summary>设置 PrintVisitor.VisitSelectorNode(SelectorNode selectorNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.VisitSelectorsGroupNodeSelectorsGroupNode">
            <summary>设置 PrintVisitor.VisitSelectorsGroupNode(SelectorsGroupNode selectorsGroupNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.VisitSimpleSelectorSequenceNodeSimpleSelectorSequenceNode">
            <summary>设置 PrintVisitor.VisitSimpleSelectorSequenceNode(SimpleSelectorSequenceNode simpleSelectorSequenceNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.VisitStyleSheetNodeStyleSheetNode">
            <summary>设置 PrintVisitor.VisitStyleSheetNode(StyleSheetNode styleSheet) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.VisitTermNodeTermNode">
            <summary>设置 PrintVisitor.VisitTermNode(TermNode termNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.VisitTermWithOperatorNodeTermWithOperatorNode">
            <summary>设置 PrintVisitor.VisitTermWithOperatorNode(TermWithOperatorNode termWithOperatorNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.VisitTypeSelectorNodeTypeSelectorNode">
            <summary>设置 PrintVisitor.VisitTypeSelectorNode(TypeSelectorNode typeSelectorNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.VisitUniversalSelectorNodeUniversalSelectorNode">
            <summary>设置 PrintVisitor.VisitUniversalSelectorNode(UniversalSelectorNode universalSelectorNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor._VisitExprNodeb__9TermWithOperatorNode">
            <summary>设置 PrintVisitor.&lt;VisitExprNode&gt;b__9(TermWithOperatorNode termWithOperator) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor._VisitImportNodeb__3MediaQueryNodeBoolean">
            <summary>设置 PrintVisitor.&lt;VisitImportNode&gt;b__3(MediaQueryNode mediaQuery, Boolean last) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor._VisitKeyFramesBlockNodeb__11DeclarationNodeBoolean">
            <summary>设置 PrintVisitor.&lt;VisitKeyFramesBlockNode&gt;b__11(DeclarationNode declarationNode, Boolean last) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor._VisitKeyFramesNodeb__10KeyFramesBlockNode">
            <summary>设置 PrintVisitor.&lt;VisitKeyFramesNode&gt;b__10(KeyFramesBlockNode keyFramesBlockNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor._VisitMediaNodeb__aMediaQueryNodeBoolean">
            <summary>设置 PrintVisitor.&lt;VisitMediaNode&gt;b__a(MediaQueryNode mediaQuery, Boolean last) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor._VisitMediaQueryNodeb__cMediaExpressionNode">
            <summary>设置 PrintVisitor.&lt;VisitMediaQueryNode&gt;b__c(MediaExpressionNode mediaExpression) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor._VisitMediaQueryNodeb__dMediaExpressionNodeBoolean">
            <summary>设置 PrintVisitor.&lt;VisitMediaQueryNode&gt;b__d(MediaExpressionNode mediaExpression, Boolean last) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor._VisitPageNodeb__bDeclarationNodeBoolean">
            <summary>设置 PrintVisitor.&lt;VisitPageNode&gt;b__b(DeclarationNode declaration, Boolean last) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor._VisitRulesetNodeb__5DeclarationNodeBoolean">
            <summary>设置 PrintVisitor.&lt;VisitRulesetNode&gt;b__5(DeclarationNode declaration, Boolean last) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor._VisitSelectorNodeb__7CombinatorSimpleSelectorSequenceNodeBoolean">
            <summary>设置 PrintVisitor.&lt;VisitSelectorNode&gt;b__7(CombinatorSimpleSelectorSequenceNode combinatorSimpleSelectorSequenceNode, Boolean selectorIndex) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor._VisitSelectorsGroupNodeb__6SelectorNodeBoolean">
            <summary>设置 PrintVisitor.&lt;VisitSelectorsGroupNode&gt;b__6(SelectorNode selector, Boolean last) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor._VisitSimpleSelectorSequenceNodeb__8HashClassAtNameAttribPseudoNegationNode">
            <summary>设置 PrintVisitor.&lt;VisitSimpleSelectorSequenceNode&gt;b__8(HashClassAtNameAttribPseudoNegationNode hashClassAttribPseudoNegationNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor._VisitStyleSheetNodeb__0ImportNode">
            <summary>设置 PrintVisitor.&lt;VisitStyleSheetNode&gt;b__0(ImportNode importNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor._VisitStyleSheetNodeb__1NamespaceNode">
            <summary>设置 PrintVisitor.&lt;VisitStyleSheetNode&gt;b__1(NamespaceNode namespaceNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor._VisitStyleSheetNodeb__2StyleSheetRuleNode">
            <summary>设置 PrintVisitor.&lt;VisitStyleSheetNode&gt;b__2(StyleSheetRuleNode styleSheetRuleNode) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances.PrintBooleanAstNode">
            <summary>设置 PrintVisitor.Print(Boolean prettyPrint, AstNode node) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances.VisitAttribNodeAttribNode">
            <summary>设置 PrintVisitor.VisitAttribNode(AttribNode attrib) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances.VisitAttribOperatorAndValueNodeAttribOperatorAndValueNode">
            <summary>设置 PrintVisitor.VisitAttribOperatorAndValueNode(AttribOperatorAndValueNode attribOperatorAndValueNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances.VisitCombinatorSimpleSelectorSequenceNodeCombinatorSimpleSelectorSequenceNode">
            <summary>设置 PrintVisitor.VisitCombinatorSimpleSelectorSequenceNode(CombinatorSimpleSelectorSequenceNode combinatorSimpleSelectorSequenceNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances.VisitDeclarationNodeDeclarationNode">
            <summary>设置 PrintVisitor.VisitDeclarationNode(DeclarationNode declarationNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances.VisitDocumentQueryNodeDocumentQueryNode">
            <summary>设置 PrintVisitor.VisitDocumentQueryNode(DocumentQueryNode documentQueryNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances.VisitExprNodeExprNode">
            <summary>设置 PrintVisitor.VisitExprNode(ExprNode exprNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances.VisitFunctionNodeFunctionNode">
            <summary>设置 PrintVisitor.VisitFunctionNode(FunctionNode functionNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances.VisitFunctionalPseudoNodeFunctionalPseudoNode">
            <summary>设置 PrintVisitor.VisitFunctionalPseudoNode(FunctionalPseudoNode functionalPseudoNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances.VisitHashClassAtNameAttribPseudoNegationNodeHashClassAtNameAttribPseudoNegationNode">
            <summary>设置 PrintVisitor.VisitHashClassAtNameAttribPseudoNegationNode(HashClassAtNameAttribPseudoNegationNode hashClassAtNameAttribPseudoNegationNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances.VisitImportNodeImportNode">
            <summary>设置 PrintVisitor.VisitImportNode(ImportNode importNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances.VisitKeyFramesBlockNodeKeyFramesBlockNode">
            <summary>设置 PrintVisitor.VisitKeyFramesBlockNode(KeyFramesBlockNode keyFramesBlockNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances.VisitKeyFramesNodeKeyFramesNode">
            <summary>设置 PrintVisitor.VisitKeyFramesNode(KeyFramesNode keyFramesNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances.VisitMediaExpressionNodeMediaExpressionNode">
            <summary>设置 PrintVisitor.VisitMediaExpressionNode(MediaExpressionNode mediaExpressionNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances.VisitMediaNodeMediaNode">
            <summary>设置 PrintVisitor.VisitMediaNode(MediaNode mediaNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances.VisitMediaQueryNodeMediaQueryNode">
            <summary>设置 PrintVisitor.VisitMediaQueryNode(MediaQueryNode mediaQueryNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances.VisitNamespaceNodeNamespaceNode">
            <summary>设置 PrintVisitor.VisitNamespaceNode(NamespaceNode namespaceNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances.VisitNegationArgNodeNegationArgNode">
            <summary>设置 PrintVisitor.VisitNegationArgNode(NegationArgNode negationArgNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances.VisitNegationNodeNegationNode">
            <summary>设置 PrintVisitor.VisitNegationNode(NegationNode negationNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances.VisitPageNodePageNode">
            <summary>设置 PrintVisitor.VisitPageNode(PageNode pageNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances.VisitPseudoNodePseudoNode">
            <summary>设置 PrintVisitor.VisitPseudoNode(PseudoNode pseudoNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances.VisitRulesetNodeRulesetNode">
            <summary>设置 PrintVisitor.VisitRulesetNode(RulesetNode rulesetNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances.VisitSelectorExpressionNodeSelectorExpressionNode">
            <summary>设置 PrintVisitor.VisitSelectorExpressionNode(SelectorExpressionNode selectorExpressionNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances.VisitSelectorNamespacePrefixNodeSelectorNamespacePrefixNode">
            <summary>设置 PrintVisitor.VisitSelectorNamespacePrefixNode(SelectorNamespacePrefixNode selectorNamespacePrefixNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances.VisitSelectorNodeSelectorNode">
            <summary>设置 PrintVisitor.VisitSelectorNode(SelectorNode selectorNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances.VisitSelectorsGroupNodeSelectorsGroupNode">
            <summary>设置 PrintVisitor.VisitSelectorsGroupNode(SelectorsGroupNode selectorsGroupNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances.VisitSimpleSelectorSequenceNodeSimpleSelectorSequenceNode">
            <summary>设置 PrintVisitor.VisitSimpleSelectorSequenceNode(SimpleSelectorSequenceNode simpleSelectorSequenceNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances.VisitStyleSheetNodeStyleSheetNode">
            <summary>设置 PrintVisitor.VisitStyleSheetNode(StyleSheetNode styleSheet) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances.VisitTermNodeTermNode">
            <summary>设置 PrintVisitor.VisitTermNode(TermNode termNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances.VisitTermWithOperatorNodeTermWithOperatorNode">
            <summary>设置 PrintVisitor.VisitTermWithOperatorNode(TermWithOperatorNode termWithOperatorNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances.VisitTypeSelectorNodeTypeSelectorNode">
            <summary>设置 PrintVisitor.VisitTypeSelectorNode(TypeSelectorNode typeSelectorNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances.VisitUniversalSelectorNodeUniversalSelectorNode">
            <summary>设置 PrintVisitor.VisitUniversalSelectorNode(UniversalSelectorNode universalSelectorNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances._VisitExprNodeb__9TermWithOperatorNode">
            <summary>设置 PrintVisitor.&lt;VisitExprNode&gt;b__9(TermWithOperatorNode termWithOperator) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances._VisitImportNodeb__3MediaQueryNodeBoolean">
            <summary>设置 PrintVisitor.&lt;VisitImportNode&gt;b__3(MediaQueryNode mediaQuery, Boolean last) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances._VisitKeyFramesBlockNodeb__11DeclarationNodeBoolean">
            <summary>设置 PrintVisitor.&lt;VisitKeyFramesBlockNode&gt;b__11(DeclarationNode declarationNode, Boolean last) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances._VisitKeyFramesNodeb__10KeyFramesBlockNode">
            <summary>设置 PrintVisitor.&lt;VisitKeyFramesNode&gt;b__10(KeyFramesBlockNode keyFramesBlockNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances._VisitMediaNodeb__aMediaQueryNodeBoolean">
            <summary>设置 PrintVisitor.&lt;VisitMediaNode&gt;b__a(MediaQueryNode mediaQuery, Boolean last) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances._VisitMediaQueryNodeb__cMediaExpressionNode">
            <summary>设置 PrintVisitor.&lt;VisitMediaQueryNode&gt;b__c(MediaExpressionNode mediaExpression) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances._VisitMediaQueryNodeb__dMediaExpressionNodeBoolean">
            <summary>设置 PrintVisitor.&lt;VisitMediaQueryNode&gt;b__d(MediaExpressionNode mediaExpression, Boolean last) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances._VisitPageNodeb__bDeclarationNodeBoolean">
            <summary>设置 PrintVisitor.&lt;VisitPageNode&gt;b__b(DeclarationNode declaration, Boolean last) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances._VisitRulesetNodeb__5DeclarationNodeBoolean">
            <summary>设置 PrintVisitor.&lt;VisitRulesetNode&gt;b__5(DeclarationNode declaration, Boolean last) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances._VisitSelectorNodeb__7CombinatorSimpleSelectorSequenceNodeBoolean">
            <summary>设置 PrintVisitor.&lt;VisitSelectorNode&gt;b__7(CombinatorSimpleSelectorSequenceNode combinatorSimpleSelectorSequenceNode, Boolean selectorIndex) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances._VisitSelectorsGroupNodeb__6SelectorNodeBoolean">
            <summary>设置 PrintVisitor.&lt;VisitSelectorsGroupNode&gt;b__6(SelectorNode selector, Boolean last) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances._VisitSimpleSelectorSequenceNodeb__8HashClassAtNameAttribPseudoNegationNode">
            <summary>设置 PrintVisitor.&lt;VisitSimpleSelectorSequenceNode&gt;b__8(HashClassAtNameAttribPseudoNegationNode hashClassAttribPseudoNegationNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances._VisitStyleSheetNodeb__0ImportNode">
            <summary>设置 PrintVisitor.&lt;VisitStyleSheetNode&gt;b__0(ImportNode importNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances._VisitStyleSheetNodeb__1NamespaceNode">
            <summary>设置 PrintVisitor.&lt;VisitStyleSheetNode&gt;b__1(NamespaceNode namespaceNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimPrintVisitor.AllInstances._VisitStyleSheetNodeb__2StyleSheetRuleNode">
            <summary>设置 PrintVisitor.&lt;VisitStyleSheetNode&gt;b__2(StyleSheetRuleNode styleSheetRuleNode) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Visitor.Fakes.ShimSelectorValidationOptimizationVisitor">
            <summary>WebGrease.Css.Visitor.SelectorValidationOptimizationVisitor 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimSelectorValidationOptimizationVisitor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimSelectorValidationOptimizationVisitor.#ctor(WebGrease.Css.Visitor.SelectorValidationOptimizationVisitor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimSelectorValidationOptimizationVisitor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimSelectorValidationOptimizationVisitor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimSelectorValidationOptimizationVisitor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimSelectorValidationOptimizationVisitor.ConstructorHashSetOfStringBooleanBoolean">
            <summary>设置 SelectorValidationOptimizationVisitor.SelectorValidationOptimizationVisitor(HashSet`1&lt;String&gt; selectorsToValidateOrRemove, Boolean shouldMatchExactly, Boolean validate) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimSelectorValidationOptimizationVisitor.VisitMediaNodeMediaNode">
            <summary>设置 SelectorValidationOptimizationVisitor.VisitMediaNode(MediaNode mediaNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimSelectorValidationOptimizationVisitor.VisitRulesetNodeRulesetNode">
            <summary>设置 SelectorValidationOptimizationVisitor.VisitRulesetNode(RulesetNode rulesetNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimSelectorValidationOptimizationVisitor.VisitStyleSheetNodeStyleSheetNode">
            <summary>设置 SelectorValidationOptimizationVisitor.VisitStyleSheetNode(StyleSheetNode styleSheet) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimSelectorValidationOptimizationVisitor._VisitRulesetNodeb__3SelectorNode">
            <summary>设置 SelectorValidationOptimizationVisitor.&lt;VisitRulesetNode&gt;b__3(SelectorNode sn) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Visitor.Fakes.ShimSelectorValidationOptimizationVisitor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimSelectorValidationOptimizationVisitor.AllInstances.VisitMediaNodeMediaNode">
            <summary>设置 SelectorValidationOptimizationVisitor.VisitMediaNode(MediaNode mediaNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimSelectorValidationOptimizationVisitor.AllInstances.VisitRulesetNodeRulesetNode">
            <summary>设置 SelectorValidationOptimizationVisitor.VisitRulesetNode(RulesetNode rulesetNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimSelectorValidationOptimizationVisitor.AllInstances.VisitStyleSheetNodeStyleSheetNode">
            <summary>设置 SelectorValidationOptimizationVisitor.VisitStyleSheetNode(StyleSheetNode styleSheet) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimSelectorValidationOptimizationVisitor.AllInstances._VisitRulesetNodeb__3SelectorNode">
            <summary>设置 SelectorValidationOptimizationVisitor.&lt;VisitRulesetNode&gt;b__3(SelectorNode sn) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Visitor.Fakes.ShimValidateLowercaseVisitor">
            <summary>WebGrease.Css.Visitor.ValidateLowercaseVisitor 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimValidateLowercaseVisitor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimValidateLowercaseVisitor.#ctor(WebGrease.Css.Visitor.ValidateLowercaseVisitor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimValidateLowercaseVisitor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.ShimValidateLowercaseVisitor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimValidateLowercaseVisitor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimValidateLowercaseVisitor.Constructor">
            <summary>设置 ValidateLowercaseVisitor.ValidateLowercaseVisitor() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimValidateLowercaseVisitor.ValidateForLowerCaseString">
            <summary>设置 ValidateLowercaseVisitor.ValidateForLowerCase(String textToValidate) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimValidateLowercaseVisitor.VisitDeclarationNodeDeclarationNode">
            <summary>设置 ValidateLowercaseVisitor.VisitDeclarationNode(DeclarationNode declarationNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimValidateLowercaseVisitor.VisitMediaNodeMediaNode">
            <summary>设置 ValidateLowercaseVisitor.VisitMediaNode(MediaNode mediaNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimValidateLowercaseVisitor.VisitPageNodePageNode">
            <summary>设置 ValidateLowercaseVisitor.VisitPageNode(PageNode pageNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimValidateLowercaseVisitor.VisitRulesetNodeRulesetNode">
            <summary>设置 ValidateLowercaseVisitor.VisitRulesetNode(RulesetNode rulesetNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimValidateLowercaseVisitor.VisitStyleSheetNodeStyleSheetNode">
            <summary>设置 ValidateLowercaseVisitor.VisitStyleSheetNode(StyleSheetNode styleSheet) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimValidateLowercaseVisitor._VisitMediaNodeb__7MediaQueryNode">
            <summary>设置 ValidateLowercaseVisitor.&lt;VisitMediaNode&gt;b__7(MediaQueryNode mediaQuery) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimValidateLowercaseVisitor._VisitMediaNodeb__8RulesetNode">
            <summary>设置 ValidateLowercaseVisitor.&lt;VisitMediaNode&gt;b__8(RulesetNode rulesetNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimValidateLowercaseVisitor._VisitPageNodeb__bDeclarationNode">
            <summary>设置 ValidateLowercaseVisitor.&lt;VisitPageNode&gt;b__b(DeclarationNode declarationNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimValidateLowercaseVisitor._VisitRulesetNodeb__3SelectorNode">
            <summary>设置 ValidateLowercaseVisitor.&lt;VisitRulesetNode&gt;b__3(SelectorNode selectorNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimValidateLowercaseVisitor._VisitRulesetNodeb__4DeclarationNode">
            <summary>设置 ValidateLowercaseVisitor.&lt;VisitRulesetNode&gt;b__4(DeclarationNode declarationNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimValidateLowercaseVisitor._VisitStyleSheetNodeb__0ImportNode">
            <summary>设置 ValidateLowercaseVisitor.&lt;VisitStyleSheetNode&gt;b__0(ImportNode importNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimValidateLowercaseVisitor._VisitStyleSheetNodeb__1StyleSheetRuleNode">
            <summary>设置 ValidateLowercaseVisitor.&lt;VisitStyleSheetNode&gt;b__1(StyleSheetRuleNode styleSheetRule) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Visitor.Fakes.ShimValidateLowercaseVisitor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimValidateLowercaseVisitor.AllInstances.VisitDeclarationNodeDeclarationNode">
            <summary>设置 ValidateLowercaseVisitor.VisitDeclarationNode(DeclarationNode declarationNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimValidateLowercaseVisitor.AllInstances.VisitMediaNodeMediaNode">
            <summary>设置 ValidateLowercaseVisitor.VisitMediaNode(MediaNode mediaNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimValidateLowercaseVisitor.AllInstances.VisitPageNodePageNode">
            <summary>设置 ValidateLowercaseVisitor.VisitPageNode(PageNode pageNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimValidateLowercaseVisitor.AllInstances.VisitRulesetNodeRulesetNode">
            <summary>设置 ValidateLowercaseVisitor.VisitRulesetNode(RulesetNode rulesetNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimValidateLowercaseVisitor.AllInstances.VisitStyleSheetNodeStyleSheetNode">
            <summary>设置 ValidateLowercaseVisitor.VisitStyleSheetNode(StyleSheetNode styleSheet) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimValidateLowercaseVisitor.AllInstances._VisitMediaNodeb__8RulesetNode">
            <summary>设置 ValidateLowercaseVisitor.&lt;VisitMediaNode&gt;b__8(RulesetNode rulesetNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimValidateLowercaseVisitor.AllInstances._VisitPageNodeb__bDeclarationNode">
            <summary>设置 ValidateLowercaseVisitor.&lt;VisitPageNode&gt;b__b(DeclarationNode declarationNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimValidateLowercaseVisitor.AllInstances._VisitRulesetNodeb__4DeclarationNode">
            <summary>设置 ValidateLowercaseVisitor.&lt;VisitRulesetNode&gt;b__4(DeclarationNode declarationNode) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.ShimValidateLowercaseVisitor.AllInstances._VisitStyleSheetNodeb__1StyleSheetRuleNode">
            <summary>设置 ValidateLowercaseVisitor.&lt;VisitStyleSheetNode&gt;b__1(StyleSheetRuleNode styleSheetRule) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor">
            <summary>WebGrease.Css.Visitor.NodeTransformVisitor 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.InitializeStub">
            <summary>初始化 type StubNodeTransformVisitor 的新实例</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitAttribNode(WebGrease.Css.Ast.Selectors.AttribNode)">
            <summary>设置 NodeTransformVisitor.VisitAttribNode(AttribNode attrib) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitAttribNodeAttribNode">
            <summary>设置 NodeTransformVisitor.VisitAttribNode(AttribNode attrib) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitAttribOperatorAndValueNode(WebGrease.Css.Ast.Selectors.AttribOperatorAndValueNode)">
            <summary>设置 NodeTransformVisitor.VisitAttribOperatorAndValueNode(AttribOperatorAndValueNode attribOperatorAndValueNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitAttribOperatorAndValueNodeAttribOperatorAndValueNode">
            <summary>设置 NodeTransformVisitor.VisitAttribOperatorAndValueNode(AttribOperatorAndValueNode attribOperatorAndValueNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitCombinatorSimpleSelectorSequenceNode(WebGrease.Css.Ast.CombinatorSimpleSelectorSequenceNode)">
            <summary>设置 NodeTransformVisitor.VisitCombinatorSimpleSelectorSequenceNode(CombinatorSimpleSelectorSequenceNode combinatorSimpleSelectorSequenceNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitCombinatorSimpleSelectorSequenceNodeCombinatorSimpleSelectorSequenceNode">
            <summary>设置 NodeTransformVisitor.VisitCombinatorSimpleSelectorSequenceNode(CombinatorSimpleSelectorSequenceNode combinatorSimpleSelectorSequenceNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitDeclarationNode(WebGrease.Css.Ast.DeclarationNode)">
            <summary>设置 NodeTransformVisitor.VisitDeclarationNode(DeclarationNode declarationNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitDeclarationNodeDeclarationNode">
            <summary>设置 NodeTransformVisitor.VisitDeclarationNode(DeclarationNode declarationNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitDocumentQueryNode(WebGrease.Css.Ast.DocumentQueryNode)">
            <summary>设置 NodeTransformVisitor.VisitDocumentQueryNode(DocumentQueryNode documentQueryNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitDocumentQueryNodeDocumentQueryNode">
            <summary>设置 NodeTransformVisitor.VisitDocumentQueryNode(DocumentQueryNode documentQueryNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitExprNode(WebGrease.Css.Ast.ExprNode)">
            <summary>设置 NodeTransformVisitor.VisitExprNode(ExprNode exprNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitExprNodeExprNode">
            <summary>设置 NodeTransformVisitor.VisitExprNode(ExprNode exprNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitFunctionNode(WebGrease.Css.Ast.FunctionNode)">
            <summary>设置 NodeTransformVisitor.VisitFunctionNode(FunctionNode functionNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitFunctionNodeFunctionNode">
            <summary>设置 NodeTransformVisitor.VisitFunctionNode(FunctionNode functionNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitFunctionalPseudoNode(WebGrease.Css.Ast.Selectors.FunctionalPseudoNode)">
            <summary>设置 NodeTransformVisitor.VisitFunctionalPseudoNode(FunctionalPseudoNode functionalPseudoNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitFunctionalPseudoNodeFunctionalPseudoNode">
            <summary>设置 NodeTransformVisitor.VisitFunctionalPseudoNode(FunctionalPseudoNode functionalPseudoNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitHashClassAtNameAttribPseudoNegationNode(WebGrease.Css.Ast.Selectors.HashClassAtNameAttribPseudoNegationNode)">
            <summary>设置 NodeTransformVisitor.VisitHashClassAtNameAttribPseudoNegationNode(HashClassAtNameAttribPseudoNegationNode hashClassAtNameAttribPseudoNegationNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitHashClassAtNameAttribPseudoNegationNodeHashClassAtNameAttribPseudoNegationNode">
            <summary>设置 NodeTransformVisitor.VisitHashClassAtNameAttribPseudoNegationNode(HashClassAtNameAttribPseudoNegationNode hashClassAtNameAttribPseudoNegationNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitImportNode(WebGrease.Css.Ast.ImportNode)">
            <summary>设置 NodeTransformVisitor.VisitImportNode(ImportNode importNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitImportNodeImportNode">
            <summary>设置 NodeTransformVisitor.VisitImportNode(ImportNode importNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitKeyFramesBlockNode(WebGrease.Css.Ast.Animation.KeyFramesBlockNode)">
            <summary>设置 NodeTransformVisitor.VisitKeyFramesBlockNode(KeyFramesBlockNode keyFramesBlockNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitKeyFramesBlockNodeKeyFramesBlockNode">
            <summary>设置 NodeTransformVisitor.VisitKeyFramesBlockNode(KeyFramesBlockNode keyFramesBlockNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitKeyFramesNode(WebGrease.Css.Ast.Animation.KeyFramesNode)">
            <summary>设置 NodeTransformVisitor.VisitKeyFramesNode(KeyFramesNode keyFramesNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitKeyFramesNodeKeyFramesNode">
            <summary>设置 NodeTransformVisitor.VisitKeyFramesNode(KeyFramesNode keyFramesNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitMediaExpressionNode(WebGrease.Css.Ast.MediaQuery.MediaExpressionNode)">
            <summary>设置 NodeTransformVisitor.VisitMediaExpressionNode(MediaExpressionNode mediaExpressionNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitMediaExpressionNodeMediaExpressionNode">
            <summary>设置 NodeTransformVisitor.VisitMediaExpressionNode(MediaExpressionNode mediaExpressionNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitMediaNode(WebGrease.Css.Ast.MediaQuery.MediaNode)">
            <summary>设置 NodeTransformVisitor.VisitMediaNode(MediaNode mediaNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitMediaNodeMediaNode">
            <summary>设置 NodeTransformVisitor.VisitMediaNode(MediaNode mediaNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitMediaQueryNode(WebGrease.Css.Ast.MediaQuery.MediaQueryNode)">
            <summary>设置 NodeTransformVisitor.VisitMediaQueryNode(MediaQueryNode mediaQueryNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitMediaQueryNodeMediaQueryNode">
            <summary>设置 NodeTransformVisitor.VisitMediaQueryNode(MediaQueryNode mediaQueryNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitNamespaceNode(WebGrease.Css.Ast.NamespaceNode)">
            <summary>设置 NodeTransformVisitor.VisitNamespaceNode(NamespaceNode namespaceNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitNamespaceNodeNamespaceNode">
            <summary>设置 NodeTransformVisitor.VisitNamespaceNode(NamespaceNode namespaceNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitNegationArgNode(WebGrease.Css.Ast.Selectors.NegationArgNode)">
            <summary>设置 NodeTransformVisitor.VisitNegationArgNode(NegationArgNode negationArgNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitNegationArgNodeNegationArgNode">
            <summary>设置 NodeTransformVisitor.VisitNegationArgNode(NegationArgNode negationArgNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitNegationNode(WebGrease.Css.Ast.Selectors.NegationNode)">
            <summary>设置 NodeTransformVisitor.VisitNegationNode(NegationNode negationNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitNegationNodeNegationNode">
            <summary>设置 NodeTransformVisitor.VisitNegationNode(NegationNode negationNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitPageNode(WebGrease.Css.Ast.PageNode)">
            <summary>设置 NodeTransformVisitor.VisitPageNode(PageNode pageNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitPageNodePageNode">
            <summary>设置 NodeTransformVisitor.VisitPageNode(PageNode pageNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitPseudoNode(WebGrease.Css.Ast.Selectors.PseudoNode)">
            <summary>设置 NodeTransformVisitor.VisitPseudoNode(PseudoNode pseudoNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitPseudoNodePseudoNode">
            <summary>设置 NodeTransformVisitor.VisitPseudoNode(PseudoNode pseudoNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitRulesetNode(WebGrease.Css.Ast.RulesetNode)">
            <summary>设置 NodeTransformVisitor.VisitRulesetNode(RulesetNode rulesetNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitRulesetNodeRulesetNode">
            <summary>设置 NodeTransformVisitor.VisitRulesetNode(RulesetNode rulesetNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitSelectorExpressionNode(WebGrease.Css.Ast.Selectors.SelectorExpressionNode)">
            <summary>设置 NodeTransformVisitor.VisitSelectorExpressionNode(SelectorExpressionNode selectorExpressionNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitSelectorExpressionNodeSelectorExpressionNode">
            <summary>设置 NodeTransformVisitor.VisitSelectorExpressionNode(SelectorExpressionNode selectorExpressionNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitSelectorNamespacePrefixNode(WebGrease.Css.Ast.Selectors.SelectorNamespacePrefixNode)">
            <summary>设置 NodeTransformVisitor.VisitSelectorNamespacePrefixNode(SelectorNamespacePrefixNode selectorNamespacePrefixNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitSelectorNamespacePrefixNodeSelectorNamespacePrefixNode">
            <summary>设置 NodeTransformVisitor.VisitSelectorNamespacePrefixNode(SelectorNamespacePrefixNode selectorNamespacePrefixNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitSelectorNode(WebGrease.Css.Ast.Selectors.SelectorNode)">
            <summary>设置 NodeTransformVisitor.VisitSelectorNode(SelectorNode selectorNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitSelectorNodeSelectorNode">
            <summary>设置 NodeTransformVisitor.VisitSelectorNode(SelectorNode selectorNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitSelectorsGroupNode(WebGrease.Css.Ast.Selectors.SelectorsGroupNode)">
            <summary>设置 NodeTransformVisitor.VisitSelectorsGroupNode(SelectorsGroupNode selectorsGroupNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitSelectorsGroupNodeSelectorsGroupNode">
            <summary>设置 NodeTransformVisitor.VisitSelectorsGroupNode(SelectorsGroupNode selectorsGroupNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitSimpleSelectorSequenceNode(WebGrease.Css.Ast.Selectors.SimpleSelectorSequenceNode)">
            <summary>设置 NodeTransformVisitor.VisitSimpleSelectorSequenceNode(SimpleSelectorSequenceNode simpleSelectorSequenceNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitSimpleSelectorSequenceNodeSimpleSelectorSequenceNode">
            <summary>设置 NodeTransformVisitor.VisitSimpleSelectorSequenceNode(SimpleSelectorSequenceNode simpleSelectorSequenceNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitStyleSheetNode(WebGrease.Css.Ast.StyleSheetNode)">
            <summary>设置 NodeTransformVisitor.VisitStyleSheetNode(StyleSheetNode styleSheet) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitStyleSheetNodeStyleSheetNode">
            <summary>设置 NodeTransformVisitor.VisitStyleSheetNode(StyleSheetNode styleSheet) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitTermNode(WebGrease.Css.Ast.TermNode)">
            <summary>设置 NodeTransformVisitor.VisitTermNode(TermNode termNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitTermNodeTermNode">
            <summary>设置 NodeTransformVisitor.VisitTermNode(TermNode termNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitTermWithOperatorNode(WebGrease.Css.Ast.TermWithOperatorNode)">
            <summary>设置 NodeTransformVisitor.VisitTermWithOperatorNode(TermWithOperatorNode termWithOperatorNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitTermWithOperatorNodeTermWithOperatorNode">
            <summary>设置 NodeTransformVisitor.VisitTermWithOperatorNode(TermWithOperatorNode termWithOperatorNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitTypeSelectorNode(WebGrease.Css.Ast.Selectors.TypeSelectorNode)">
            <summary>设置 NodeTransformVisitor.VisitTypeSelectorNode(TypeSelectorNode typeSelectorNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitTypeSelectorNodeTypeSelectorNode">
            <summary>设置 NodeTransformVisitor.VisitTypeSelectorNode(TypeSelectorNode typeSelectorNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitUniversalSelectorNode(WebGrease.Css.Ast.Selectors.UniversalSelectorNode)">
            <summary>设置 NodeTransformVisitor.VisitUniversalSelectorNode(UniversalSelectorNode universalSelectorNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.VisitUniversalSelectorNodeUniversalSelectorNode">
            <summary>设置 NodeTransformVisitor.VisitUniversalSelectorNode(UniversalSelectorNode universalSelectorNode) 的 stub</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.StubNodeTransformVisitor.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WebGrease.Css.Visitor.Fakes.StubNodeVisitor">
            <summary>WebGrease.Css.Visitor.NodeVisitor 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.InitializeStub">
            <summary>初始化 type StubNodeVisitor 的新实例</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitAttribNode(WebGrease.Css.Ast.Selectors.AttribNode)">
            <summary>设置 NodeVisitor.VisitAttribNode(AttribNode attrib) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitAttribNodeAttribNode">
            <summary>设置 NodeVisitor.VisitAttribNode(AttribNode attrib) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitAttribOperatorAndValueNode(WebGrease.Css.Ast.Selectors.AttribOperatorAndValueNode)">
            <summary>设置 NodeVisitor.VisitAttribOperatorAndValueNode(AttribOperatorAndValueNode attribOperatorAndValueNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitAttribOperatorAndValueNodeAttribOperatorAndValueNode">
            <summary>设置 NodeVisitor.VisitAttribOperatorAndValueNode(AttribOperatorAndValueNode attribOperatorAndValueNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitCombinatorSimpleSelectorSequenceNode(WebGrease.Css.Ast.CombinatorSimpleSelectorSequenceNode)">
            <summary>设置 NodeVisitor.VisitCombinatorSimpleSelectorSequenceNode(CombinatorSimpleSelectorSequenceNode combinatorSimpleSelectorSequenceNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitCombinatorSimpleSelectorSequenceNodeCombinatorSimpleSelectorSequenceNode">
            <summary>设置 NodeVisitor.VisitCombinatorSimpleSelectorSequenceNode(CombinatorSimpleSelectorSequenceNode combinatorSimpleSelectorSequenceNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitDeclarationNode(WebGrease.Css.Ast.DeclarationNode)">
            <summary>设置 NodeVisitor.VisitDeclarationNode(DeclarationNode declarationNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitDeclarationNodeDeclarationNode">
            <summary>设置 NodeVisitor.VisitDeclarationNode(DeclarationNode declarationNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitDocumentQueryNode(WebGrease.Css.Ast.DocumentQueryNode)">
            <summary>设置 NodeVisitor.VisitDocumentQueryNode(DocumentQueryNode documentQueryNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitDocumentQueryNodeDocumentQueryNode">
            <summary>设置 NodeVisitor.VisitDocumentQueryNode(DocumentQueryNode documentQueryNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitExprNode(WebGrease.Css.Ast.ExprNode)">
            <summary>设置 NodeVisitor.VisitExprNode(ExprNode exprNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitExprNodeExprNode">
            <summary>设置 NodeVisitor.VisitExprNode(ExprNode exprNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitFunctionNode(WebGrease.Css.Ast.FunctionNode)">
            <summary>设置 NodeVisitor.VisitFunctionNode(FunctionNode functionNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitFunctionNodeFunctionNode">
            <summary>设置 NodeVisitor.VisitFunctionNode(FunctionNode functionNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitFunctionalPseudoNode(WebGrease.Css.Ast.Selectors.FunctionalPseudoNode)">
            <summary>设置 NodeVisitor.VisitFunctionalPseudoNode(FunctionalPseudoNode functionalPseudoNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitFunctionalPseudoNodeFunctionalPseudoNode">
            <summary>设置 NodeVisitor.VisitFunctionalPseudoNode(FunctionalPseudoNode functionalPseudoNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitHashClassAtNameAttribPseudoNegationNode(WebGrease.Css.Ast.Selectors.HashClassAtNameAttribPseudoNegationNode)">
            <summary>设置 NodeVisitor.VisitHashClassAtNameAttribPseudoNegationNode(HashClassAtNameAttribPseudoNegationNode hashClassAtNameAttribPseudoNegationNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitHashClassAtNameAttribPseudoNegationNodeHashClassAtNameAttribPseudoNegationNode">
            <summary>设置 NodeVisitor.VisitHashClassAtNameAttribPseudoNegationNode(HashClassAtNameAttribPseudoNegationNode hashClassAtNameAttribPseudoNegationNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitImportNode(WebGrease.Css.Ast.ImportNode)">
            <summary>设置 NodeVisitor.VisitImportNode(ImportNode importNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitImportNodeImportNode">
            <summary>设置 NodeVisitor.VisitImportNode(ImportNode importNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitKeyFramesBlockNode(WebGrease.Css.Ast.Animation.KeyFramesBlockNode)">
            <summary>设置 NodeVisitor.VisitKeyFramesBlockNode(KeyFramesBlockNode keyFramesBlockNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitKeyFramesBlockNodeKeyFramesBlockNode">
            <summary>设置 NodeVisitor.VisitKeyFramesBlockNode(KeyFramesBlockNode keyFramesBlockNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitKeyFramesNode(WebGrease.Css.Ast.Animation.KeyFramesNode)">
            <summary>设置 NodeVisitor.VisitKeyFramesNode(KeyFramesNode keyFramesNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitKeyFramesNodeKeyFramesNode">
            <summary>设置 NodeVisitor.VisitKeyFramesNode(KeyFramesNode keyFramesNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitMediaExpressionNode(WebGrease.Css.Ast.MediaQuery.MediaExpressionNode)">
            <summary>设置 NodeVisitor.VisitMediaExpressionNode(MediaExpressionNode mediaExpressionNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitMediaExpressionNodeMediaExpressionNode">
            <summary>设置 NodeVisitor.VisitMediaExpressionNode(MediaExpressionNode mediaExpressionNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitMediaNode(WebGrease.Css.Ast.MediaQuery.MediaNode)">
            <summary>设置 NodeVisitor.VisitMediaNode(MediaNode mediaNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitMediaNodeMediaNode">
            <summary>设置 NodeVisitor.VisitMediaNode(MediaNode mediaNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitMediaQueryNode(WebGrease.Css.Ast.MediaQuery.MediaQueryNode)">
            <summary>设置 NodeVisitor.VisitMediaQueryNode(MediaQueryNode mediaQueryNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitMediaQueryNodeMediaQueryNode">
            <summary>设置 NodeVisitor.VisitMediaQueryNode(MediaQueryNode mediaQueryNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitNamespaceNode(WebGrease.Css.Ast.NamespaceNode)">
            <summary>设置 NodeVisitor.VisitNamespaceNode(NamespaceNode namespaceNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitNamespaceNodeNamespaceNode">
            <summary>设置 NodeVisitor.VisitNamespaceNode(NamespaceNode namespaceNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitNegationArgNode(WebGrease.Css.Ast.Selectors.NegationArgNode)">
            <summary>设置 NodeVisitor.VisitNegationArgNode(NegationArgNode negationArgNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitNegationArgNodeNegationArgNode">
            <summary>设置 NodeVisitor.VisitNegationArgNode(NegationArgNode negationArgNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitNegationNode(WebGrease.Css.Ast.Selectors.NegationNode)">
            <summary>设置 NodeVisitor.VisitNegationNode(NegationNode negationNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitNegationNodeNegationNode">
            <summary>设置 NodeVisitor.VisitNegationNode(NegationNode negationNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitPageNode(WebGrease.Css.Ast.PageNode)">
            <summary>设置 NodeVisitor.VisitPageNode(PageNode pageNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitPageNodePageNode">
            <summary>设置 NodeVisitor.VisitPageNode(PageNode pageNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitPseudoNode(WebGrease.Css.Ast.Selectors.PseudoNode)">
            <summary>设置 NodeVisitor.VisitPseudoNode(PseudoNode pseudoNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitPseudoNodePseudoNode">
            <summary>设置 NodeVisitor.VisitPseudoNode(PseudoNode pseudoNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitRulesetNode(WebGrease.Css.Ast.RulesetNode)">
            <summary>设置 NodeVisitor.VisitRulesetNode(RulesetNode rulesetNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitRulesetNodeRulesetNode">
            <summary>设置 NodeVisitor.VisitRulesetNode(RulesetNode rulesetNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitSelectorExpressionNode(WebGrease.Css.Ast.Selectors.SelectorExpressionNode)">
            <summary>设置 NodeVisitor.VisitSelectorExpressionNode(SelectorExpressionNode selectorExpressionNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitSelectorExpressionNodeSelectorExpressionNode">
            <summary>设置 NodeVisitor.VisitSelectorExpressionNode(SelectorExpressionNode selectorExpressionNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitSelectorNamespacePrefixNode(WebGrease.Css.Ast.Selectors.SelectorNamespacePrefixNode)">
            <summary>设置 NodeVisitor.VisitSelectorNamespacePrefixNode(SelectorNamespacePrefixNode selectorNamespacePrefixNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitSelectorNamespacePrefixNodeSelectorNamespacePrefixNode">
            <summary>设置 NodeVisitor.VisitSelectorNamespacePrefixNode(SelectorNamespacePrefixNode selectorNamespacePrefixNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitSelectorNode(WebGrease.Css.Ast.Selectors.SelectorNode)">
            <summary>设置 NodeVisitor.VisitSelectorNode(SelectorNode selectorNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitSelectorNodeSelectorNode">
            <summary>设置 NodeVisitor.VisitSelectorNode(SelectorNode selectorNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitSelectorsGroupNode(WebGrease.Css.Ast.Selectors.SelectorsGroupNode)">
            <summary>设置 NodeVisitor.VisitSelectorsGroupNode(SelectorsGroupNode selectorsGroupNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitSelectorsGroupNodeSelectorsGroupNode">
            <summary>设置 NodeVisitor.VisitSelectorsGroupNode(SelectorsGroupNode selectorsGroupNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitSimpleSelectorSequenceNode(WebGrease.Css.Ast.Selectors.SimpleSelectorSequenceNode)">
            <summary>设置 NodeVisitor.VisitSimpleSelectorSequenceNode(SimpleSelectorSequenceNode simpleSelectorSequenceNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitSimpleSelectorSequenceNodeSimpleSelectorSequenceNode">
            <summary>设置 NodeVisitor.VisitSimpleSelectorSequenceNode(SimpleSelectorSequenceNode simpleSelectorSequenceNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitStyleSheetNode(WebGrease.Css.Ast.StyleSheetNode)">
            <summary>设置 NodeVisitor.VisitStyleSheetNode(StyleSheetNode styleSheet) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitStyleSheetNodeStyleSheetNode">
            <summary>设置 NodeVisitor.VisitStyleSheetNode(StyleSheetNode styleSheet) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitTermNode(WebGrease.Css.Ast.TermNode)">
            <summary>设置 NodeVisitor.VisitTermNode(TermNode termNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitTermNodeTermNode">
            <summary>设置 NodeVisitor.VisitTermNode(TermNode termNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitTermWithOperatorNode(WebGrease.Css.Ast.TermWithOperatorNode)">
            <summary>设置 NodeVisitor.VisitTermWithOperatorNode(TermWithOperatorNode termWithOperatorNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitTermWithOperatorNodeTermWithOperatorNode">
            <summary>设置 NodeVisitor.VisitTermWithOperatorNode(TermWithOperatorNode termWithOperatorNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitTypeSelectorNode(WebGrease.Css.Ast.Selectors.TypeSelectorNode)">
            <summary>设置 NodeVisitor.VisitTypeSelectorNode(TypeSelectorNode typeSelectorNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitTypeSelectorNodeTypeSelectorNode">
            <summary>设置 NodeVisitor.VisitTypeSelectorNode(TypeSelectorNode typeSelectorNode) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitUniversalSelectorNode(WebGrease.Css.Ast.Selectors.UniversalSelectorNode)">
            <summary>设置 NodeVisitor.VisitUniversalSelectorNode(UniversalSelectorNode universalSelectorNode) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.VisitUniversalSelectorNodeUniversalSelectorNode">
            <summary>设置 NodeVisitor.VisitUniversalSelectorNode(UniversalSelectorNode universalSelectorNode) 的 stub</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WebGrease.Css.Visitor.Fakes.StubNodeVisitor.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WebGrease.Extensions.Fakes.ShimInputSpecExtensions">
            <summary>WebGrease.Extensions.InputSpecExtensions 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Extensions.Fakes.ShimInputSpecExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Extensions.Fakes.ShimInputSpecExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Extensions.Fakes.ShimInputSpecExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Extensions.Fakes.ShimInputSpecExtensions.AddInputSpecsIListOfInputSpecStringXElement">
            <summary>设置 InputSpecExtensions.AddInputSpecs(IList`1&lt;InputSpec&gt; inputSpecs, String sourceDirectory, XElement element) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Extensions.Fakes.ShimInputSpecExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Extensions.Fakes.ShimInputSpecExtensions.GetFilesIEnumerableOfInputSpecStringLogManagerBoolean">
            <summary>设置 InputSpecExtensions.GetFiles(IEnumerable`1&lt;InputSpec&gt; inputs, String rootPath, LogManager log, Boolean throwWhenMissingAndNotOptional) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Extensions.Fakes.ShimInputSpecExtensions.GetFilesInputSpecStringLogManagerBoolean">
            <summary>设置 InputSpecExtensions.GetFiles(InputSpec input, String rootPath, LogManager log, Boolean throwWhenMissingAndNotOptional) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Extensions.Fakes.ShimInputSpecExtensions._GetFilesb__0InputSpec">
            <summary>设置 InputSpecExtensions.&lt;GetFiles&gt;b__0(InputSpec _) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Extensions.Fakes.ShimInputSpecExtensions._GetFilesb__5String">
            <summary>设置 InputSpecExtensions.&lt;GetFiles&gt;b__5(String name) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Extensions.Fakes.ShimStringPathExtensions">
            <summary>WebGrease.Extensions.StringPathExtensions 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Extensions.Fakes.ShimStringPathExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Extensions.Fakes.ShimStringPathExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Extensions.Fakes.ShimStringPathExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Extensions.Fakes.ShimStringPathExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Extensions.Fakes.ShimStringPathExtensions.EnsureEndSeparatorString">
            <summary>设置 StringPathExtensions.EnsureEndSeparator(String directory) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Extensions.Fakes.ShimStringPathExtensions.GetFullPathWithLowercaseString">
            <summary>设置 StringPathExtensions.GetFullPathWithLowercase(String originalPath) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Extensions.Fakes.ShimStringPathExtensions.MakeAbsoluteToStringString">
            <summary>设置 StringPathExtensions.MakeAbsoluteTo(String pathToConvert, String pathToConvertFrom) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Extensions.Fakes.ShimStringPathExtensions.MakeRelativeToDirectoryStringString">
            <summary>设置 StringPathExtensions.MakeRelativeToDirectory(String absolutePath, String relativeTo) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Extensions.Fakes.ShimStringPathExtensions.MakeRelativeToStringStringCharArray">
            <summary>设置 StringPathExtensions.MakeRelativeTo(String pathToConvert, String pathToConvertFrom, Char[] separators) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Extensions.Fakes.ShimStringPathExtensions.NormalizeUrlString">
            <summary>设置 StringPathExtensions.NormalizeUrl(String url) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimCacheManager">
            <summary>WebGrease.CacheManager 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimCacheManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimCacheManager.#ctor(WebGrease.CacheManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimCacheManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimCacheManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimCacheManager.Bind(WebGrease.ICacheManager)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheManager.BeginSectionStringContentItemObjectIFileSet">
            <summary>设置 CacheManager.BeginSection(String category, ContentItem contentItem, Object settings, IFileSet cacheVaryByFileSet) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheManager.CleanUp">
            <summary>设置 CacheManager.CleanUp() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheManager.ConstructorWebGreaseConfigurationLogManager">
            <summary>设置 CacheManager.CacheManager(WebGreaseConfiguration configuration, LogManager logManager) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheManager.CurrentCacheSectionGet">
            <summary>设置 CacheManager.get_CurrentCacheSection() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheManager.EndSectionICacheSection">
            <summary>设置 CacheManager.EndSection(ICacheSection cacheSection) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheManager.GetAbsoluteCacheFilePathStringString">
            <summary>设置 CacheManager.GetAbsoluteCacheFilePath(String category, String fileName) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheManager.LoadedCacheSectionsGet">
            <summary>设置 CacheManager.get_LoadedCacheSections() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheManager.RootPathGet">
            <summary>设置 CacheManager.get_RootPath() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheManager.SetContextIWebGreaseContext">
            <summary>设置 CacheManager.SetContext(IWebGreaseContext newContext) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheManager.StoreInCacheStringContentItem">
            <summary>设置 CacheManager.StoreInCache(String cacheCategory, ContentItem contentItem) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimCacheManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheManager.AllInstances.BeginSectionStringContentItemObjectIFileSet">
            <summary>设置 CacheManager.BeginSection(String category, ContentItem contentItem, Object settings, IFileSet cacheVaryByFileSet) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheManager.AllInstances.CleanUp">
            <summary>设置 CacheManager.CleanUp() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheManager.AllInstances.CurrentCacheSectionGet">
            <summary>设置 CacheManager.get_CurrentCacheSection() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheManager.AllInstances.EndSectionICacheSection">
            <summary>设置 CacheManager.EndSection(ICacheSection cacheSection) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheManager.AllInstances.GetAbsoluteCacheFilePathStringString">
            <summary>设置 CacheManager.GetAbsoluteCacheFilePath(String category, String fileName) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheManager.AllInstances.LoadedCacheSectionsGet">
            <summary>设置 CacheManager.get_LoadedCacheSections() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheManager.AllInstances.RootPathGet">
            <summary>设置 CacheManager.get_RootPath() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheManager.AllInstances.SetContextIWebGreaseContext">
            <summary>设置 CacheManager.SetContext(IWebGreaseContext newContext) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheManager.AllInstances.StoreInCacheStringContentItem">
            <summary>设置 CacheManager.StoreInCache(String cacheCategory, ContentItem contentItem) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimCacheResult">
            <summary>WebGrease.CacheResult 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimCacheResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimCacheResult.#ctor(WebGrease.CacheResult)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimCacheResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimCacheResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheResult.CachedFilePathGet">
            <summary>设置 CacheResult.get_CachedFilePath() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheResult.CachedFilePathSetString">
            <summary>设置 CacheResult.set_CachedFilePath(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheResult.Constructor">
            <summary>设置 CacheResult.CacheResult() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheResult.ContentHashGet">
            <summary>设置 CacheResult.get_ContentHash() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheResult.ContentHashSetString">
            <summary>设置 CacheResult.set_ContentHash(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheResult.EndResultGet">
            <summary>设置 CacheResult.get_EndResult() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheResult.EndResultSetBoolean">
            <summary>设置 CacheResult.set_EndResult(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheResult.FileCategoryGet">
            <summary>设置 CacheResult.get_FileCategory() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheResult.FileCategorySetString">
            <summary>设置 CacheResult.set_FileCategory(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheResult.FromContentFileIWebGreaseContextStringBooleanStringContentItem">
            <summary>设置 CacheResult.FromContentFile(IWebGreaseContext context, String cacheCategory, Boolean endResult, String fileCategory, ContentItem contentItem) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheResult.RelativeContentPathGet">
            <summary>设置 CacheResult.get_RelativeContentPath() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheResult.RelativeContentPathSetString">
            <summary>设置 CacheResult.set_RelativeContentPath(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheResult.RelativeHashedContentPathGet">
            <summary>设置 CacheResult.get_RelativeHashedContentPath() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheResult.RelativeHashedContentPathSetString">
            <summary>设置 CacheResult.set_RelativeHashedContentPath(String value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimCacheResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheResult.AllInstances.CachedFilePathGet">
            <summary>设置 CacheResult.get_CachedFilePath() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheResult.AllInstances.CachedFilePathSetString">
            <summary>设置 CacheResult.set_CachedFilePath(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheResult.AllInstances.ContentHashGet">
            <summary>设置 CacheResult.get_ContentHash() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheResult.AllInstances.ContentHashSetString">
            <summary>设置 CacheResult.set_ContentHash(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheResult.AllInstances.EndResultGet">
            <summary>设置 CacheResult.get_EndResult() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheResult.AllInstances.EndResultSetBoolean">
            <summary>设置 CacheResult.set_EndResult(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheResult.AllInstances.FileCategoryGet">
            <summary>设置 CacheResult.get_FileCategory() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheResult.AllInstances.FileCategorySetString">
            <summary>设置 CacheResult.set_FileCategory(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheResult.AllInstances.RelativeContentPathGet">
            <summary>设置 CacheResult.get_RelativeContentPath() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheResult.AllInstances.RelativeContentPathSetString">
            <summary>设置 CacheResult.set_RelativeContentPath(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheResult.AllInstances.RelativeHashedContentPathGet">
            <summary>设置 CacheResult.get_RelativeHashedContentPath() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheResult.AllInstances.RelativeHashedContentPathSetString">
            <summary>设置 CacheResult.set_RelativeHashedContentPath(String value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimCacheSection">
            <summary>WebGrease.CacheSection 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimCacheSection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimCacheSection.#ctor(WebGrease.CacheSection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimCacheSection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimCacheSection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimCacheSection.Bind(WebGrease.ICacheSection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimCacheSection.GetCacheDataOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>设置 CacheSection.GetCacheData(String id) 的 填充码</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimCacheSection.SetCacheDataOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,``0})">
            <summary>设置 CacheSection.SetCacheData(String id, !!0 obj) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.AddChildCacheSectionCacheSection">
            <summary>设置 CacheSection.AddChildCacheSection(CacheSection cacheSection) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.AddResultContentItemStringBoolean">
            <summary>设置 CacheSection.AddResult(ContentItem contentItem, String id, Boolean isEndResult) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.AddSourceDependencyInputSpec">
            <summary>设置 CacheSection.AddSourceDependency(InputSpec inputSpec) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.AddSourceDependencyString">
            <summary>设置 CacheSection.AddSourceDependency(String file) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.AddSourceDependencyStringStringSearchOption">
            <summary>设置 CacheSection.AddSourceDependency(String directory, String searchPattern, SearchOption searchOption) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.BeginIWebGreaseContextStringActionOfICacheSectionICacheSection">
            <summary>设置 CacheSection.Begin(IWebGreaseContext context, String cacheCategory, Action`1&lt;ICacheSection&gt; action, ICacheSection parentCacheSection) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.BeginIWebGreaseContextStringStringICacheSection">
            <summary>设置 CacheSection.Begin(IWebGreaseContext context, String cacheCategory, String uniqueKey, ICacheSection parentCacheSection) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.CanBeRestoredFromCache">
            <summary>设置 CacheSection.CanBeRestoredFromCache() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.CanBeSkipped">
            <summary>设置 CacheSection.CanBeSkipped() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.ChildCacheSectionsGet">
            <summary>设置 CacheSection.get_ChildCacheSections() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.Constructor">
            <summary>设置 CacheSection.CacheSection() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.Dispose">
            <summary>设置 CacheSection.Dispose() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.EndSection">
            <summary>设置 CacheSection.EndSection() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.EnsureCachePathIWebGreaseContextString">
            <summary>设置 CacheSection.EnsureCachePath(IWebGreaseContext context, String cacheCategory) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.GetCacheResultsStringBoolean">
            <summary>设置 CacheSection.GetCacheResults(String fileCategory, Boolean endResultOnly) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.GetCachedContentItemString">
            <summary>设置 CacheSection.GetCachedContentItem(String fileCategory) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.GetCachedContentItemStringStringStringIEnumerableOfContentPivot">
            <summary>设置 CacheSection.GetCachedContentItem(String fileCategory, String relativeDestinationFile, String relativeHashedDestinationFile, IEnumerable`1&lt;ContentPivot&gt; contentPivots) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.GetCachedContentItemsStringBoolean">
            <summary>设置 CacheSection.GetCachedContentItems(String fileCategory, Boolean endResultOnly) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.ParentGet">
            <summary>设置 CacheSection.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.Save">
            <summary>设置 CacheSection.Save() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.ToReadOnlyCacheSectionJsonCacheSection">
            <summary>设置 CacheSection.ToReadOnlyCacheSectionJson(CacheSection cacheSection) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.Touch">
            <summary>设置 CacheSection.Touch() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.UniqueKeyGet">
            <summary>设置 CacheSection.get_UniqueKey() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.VaryByContentItemContentItem">
            <summary>设置 CacheSection.VaryByContentItem(ContentItem contentItem) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.VaryBySettingsObjectBoolean">
            <summary>设置 CacheSection.VaryBySettings(Object settings, Boolean nonpublic) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection._Beginb__3CacheVaryByFile">
            <summary>设置 CacheSection.&lt;Begin&gt;b__3(CacheVaryByFile vbf) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection._GetCachedContentItemsb__bCacheResult">
            <summary>设置 CacheSection.&lt;GetCachedContentItems&gt;b__b(CacheResult crf) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection._ToReadOnlyCacheSectionJsonb__dCacheSection">
            <summary>设置 CacheSection.&lt;ToReadOnlyCacheSectionJson&gt;b__d(CacheSection ccs) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection._Touchb__fCacheResult">
            <summary>设置 CacheSection.&lt;Touch&gt;b__f(CacheResult cr) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection._ctorb__0">
            <summary>设置 CacheSection.&lt;.ctor&gt;b__0() 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimCacheSection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimCacheSection.AllInstances.GetCacheDataOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{WebGrease.CacheSection,System.String,``0})">
            <summary>设置 CacheSection.GetCacheData(String id) 的 填充码</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimCacheSection.AllInstances.SetCacheDataOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{WebGrease.CacheSection,System.String,``0})">
            <summary>设置 CacheSection.SetCacheData(String id, !!0 obj) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.AllInstances.AddChildCacheSectionCacheSection">
            <summary>设置 CacheSection.AddChildCacheSection(CacheSection cacheSection) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.AllInstances.AddResultContentItemStringBoolean">
            <summary>设置 CacheSection.AddResult(ContentItem contentItem, String id, Boolean isEndResult) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.AllInstances.AddSourceDependencyInputSpec">
            <summary>设置 CacheSection.AddSourceDependency(InputSpec inputSpec) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.AllInstances.AddSourceDependencyString">
            <summary>设置 CacheSection.AddSourceDependency(String file) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.AllInstances.AddSourceDependencyStringStringSearchOption">
            <summary>设置 CacheSection.AddSourceDependency(String directory, String searchPattern, SearchOption searchOption) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.AllInstances.CanBeRestoredFromCache">
            <summary>设置 CacheSection.CanBeRestoredFromCache() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.AllInstances.CanBeSkipped">
            <summary>设置 CacheSection.CanBeSkipped() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.AllInstances.ChildCacheSectionsGet">
            <summary>设置 CacheSection.get_ChildCacheSections() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.AllInstances.Dispose">
            <summary>设置 CacheSection.Dispose() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.AllInstances.EndSection">
            <summary>设置 CacheSection.EndSection() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.AllInstances.GetCacheResultsStringBoolean">
            <summary>设置 CacheSection.GetCacheResults(String fileCategory, Boolean endResultOnly) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.AllInstances.GetCachedContentItemString">
            <summary>设置 CacheSection.GetCachedContentItem(String fileCategory) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.AllInstances.GetCachedContentItemStringStringStringIEnumerableOfContentPivot">
            <summary>设置 CacheSection.GetCachedContentItem(String fileCategory, String relativeDestinationFile, String relativeHashedDestinationFile, IEnumerable`1&lt;ContentPivot&gt; contentPivots) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.AllInstances.GetCachedContentItemsStringBoolean">
            <summary>设置 CacheSection.GetCachedContentItems(String fileCategory, Boolean endResultOnly) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.AllInstances.ParentGet">
            <summary>设置 CacheSection.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.AllInstances.Save">
            <summary>设置 CacheSection.Save() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.AllInstances.Touch">
            <summary>设置 CacheSection.Touch() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.AllInstances.UniqueKeyGet">
            <summary>设置 CacheSection.get_UniqueKey() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.AllInstances.VaryByContentItemContentItem">
            <summary>设置 CacheSection.VaryByContentItem(ContentItem contentItem) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.AllInstances.VaryBySettingsObjectBoolean">
            <summary>设置 CacheSection.VaryBySettings(Object settings, Boolean nonpublic) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSection.AllInstances._Touchb__fCacheResult">
            <summary>设置 CacheSection.&lt;Touch&gt;b__f(CacheResult cr) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimCacheSourceDependency">
            <summary>WebGrease.CacheSourceDependency 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimCacheSourceDependency.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimCacheSourceDependency.#ctor(WebGrease.CacheSourceDependency)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimCacheSourceDependency.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimCacheSourceDependency.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSourceDependency.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSourceDependency.Constructor">
            <summary>设置 CacheSourceDependency.CacheSourceDependency() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSourceDependency.CreateIWebGreaseContextInputSpec">
            <summary>设置 CacheSourceDependency.Create(IWebGreaseContext context, InputSpec inputSpec) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSourceDependency.GetInputSpecHashIWebGreaseContextInputSpec">
            <summary>设置 CacheSourceDependency.GetInputSpecHash(IWebGreaseContext context, InputSpec inputSpec) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSourceDependency.HasChangedIWebGreaseContext">
            <summary>设置 CacheSourceDependency.HasChanged(IWebGreaseContext context) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSourceDependency.InputSpecGet">
            <summary>设置 CacheSourceDependency.get_InputSpec() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSourceDependency.InputSpecHashGet">
            <summary>设置 CacheSourceDependency.get_InputSpecHash() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSourceDependency.InputSpecHashSetString">
            <summary>设置 CacheSourceDependency.set_InputSpecHash(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSourceDependency.InputSpecSetInputSpec">
            <summary>设置 CacheSourceDependency.set_InputSpec(InputSpec value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimCacheSourceDependency.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSourceDependency.AllInstances.HasChangedIWebGreaseContext">
            <summary>设置 CacheSourceDependency.HasChanged(IWebGreaseContext context) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSourceDependency.AllInstances.InputSpecGet">
            <summary>设置 CacheSourceDependency.get_InputSpec() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSourceDependency.AllInstances.InputSpecHashGet">
            <summary>设置 CacheSourceDependency.get_InputSpecHash() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSourceDependency.AllInstances.InputSpecHashSetString">
            <summary>设置 CacheSourceDependency.set_InputSpecHash(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheSourceDependency.AllInstances.InputSpecSetInputSpec">
            <summary>设置 CacheSourceDependency.set_InputSpec(InputSpec value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimCacheVaryByFile">
            <summary>WebGrease.CacheVaryByFile 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimCacheVaryByFile.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimCacheVaryByFile.#ctor(WebGrease.CacheVaryByFile)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimCacheVaryByFile.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimCacheVaryByFile.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheVaryByFile.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheVaryByFile.Constructor">
            <summary>设置 CacheVaryByFile.CacheVaryByFile() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheVaryByFile.FromFileIWebGreaseContextContentItem">
            <summary>设置 CacheVaryByFile.FromFile(IWebGreaseContext context, ContentItem contentItem) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheVaryByFile.HashGet">
            <summary>设置 CacheVaryByFile.get_Hash() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheVaryByFile.HashSetString">
            <summary>设置 CacheVaryByFile.set_Hash(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheVaryByFile.PathGet">
            <summary>设置 CacheVaryByFile.get_Path() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheVaryByFile.PathSetString">
            <summary>设置 CacheVaryByFile.set_Path(String value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimCacheVaryByFile.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheVaryByFile.AllInstances.HashGet">
            <summary>设置 CacheVaryByFile.get_Hash() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheVaryByFile.AllInstances.HashSetString">
            <summary>设置 CacheVaryByFile.set_Hash(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheVaryByFile.AllInstances.PathGet">
            <summary>设置 CacheVaryByFile.get_Path() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCacheVaryByFile.AllInstances.PathSetString">
            <summary>设置 CacheVaryByFile.set_Path(String value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimContentItem">
            <summary>WebGrease.ContentItem 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimContentItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimContentItem.#ctor(WebGrease.ContentItem)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimContentItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimContentItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.AbsoluteContentPathGet">
            <summary>设置 ContentItem.get_AbsoluteContentPath() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.AbsoluteContentPathSetString">
            <summary>设置 ContentItem.set_AbsoluteContentPath(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.AbsoluteDiskPathGet">
            <summary>设置 ContentItem.get_AbsoluteDiskPath() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.Constructor">
            <summary>设置 ContentItem.ContentItem() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.ContentFromDisk">
            <summary>设置 ContentItem.ContentFromDisk() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.ContentGet">
            <summary>设置 ContentItem.get_Content() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.ContentItemTypeGet">
            <summary>设置 ContentItem.get_ContentItemType() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.ContentItemTypeSetContentItemType">
            <summary>设置 ContentItem.set_ContentItemType(ContentItemType value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.ContentValueGet">
            <summary>设置 ContentItem.get_ContentValue() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.ContentValueSetString">
            <summary>设置 ContentItem.set_ContentValue(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.FromCacheResultCacheResultContentPivotArray">
            <summary>设置 ContentItem.FromCacheResult(CacheResult cacheResult, ContentPivot[] pivots) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.FromCacheResultCacheResultStringStringContentPivotArray">
            <summary>设置 ContentItem.FromCacheResult(CacheResult cacheResult, String relativeContentPath, String relativeHashedContentPath, ContentPivot[] pivots) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.FromContentItemContentItemStringString">
            <summary>设置 ContentItem.FromContentItem(ContentItem contentItem, String relativeContentPath, String relativeHashedContentPath) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.FromContentStringContentItemContentPivotArray">
            <summary>设置 ContentItem.FromContent(String content, ContentItem contentItem, ContentPivot[] pivots) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.FromContentStringContentPivotArray">
            <summary>设置 ContentItem.FromContent(String content, ContentPivot[] pivots) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.FromContentStringStringStringContentPivotArray">
            <summary>设置 ContentItem.FromContent(String content, String relativeContentPath, String relativeHashedContentPath, ContentPivot[] pivots) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.FromFileStringStringStringContentPivotArray">
            <summary>设置 ContentItem.FromFile(String absoluteContentPath, String relativeContentPath, String relativeHashedContentPath, ContentPivot[] pivots) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.GetContentHashIWebGreaseContext">
            <summary>设置 ContentItem.GetContentHash(IWebGreaseContext context) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.IsFromDiskGet">
            <summary>设置 ContentItem.get_IsFromDisk() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.PivotsGet">
            <summary>设置 ContentItem.get_Pivots() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.PivotsSetIEnumerableOfContentPivot">
            <summary>设置 ContentItem.set_Pivots(IEnumerable`1&lt;ContentPivot&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.RelativeContentPathGet">
            <summary>设置 ContentItem.get_RelativeContentPath() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.RelativeContentPathSetString">
            <summary>设置 ContentItem.set_RelativeContentPath(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.RelativeHashedContentPathGet">
            <summary>设置 ContentItem.get_RelativeHashedContentPath() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.RelativeHashedContentPathSetString">
            <summary>设置 ContentItem.set_RelativeHashedContentPath(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.WriteToContentPathStringBoolean">
            <summary>设置 ContentItem.WriteToContentPath(String destinationDirectory, Boolean overwrite) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.WriteToRelativeHashedPathStringBoolean">
            <summary>设置 ContentItem.WriteToRelativeHashedPath(String destinationDirectory, Boolean overwrite) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.WriteToStringBoolean">
            <summary>设置 ContentItem.WriteTo(String fullPath, Boolean overwrite) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimContentItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.AllInstances.AbsoluteContentPathGet">
            <summary>设置 ContentItem.get_AbsoluteContentPath() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.AllInstances.AbsoluteContentPathSetString">
            <summary>设置 ContentItem.set_AbsoluteContentPath(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.AllInstances.AbsoluteDiskPathGet">
            <summary>设置 ContentItem.get_AbsoluteDiskPath() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.AllInstances.ContentFromDisk">
            <summary>设置 ContentItem.ContentFromDisk() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.AllInstances.ContentGet">
            <summary>设置 ContentItem.get_Content() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.AllInstances.ContentItemTypeGet">
            <summary>设置 ContentItem.get_ContentItemType() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.AllInstances.ContentItemTypeSetContentItemType">
            <summary>设置 ContentItem.set_ContentItemType(ContentItemType value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.AllInstances.ContentValueGet">
            <summary>设置 ContentItem.get_ContentValue() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.AllInstances.ContentValueSetString">
            <summary>设置 ContentItem.set_ContentValue(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.AllInstances.GetContentHashIWebGreaseContext">
            <summary>设置 ContentItem.GetContentHash(IWebGreaseContext context) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.AllInstances.IsFromDiskGet">
            <summary>设置 ContentItem.get_IsFromDisk() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.AllInstances.PivotsGet">
            <summary>设置 ContentItem.get_Pivots() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.AllInstances.PivotsSetIEnumerableOfContentPivot">
            <summary>设置 ContentItem.set_Pivots(IEnumerable`1&lt;ContentPivot&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.AllInstances.RelativeContentPathGet">
            <summary>设置 ContentItem.get_RelativeContentPath() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.AllInstances.RelativeContentPathSetString">
            <summary>设置 ContentItem.set_RelativeContentPath(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.AllInstances.RelativeHashedContentPathGet">
            <summary>设置 ContentItem.get_RelativeHashedContentPath() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.AllInstances.RelativeHashedContentPathSetString">
            <summary>设置 ContentItem.set_RelativeHashedContentPath(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.AllInstances.WriteToContentPathStringBoolean">
            <summary>设置 ContentItem.WriteToContentPath(String destinationDirectory, Boolean overwrite) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.AllInstances.WriteToRelativeHashedPathStringBoolean">
            <summary>设置 ContentItem.WriteToRelativeHashedPath(String destinationDirectory, Boolean overwrite) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentItem.AllInstances.WriteToStringBoolean">
            <summary>设置 ContentItem.WriteTo(String fullPath, Boolean overwrite) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimContentPivot">
            <summary>WebGrease.ContentPivot 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimContentPivot.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimContentPivot.#ctor(WebGrease.ContentPivot)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimContentPivot.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimContentPivot.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentPivot.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentPivot.ConstructorStringString">
            <summary>设置 ContentPivot.ContentPivot(String locale, String theme) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentPivot.LocaleGet">
            <summary>设置 ContentPivot.get_Locale() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentPivot.LocaleSetString">
            <summary>设置 ContentPivot.set_Locale(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentPivot.ThemeGet">
            <summary>设置 ContentPivot.get_Theme() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentPivot.ThemeSetString">
            <summary>设置 ContentPivot.set_Theme(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentPivot.ToString">
            <summary>设置 ContentPivot.ToString() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentPivot._ToStringb__0String">
            <summary>设置 ContentPivot.&lt;ToString&gt;b__0(String i) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimContentPivot.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentPivot.AllInstances.LocaleGet">
            <summary>设置 ContentPivot.get_Locale() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentPivot.AllInstances.LocaleSetString">
            <summary>设置 ContentPivot.set_Locale(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentPivot.AllInstances.ThemeGet">
            <summary>设置 ContentPivot.get_Theme() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentPivot.AllInstances.ThemeSetString">
            <summary>设置 ContentPivot.set_Theme(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimContentPivot.AllInstances.ToString01">
            <summary>设置 ContentPivot.ToString() 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimCssMinifier">
            <summary>WebGrease.CssMinifier 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimCssMinifier.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimCssMinifier.#ctor(WebGrease.CssMinifier)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimCssMinifier.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimCssMinifier.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCssMinifier.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCssMinifier.ConstructorIWebGreaseContext">
            <summary>设置 CssMinifier.CssMinifier(IWebGreaseContext context) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCssMinifier.ErrorsGet">
            <summary>设置 CssMinifier.get_Errors() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCssMinifier.ErrorsSetListOfString">
            <summary>设置 CssMinifier.set_Errors(List`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCssMinifier.MinifyString">
            <summary>设置 CssMinifier.Minify(String cssContent) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCssMinifier.ShouldMinifyGet">
            <summary>设置 CssMinifier.get_ShouldMinify() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCssMinifier.ShouldMinifySetBoolean">
            <summary>设置 CssMinifier.set_ShouldMinify(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimCssMinifier.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCssMinifier.AllInstances.ErrorsGet">
            <summary>设置 CssMinifier.get_Errors() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCssMinifier.AllInstances.ErrorsSetListOfString">
            <summary>设置 CssMinifier.set_Errors(List`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCssMinifier.AllInstances.MinifyString">
            <summary>设置 CssMinifier.Minify(String cssContent) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCssMinifier.AllInstances.ShouldMinifyGet">
            <summary>设置 CssMinifier.get_ShouldMinify() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimCssMinifier.AllInstances.ShouldMinifySetBoolean">
            <summary>设置 CssMinifier.set_ShouldMinify(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimLogManager">
            <summary>WebGrease.LogManager 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimLogManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimLogManager.#ctor(WebGrease.LogManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimLogManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimLogManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimLogManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimLogManager.ConstructorActionOfStringMessageImportanceActionOfStringLogExtendedErrorActionOfStringLogErrorLogExtendedErrorNullableOfBoolean">
            <summary>设置 LogManager.LogManager(Action`2&lt;String,MessageImportance&gt; logInformation, Action`1&lt;String&gt; logWarning, LogExtendedError logExtendedWarning, Action`1&lt;String&gt; logErrorMessage, LogError logError, LogExtendedError logExtendedError, Nullable`1&lt;Boolean&gt; treatWarningsAsErrors) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimLogManager.ErrorExceptionStringString">
            <summary>设置 LogManager.Error(Exception exception, String customMessage, String file) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimLogManager.ErrorHasOccurred">
            <summary>设置 LogManager.ErrorHasOccurred() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimLogManager.ErrorOccurredAddEventHandler">
            <summary>设置 LogManager.add_ErrorOccurred(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimLogManager.ErrorOccurredRemoveEventHandler">
            <summary>设置 LogManager.remove_ErrorOccurred(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimLogManager.ErrorString">
            <summary>设置 LogManager.Error(String message) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimLogManager.ErrorStringStringStringStringNullableOfInt32NullableOfInt32NullableOfInt32NullableOfInt32String">
            <summary>设置 LogManager.Error(String subcategory, String errorCode, String helpKeyword, String file, Nullable`1&lt;Int32&gt; lineNumber, Nullable`1&lt;Int32&gt; columnNumber, Nullable`1&lt;Int32&gt; endLineNumber, Nullable`1&lt;Int32&gt; endColumnNumber, String message) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimLogManager.HasExtendedErrorHandlerGet">
            <summary>设置 LogManager.get_HasExtendedErrorHandler() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimLogManager.HasExtendedErrorHandlerSetBoolean">
            <summary>设置 LogManager.set_HasExtendedErrorHandler(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimLogManager.InformationStringMessageImportance">
            <summary>设置 LogManager.Information(String message, MessageImportance messageImportance) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimLogManager.TreatWarningsAsErrorsGet">
            <summary>设置 LogManager.get_TreatWarningsAsErrors() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimLogManager.TreatWarningsAsErrorsSetBoolean">
            <summary>设置 LogManager.set_TreatWarningsAsErrors(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimLogManager.WarningString">
            <summary>设置 LogManager.Warning(String message) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimLogManager.WarningStringStringStringStringNullableOfInt32NullableOfInt32NullableOfInt32NullableOfInt32String">
            <summary>设置 LogManager.Warning(String subcategory, String errorCode, String helpKeyword, String file, Nullable`1&lt;Int32&gt; lineNumber, Nullable`1&lt;Int32&gt; columnNumber, Nullable`1&lt;Int32&gt; endLineNumber, Nullable`1&lt;Int32&gt; endColumnNumber, String message) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimLogManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimLogManager.AllInstances.ErrorExceptionStringString">
            <summary>设置 LogManager.Error(Exception exception, String customMessage, String file) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimLogManager.AllInstances.ErrorHasOccurred">
            <summary>设置 LogManager.ErrorHasOccurred() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimLogManager.AllInstances.ErrorOccurredAddEventHandler">
            <summary>设置 LogManager.add_ErrorOccurred(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimLogManager.AllInstances.ErrorOccurredRemoveEventHandler">
            <summary>设置 LogManager.remove_ErrorOccurred(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimLogManager.AllInstances.ErrorString">
            <summary>设置 LogManager.Error(String message) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimLogManager.AllInstances.ErrorStringStringStringStringNullableOfInt32NullableOfInt32NullableOfInt32NullableOfInt32String">
            <summary>设置 LogManager.Error(String subcategory, String errorCode, String helpKeyword, String file, Nullable`1&lt;Int32&gt; lineNumber, Nullable`1&lt;Int32&gt; columnNumber, Nullable`1&lt;Int32&gt; endLineNumber, Nullable`1&lt;Int32&gt; endColumnNumber, String message) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimLogManager.AllInstances.HasExtendedErrorHandlerGet">
            <summary>设置 LogManager.get_HasExtendedErrorHandler() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimLogManager.AllInstances.HasExtendedErrorHandlerSetBoolean">
            <summary>设置 LogManager.set_HasExtendedErrorHandler(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimLogManager.AllInstances.InformationStringMessageImportance">
            <summary>设置 LogManager.Information(String message, MessageImportance messageImportance) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimLogManager.AllInstances.TreatWarningsAsErrorsGet">
            <summary>设置 LogManager.get_TreatWarningsAsErrors() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimLogManager.AllInstances.TreatWarningsAsErrorsSetBoolean">
            <summary>设置 LogManager.set_TreatWarningsAsErrors(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimLogManager.AllInstances.WarningString">
            <summary>设置 LogManager.Warning(String message) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimLogManager.AllInstances.WarningStringStringStringStringNullableOfInt32NullableOfInt32NullableOfInt32NullableOfInt32String">
            <summary>设置 LogManager.Warning(String subcategory, String errorCode, String helpKeyword, String file, Nullable`1&lt;Int32&gt; lineNumber, Nullable`1&lt;Int32&gt; columnNumber, Nullable`1&lt;Int32&gt; endLineNumber, Nullable`1&lt;Int32&gt; endColumnNumber, String message) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimNullCacheSection">
            <summary>WebGrease.NullCacheSection 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimNullCacheSection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimNullCacheSection.#ctor(WebGrease.NullCacheSection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimNullCacheSection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimNullCacheSection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimNullCacheSection.Bind(WebGrease.ICacheSection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimNullCacheSection.GetCacheDataOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>设置 NullCacheSection.GetCacheData(String id) 的 填充码</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimNullCacheSection.SetCacheDataOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,``0})">
            <summary>设置 NullCacheSection.SetCacheData(String id, !!0 obj) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimNullCacheSection.AddResultContentItemStringBoolean">
            <summary>设置 NullCacheSection.AddResult(ContentItem contentItem, String id, Boolean isEndResult) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimNullCacheSection.AddSourceDependencyInputSpec">
            <summary>设置 NullCacheSection.AddSourceDependency(InputSpec inputSpec) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimNullCacheSection.AddSourceDependencyString">
            <summary>设置 NullCacheSection.AddSourceDependency(String file) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimNullCacheSection.AddSourceDependencyStringStringSearchOption">
            <summary>设置 NullCacheSection.AddSourceDependency(String directory, String searchPattern, SearchOption searchOption) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimNullCacheSection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimNullCacheSection.CanBeRestoredFromCache">
            <summary>设置 NullCacheSection.CanBeRestoredFromCache() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimNullCacheSection.CanBeSkipped">
            <summary>设置 NullCacheSection.CanBeSkipped() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimNullCacheSection.Constructor">
            <summary>设置 NullCacheSection.NullCacheSection() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimNullCacheSection.EndSection">
            <summary>设置 NullCacheSection.EndSection() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimNullCacheSection.GetCachedContentItemString">
            <summary>设置 NullCacheSection.GetCachedContentItem(String fileCategory) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimNullCacheSection.GetCachedContentItemStringStringStringIEnumerableOfContentPivot">
            <summary>设置 NullCacheSection.GetCachedContentItem(String fileCategory, String relativeDestinationFile, String relativeHashedDestinationFile, IEnumerable`1&lt;ContentPivot&gt; contentPivots) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimNullCacheSection.GetCachedContentItemsStringBoolean">
            <summary>设置 NullCacheSection.GetCachedContentItems(String fileCategory, Boolean endResultOnly) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimNullCacheSection.ParentGet">
            <summary>设置 NullCacheSection.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimNullCacheSection.Save">
            <summary>设置 NullCacheSection.Save() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimNullCacheSection.StaticConstructor">
            <summary>设置 NullCacheSection.NullCacheSection() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimNullCacheSection.UniqueKeyGet">
            <summary>设置 NullCacheSection.get_UniqueKey() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimNullCacheSection.UniqueKeySetString">
            <summary>设置 NullCacheSection.set_UniqueKey(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimNullCacheSection.VaryByContentItemContentItem">
            <summary>设置 NullCacheSection.VaryByContentItem(ContentItem contentItem) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimNullCacheSection.VaryBySettingsObjectBoolean">
            <summary>设置 NullCacheSection.VaryBySettings(Object settings, Boolean nonpublic) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimNullCacheSection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimNullCacheSection.AllInstances.GetCacheDataOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{WebGrease.NullCacheSection,System.String,``0})">
            <summary>设置 NullCacheSection.GetCacheData(String id) 的 填充码</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimNullCacheSection.AllInstances.SetCacheDataOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{WebGrease.NullCacheSection,System.String,``0})">
            <summary>设置 NullCacheSection.SetCacheData(String id, !!0 obj) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimNullCacheSection.AllInstances.AddResultContentItemStringBoolean">
            <summary>设置 NullCacheSection.AddResult(ContentItem contentItem, String id, Boolean isEndResult) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimNullCacheSection.AllInstances.AddSourceDependencyInputSpec">
            <summary>设置 NullCacheSection.AddSourceDependency(InputSpec inputSpec) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimNullCacheSection.AllInstances.AddSourceDependencyString">
            <summary>设置 NullCacheSection.AddSourceDependency(String file) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimNullCacheSection.AllInstances.AddSourceDependencyStringStringSearchOption">
            <summary>设置 NullCacheSection.AddSourceDependency(String directory, String searchPattern, SearchOption searchOption) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimNullCacheSection.AllInstances.CanBeRestoredFromCache">
            <summary>设置 NullCacheSection.CanBeRestoredFromCache() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimNullCacheSection.AllInstances.CanBeSkipped">
            <summary>设置 NullCacheSection.CanBeSkipped() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimNullCacheSection.AllInstances.EndSection">
            <summary>设置 NullCacheSection.EndSection() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimNullCacheSection.AllInstances.GetCachedContentItemString">
            <summary>设置 NullCacheSection.GetCachedContentItem(String fileCategory) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimNullCacheSection.AllInstances.GetCachedContentItemStringStringStringIEnumerableOfContentPivot">
            <summary>设置 NullCacheSection.GetCachedContentItem(String fileCategory, String relativeDestinationFile, String relativeHashedDestinationFile, IEnumerable`1&lt;ContentPivot&gt; contentPivots) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimNullCacheSection.AllInstances.GetCachedContentItemsStringBoolean">
            <summary>设置 NullCacheSection.GetCachedContentItems(String fileCategory, Boolean endResultOnly) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimNullCacheSection.AllInstances.ParentGet">
            <summary>设置 NullCacheSection.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimNullCacheSection.AllInstances.Save">
            <summary>设置 NullCacheSection.Save() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimNullCacheSection.AllInstances.UniqueKeyGet">
            <summary>设置 NullCacheSection.get_UniqueKey() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimNullCacheSection.AllInstances.UniqueKeySetString">
            <summary>设置 NullCacheSection.set_UniqueKey(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimNullCacheSection.AllInstances.VaryByContentItemContentItem">
            <summary>设置 NullCacheSection.VaryByContentItem(ContentItem contentItem) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimNullCacheSection.AllInstances.VaryBySettingsObjectBoolean">
            <summary>设置 NullCacheSection.VaryBySettings(Object settings, Boolean nonpublic) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimReadOnlyCacheSection">
            <summary>WebGrease.ReadOnlyCacheSection 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimReadOnlyCacheSection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimReadOnlyCacheSection.#ctor(WebGrease.ReadOnlyCacheSection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimReadOnlyCacheSection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimReadOnlyCacheSection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection.CanBeRestoredFromCache">
            <summary>设置 ReadOnlyCacheSection.CanBeRestoredFromCache() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection.CanBeSkipped">
            <summary>设置 ReadOnlyCacheSection.CanBeSkipped() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection.ChildCacheSectionsGet">
            <summary>设置 ReadOnlyCacheSection.get_ChildCacheSections() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection.ConstructorStringIWebGreaseContext">
            <summary>设置 ReadOnlyCacheSection.ReadOnlyCacheSection(String jsonString, IWebGreaseContext context) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection.Dispose">
            <summary>设置 ReadOnlyCacheSection.Dispose() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection.GetCacheResultsStringBoolean">
            <summary>设置 ReadOnlyCacheSection.GetCacheResults(String fileCategory, Boolean endResultOnly) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection.HasCachedEndResultThatChangedIWebGreaseContextCacheResult">
            <summary>设置 ReadOnlyCacheSection.HasCachedEndResultThatChanged(IWebGreaseContext context, CacheResult r) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection.HasChangedSourceDependencies">
            <summary>设置 ReadOnlyCacheSection.HasChangedSourceDependencies() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection.LoadStringIWebGreaseContext">
            <summary>设置 ReadOnlyCacheSection.Load(String fullPath, IWebGreaseContext context) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection.SafeAllRecursiveChildSections">
            <summary>设置 ReadOnlyCacheSection.SafeAllRecursiveChildSections() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection.StaticConstructor">
            <summary>设置 ReadOnlyCacheSection.ReadOnlyCacheSection() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection.Touch">
            <summary>设置 ReadOnlyCacheSection.Touch() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection.UnloadIWebGreaseContextString">
            <summary>设置 ReadOnlyCacheSection.Unload(IWebGreaseContext context, String fullPath) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection._CanBeRestoredFromCacheb__cCacheResult">
            <summary>设置 ReadOnlyCacheSection.&lt;CanBeRestoredFromCache&gt;b__c(CacheResult cr) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection._CanBeSkippedb__10CacheSourceDependency">
            <summary>设置 ReadOnlyCacheSection.&lt;CanBeSkipped&gt;b__10(CacheSourceDependency sd) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection._CanBeSkippedb__11ReadOnlyCacheSection">
            <summary>设置 ReadOnlyCacheSection.&lt;CanBeSkipped&gt;b__11(ReadOnlyCacheSection scc) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection._CanBeSkippedb__eCacheResult">
            <summary>设置 ReadOnlyCacheSection.&lt;CanBeSkipped&gt;b__e(CacheResult cr) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection._CanBeSkippedb__fCacheResult">
            <summary>设置 ReadOnlyCacheSection.&lt;CanBeSkipped&gt;b__f(CacheResult cr) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection._Disposeb__8ReadOnlyCacheSection">
            <summary>设置 ReadOnlyCacheSection.&lt;Dispose&gt;b__8(ReadOnlyCacheSection ccs) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection._Disposeb__9ReadOnlyCacheSection">
            <summary>设置 ReadOnlyCacheSection.&lt;Dispose&gt;b__9(ReadOnlyCacheSection ccs) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection._HasChangedSourceDependenciesb__18CacheSourceDependency">
            <summary>设置 ReadOnlyCacheSection.&lt;HasChangedSourceDependencies&gt;b__18(CacheSourceDependency sd) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection._SafeAllRecursiveChildSectionsb__19ReadOnlyCacheSection">
            <summary>设置 ReadOnlyCacheSection.&lt;SafeAllRecursiveChildSections&gt;b__19(ReadOnlyCacheSection css) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection._Touchb__17CacheResult">
            <summary>设置 ReadOnlyCacheSection.&lt;Touch&gt;b__17(CacheResult cr) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection._ctorb__0JToken">
            <summary>设置 ReadOnlyCacheSection.&lt;.ctor&gt;b__0(JToken f) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection._get_ChildCacheSectionsb__2String">
            <summary>设置 ReadOnlyCacheSection.&lt;get_ChildCacheSections&gt;b__2(String childCacheSectionFile) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimReadOnlyCacheSection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection.AllInstances.CanBeRestoredFromCache">
            <summary>设置 ReadOnlyCacheSection.CanBeRestoredFromCache() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection.AllInstances.CanBeSkipped">
            <summary>设置 ReadOnlyCacheSection.CanBeSkipped() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection.AllInstances.ChildCacheSectionsGet">
            <summary>设置 ReadOnlyCacheSection.get_ChildCacheSections() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection.AllInstances.Dispose">
            <summary>设置 ReadOnlyCacheSection.Dispose() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection.AllInstances.GetCacheResultsStringBoolean">
            <summary>设置 ReadOnlyCacheSection.GetCacheResults(String fileCategory, Boolean endResultOnly) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection.AllInstances.HasChangedSourceDependencies">
            <summary>设置 ReadOnlyCacheSection.HasChangedSourceDependencies() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection.AllInstances.SafeAllRecursiveChildSections">
            <summary>设置 ReadOnlyCacheSection.SafeAllRecursiveChildSections() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection.AllInstances.Touch">
            <summary>设置 ReadOnlyCacheSection.Touch() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection.AllInstances._CanBeSkippedb__10CacheSourceDependency">
            <summary>设置 ReadOnlyCacheSection.&lt;CanBeSkipped&gt;b__10(CacheSourceDependency sd) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection.AllInstances._CanBeSkippedb__fCacheResult">
            <summary>设置 ReadOnlyCacheSection.&lt;CanBeSkipped&gt;b__f(CacheResult cr) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection.AllInstances._HasChangedSourceDependenciesb__18CacheSourceDependency">
            <summary>设置 ReadOnlyCacheSection.&lt;HasChangedSourceDependencies&gt;b__18(CacheSourceDependency sd) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection.AllInstances._Touchb__17CacheResult">
            <summary>设置 ReadOnlyCacheSection.&lt;Touch&gt;b__17(CacheResult cr) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimReadOnlyCacheSection.AllInstances._get_ChildCacheSectionsb__2String">
            <summary>设置 ReadOnlyCacheSection.&lt;get_ChildCacheSections&gt;b__2(String childCacheSectionFile) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimSectionIdParts">
            <summary>WebGrease.SectionIdParts 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimSectionIdParts.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimSectionIdParts.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimSectionIdParts.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimSectionIdParts.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimTemporaryOverrides">
            <summary>WebGrease.TemporaryOverrides 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimTemporaryOverrides.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimTemporaryOverrides.#ctor(WebGrease.TemporaryOverrides)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimTemporaryOverrides.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimTemporaryOverrides.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTemporaryOverrides.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTemporaryOverrides.Constructor">
            <summary>设置 TemporaryOverrides.TemporaryOverrides() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTemporaryOverrides.CreateString">
            <summary>设置 TemporaryOverrides.Create(String overrideFile) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTemporaryOverrides.GetElementItemsIEnumerableOfXElementString">
            <summary>设置 TemporaryOverrides.GetElementItems(IEnumerable`1&lt;XElement&gt; elements, String elementName) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTemporaryOverrides.GetItemsString">
            <summary>设置 TemporaryOverrides.GetItems(String items) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTemporaryOverrides.LoadFromFileString">
            <summary>设置 TemporaryOverrides.LoadFromFile(String overrideFile) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTemporaryOverrides.ShouldIgnoreContentItem">
            <summary>设置 TemporaryOverrides.ShouldIgnore(ContentItem contentItem) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTemporaryOverrides.ShouldIgnoreContentPivot">
            <summary>设置 TemporaryOverrides.ShouldIgnore(ContentPivot contentPivot) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTemporaryOverrides.ShouldIgnoreIFileSet">
            <summary>设置 TemporaryOverrides.ShouldIgnore(IFileSet fileSet) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTemporaryOverrides.ShouldIgnoreLocaleString">
            <summary>设置 TemporaryOverrides.ShouldIgnoreLocale(String localeToIgnore) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTemporaryOverrides.ShouldIgnoreOutputExtensionsIFileSet">
            <summary>设置 TemporaryOverrides.ShouldIgnoreOutputExtensions(IFileSet fileSet) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTemporaryOverrides.ShouldIgnoreOutputsIFileSet">
            <summary>设置 TemporaryOverrides.ShouldIgnoreOutputs(IFileSet fileSet) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTemporaryOverrides.ShouldIgnoreThemeString">
            <summary>设置 TemporaryOverrides.ShouldIgnoreTheme(String themeToIgnore) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTemporaryOverrides.SkipAllGet">
            <summary>设置 TemporaryOverrides.get_SkipAll() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTemporaryOverrides.SkipAllSetBoolean">
            <summary>设置 TemporaryOverrides.set_SkipAll(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTemporaryOverrides.UniqueKeyGet">
            <summary>设置 TemporaryOverrides.get_UniqueKey() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTemporaryOverrides._GetElementItemsb__1XElement">
            <summary>设置 TemporaryOverrides.&lt;GetElementItems&gt;b__1(XElement e) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTemporaryOverrides._GetElementItemsb__2String">
            <summary>设置 TemporaryOverrides.&lt;GetElementItems&gt;b__2(String i) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTemporaryOverrides._GetElementItemsb__3String">
            <summary>设置 TemporaryOverrides.&lt;GetElementItems&gt;b__3(String i) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTemporaryOverrides._LoadFromFileb__15XAttribute">
            <summary>设置 TemporaryOverrides.&lt;LoadFromFile&gt;b__15(XAttribute a) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTemporaryOverrides._ShouldIgnoreb__0ContentPivot">
            <summary>设置 TemporaryOverrides.&lt;ShouldIgnore&gt;b__0(ContentPivot cp) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimTemporaryOverrides.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTemporaryOverrides.AllInstances.LoadFromFileString">
            <summary>设置 TemporaryOverrides.LoadFromFile(String overrideFile) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTemporaryOverrides.AllInstances.ShouldIgnoreContentItem">
            <summary>设置 TemporaryOverrides.ShouldIgnore(ContentItem contentItem) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTemporaryOverrides.AllInstances.ShouldIgnoreContentPivot">
            <summary>设置 TemporaryOverrides.ShouldIgnore(ContentPivot contentPivot) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTemporaryOverrides.AllInstances.ShouldIgnoreIFileSet">
            <summary>设置 TemporaryOverrides.ShouldIgnore(IFileSet fileSet) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTemporaryOverrides.AllInstances.ShouldIgnoreLocaleString">
            <summary>设置 TemporaryOverrides.ShouldIgnoreLocale(String localeToIgnore) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTemporaryOverrides.AllInstances.ShouldIgnoreOutputExtensionsIFileSet">
            <summary>设置 TemporaryOverrides.ShouldIgnoreOutputExtensions(IFileSet fileSet) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTemporaryOverrides.AllInstances.ShouldIgnoreOutputsIFileSet">
            <summary>设置 TemporaryOverrides.ShouldIgnoreOutputs(IFileSet fileSet) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTemporaryOverrides.AllInstances.ShouldIgnoreThemeString">
            <summary>设置 TemporaryOverrides.ShouldIgnoreTheme(String themeToIgnore) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTemporaryOverrides.AllInstances.SkipAllGet">
            <summary>设置 TemporaryOverrides.get_SkipAll() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTemporaryOverrides.AllInstances.SkipAllSetBoolean">
            <summary>设置 TemporaryOverrides.set_SkipAll(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTemporaryOverrides.AllInstances.UniqueKeyGet">
            <summary>设置 TemporaryOverrides.get_UniqueKey() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTemporaryOverrides.AllInstances._ShouldIgnoreb__0ContentPivot">
            <summary>设置 TemporaryOverrides.&lt;ShouldIgnore&gt;b__0(ContentPivot cp) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimTimeMeasure">
            <summary>WebGrease.TimeMeasure 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimTimeMeasure.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimTimeMeasure.#ctor(WebGrease.TimeMeasure)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimTimeMeasure.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimTimeMeasure.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimTimeMeasure.Bind(WebGrease.ITimeMeasure)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasure.AddToResultTimeMeasureItem">
            <summary>设置 TimeMeasure.AddToResult(TimeMeasureItem timer) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasure.BeginGroup">
            <summary>设置 TimeMeasure.BeginGroup() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasure.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasure.Constructor">
            <summary>设置 TimeMeasure.TimeMeasure() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasure.EndBooleanStringArray">
            <summary>设置 TimeMeasure.End(Boolean isGroup, String[] idParts) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasure.EndGroup">
            <summary>设置 TimeMeasure.EndGroup() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasure.GetMeasureTableStringIEnumerableOfTimeMeasureResult">
            <summary>设置 TimeMeasure.GetMeasureTable(String title, IEnumerable`1&lt;TimeMeasureResult&gt; measureTotal) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasure.GetResults">
            <summary>设置 TimeMeasure.GetResults() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasure.PauseLastTimer">
            <summary>设置 TimeMeasure.PauseLastTimer() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasure.ResumeLastTimer">
            <summary>设置 TimeMeasure.ResumeLastTimer() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasure.StartBooleanStringArray">
            <summary>设置 TimeMeasure.Start(Boolean isGroup, String[] idParts) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasure.StopTimerTimeMeasureItem">
            <summary>设置 TimeMeasure.StopTimer(TimeMeasureItem timer) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasure.WriteResultsStringIDictionaryOfFileTypesTimeMeasureResultArrayStringDateTimeOffsetString">
            <summary>设置 TimeMeasure.WriteResults(String filePathWithoutExtension, IDictionary`2&lt;FileTypes,TimeMeasureResult[]&gt; results, String title, DateTimeOffset startTime, String activityName) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasure.WriteResultsStringStringDateTimeOffset">
            <summary>设置 TimeMeasure.WriteResults(String filePathWithoutExtension, String title, DateTimeOffset utcStart) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasure._GetMeasureTableb__11TimeMeasureResult">
            <summary>设置 TimeMeasure.&lt;GetMeasureTable&gt;b__11(TimeMeasureResult tm) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasure._GetResultsb__1KeyValuePairOfStringDouble">
            <summary>设置 TimeMeasure.&lt;GetResults&gt;b__1(KeyValuePair`2&lt;String,Double&gt; m) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasure._GetResultsb__2KeyValuePairOfStringDouble">
            <summary>设置 TimeMeasure.&lt;GetResults&gt;b__2(KeyValuePair`2&lt;String,Double&gt; m) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasure._WriteResultsb__7KeyValuePairOfFileTypesTimeMeasureResultArray">
            <summary>设置 TimeMeasure.&lt;WriteResults&gt;b__7(KeyValuePair`2&lt;FileTypes,TimeMeasureResult[]&gt; r) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasure._WriteResultsb__8TimeMeasureResult">
            <summary>设置 TimeMeasure.&lt;WriteResults&gt;b__8(TimeMeasureResult v) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasure._WriteResultsb__9KeyValuePairOfFileTypesTimeMeasureResultArray">
            <summary>设置 TimeMeasure.&lt;WriteResults&gt;b__9(KeyValuePair`2&lt;FileTypes,TimeMeasureResult[]&gt; r) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasure._WriteResultsb__aTimeMeasureResult">
            <summary>设置 TimeMeasure.&lt;WriteResults&gt;b__a(TimeMeasureResult v) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasure._WriteResultsb__bTimeMeasureResult">
            <summary>设置 TimeMeasure.&lt;WriteResults&gt;b__b(TimeMeasureResult tm) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimTimeMeasure.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasure.AllInstances.AddToResultTimeMeasureItem">
            <summary>设置 TimeMeasure.AddToResult(TimeMeasureItem timer) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasure.AllInstances.BeginGroup">
            <summary>设置 TimeMeasure.BeginGroup() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasure.AllInstances.EndBooleanStringArray">
            <summary>设置 TimeMeasure.End(Boolean isGroup, String[] idParts) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasure.AllInstances.EndGroup">
            <summary>设置 TimeMeasure.EndGroup() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasure.AllInstances.GetResults">
            <summary>设置 TimeMeasure.GetResults() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasure.AllInstances.PauseLastTimer">
            <summary>设置 TimeMeasure.PauseLastTimer() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasure.AllInstances.ResumeLastTimer">
            <summary>设置 TimeMeasure.ResumeLastTimer() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasure.AllInstances.StartBooleanStringArray">
            <summary>设置 TimeMeasure.Start(Boolean isGroup, String[] idParts) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasure.AllInstances.StopTimerTimeMeasureItem">
            <summary>设置 TimeMeasure.StopTimer(TimeMeasureItem timer) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasure.AllInstances.WriteResultsStringStringDateTimeOffset">
            <summary>设置 TimeMeasure.WriteResults(String filePathWithoutExtension, String title, DateTimeOffset utcStart) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasure.AllInstances._GetResultsb__2KeyValuePairOfStringDouble">
            <summary>设置 TimeMeasure.&lt;GetResults&gt;b__2(KeyValuePair`2&lt;String,Double&gt; m) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimTimeMeasureExtensions">
            <summary>WebGrease.TimeMeasureExtensions 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimTimeMeasureExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimTimeMeasureExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimTimeMeasureExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureExtensions.GetCsvIEnumerableOfTimeMeasureResult">
            <summary>设置 TimeMeasureExtensions.GetCsv(IEnumerable`1&lt;TimeMeasureResult&gt; results) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureExtensions.GetCsvRowObjectArray">
            <summary>设置 TimeMeasureExtensions.GetCsvRow(Object[] values) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureExtensions.GetTextTableIEnumerableOfTimeMeasureResultString">
            <summary>设置 TimeMeasureExtensions.GetTextTable(IEnumerable`1&lt;TimeMeasureResult&gt; results, String title) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureExtensions.GetValuesTimeMeasureResultDouble">
            <summary>设置 TimeMeasureExtensions.GetValues(TimeMeasureResult measureResult, Double totalTime) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureExtensions.GroupIEnumerableOfTimeMeasureResultFuncOfTimeMeasureResultString">
            <summary>设置 TimeMeasureExtensions.Group(IEnumerable`1&lt;TimeMeasureResult&gt; resultsToAdd, Func`2&lt;TimeMeasureResult,String&gt; groupSelector) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureExtensions.StaticConstructor">
            <summary>设置 TimeMeasureExtensions.TimeMeasureExtensions() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureExtensions._GetCsvb__0TimeMeasureResult">
            <summary>设置 TimeMeasureExtensions.&lt;GetCsv&gt;b__0(TimeMeasureResult r) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureExtensions._GetCsvb__1TimeMeasureResult">
            <summary>设置 TimeMeasureExtensions.&lt;GetCsv&gt;b__1(TimeMeasureResult r) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureExtensions._GetTextTableb__4TimeMeasureResult">
            <summary>设置 TimeMeasureExtensions.&lt;GetTextTable&gt;b__4(TimeMeasureResult r) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureExtensions._GetTextTableb__5TimeMeasureResult">
            <summary>设置 TimeMeasureExtensions.&lt;GetTextTable&gt;b__5(TimeMeasureResult r) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureExtensions._Groupb__9IGroupingOfStringTimeMeasureResult">
            <summary>设置 TimeMeasureExtensions.&lt;Group&gt;b__9(IGrouping`2&lt;String,TimeMeasureResult&gt; s) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureExtensions._Groupb__aTimeMeasureResult">
            <summary>设置 TimeMeasureExtensions.&lt;Group&gt;b__a(TimeMeasureResult m) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureExtensions._Groupb__bTimeMeasureResult">
            <summary>设置 TimeMeasureExtensions.&lt;Group&gt;b__b(TimeMeasureResult m) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureExtensions._Groupb__cTimeMeasureResult">
            <summary>设置 TimeMeasureExtensions.&lt;Group&gt;b__c(TimeMeasureResult r) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimTimeMeasureItem">
            <summary>WebGrease.TimeMeasureItem 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimTimeMeasureItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimTimeMeasureItem.#ctor(WebGrease.TimeMeasureItem)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimTimeMeasureItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimTimeMeasureItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureItem.ConstructorStringDateTime">
            <summary>设置 TimeMeasureItem.TimeMeasureItem(String id, DateTime value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureItem.IdGet">
            <summary>设置 TimeMeasureItem.get_Id() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureItem.IdSetString">
            <summary>设置 TimeMeasureItem.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureItem.ValueGet">
            <summary>设置 TimeMeasureItem.get_Value() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureItem.ValueSetDateTime">
            <summary>设置 TimeMeasureItem.set_Value(DateTime value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimTimeMeasureItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureItem.AllInstances.IdGet">
            <summary>设置 TimeMeasureItem.get_Id() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureItem.AllInstances.IdSetString">
            <summary>设置 TimeMeasureItem.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureItem.AllInstances.ValueGet">
            <summary>设置 TimeMeasureItem.get_Value() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureItem.AllInstances.ValueSetDateTime">
            <summary>设置 TimeMeasureItem.set_Value(DateTime value) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimTimeMeasureResult">
            <summary>WebGrease.TimeMeasureResult 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimTimeMeasureResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimTimeMeasureResult.#ctor(WebGrease.TimeMeasureResult)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimTimeMeasureResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimTimeMeasureResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureResult.Constructor">
            <summary>设置 TimeMeasureResult.TimeMeasureResult() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureResult.CountGet">
            <summary>设置 TimeMeasureResult.get_Count() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureResult.CountSetInt32">
            <summary>设置 TimeMeasureResult.set_Count(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureResult.DurationGet">
            <summary>设置 TimeMeasureResult.get_Duration() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureResult.DurationSetDouble">
            <summary>设置 TimeMeasureResult.set_Duration(Double value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureResult.IdPartsGet">
            <summary>设置 TimeMeasureResult.get_IdParts() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureResult.IdPartsSetIEnumerableOfString">
            <summary>设置 TimeMeasureResult.set_IdParts(IEnumerable`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureResult.NameGet">
            <summary>设置 TimeMeasureResult.get_Name() 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimTimeMeasureResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureResult.AllInstances.CountGet">
            <summary>设置 TimeMeasureResult.get_Count() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureResult.AllInstances.CountSetInt32">
            <summary>设置 TimeMeasureResult.set_Count(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureResult.AllInstances.DurationGet">
            <summary>设置 TimeMeasureResult.get_Duration() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureResult.AllInstances.DurationSetDouble">
            <summary>设置 TimeMeasureResult.set_Duration(Double value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureResult.AllInstances.IdPartsGet">
            <summary>设置 TimeMeasureResult.get_IdParts() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureResult.AllInstances.IdPartsSetIEnumerableOfString">
            <summary>设置 TimeMeasureResult.set_IdParts(IEnumerable`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimTimeMeasureResult.AllInstances.NameGet">
            <summary>设置 TimeMeasureResult.get_Name() 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimWebGreaseContext">
            <summary>WebGrease.WebGreaseContext 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimWebGreaseContext.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimWebGreaseContext.#ctor(WebGrease.WebGreaseContext)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimWebGreaseContext.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimWebGreaseContext.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimWebGreaseContext.Bind(WebGrease.IWebGreaseContext)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.BytesToHashByteArray">
            <summary>设置 WebGreaseContext.BytesToHash(Byte[] hash) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.CacheGet">
            <summary>设置 WebGreaseContext.get_Cache() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.CacheSetICacheManager">
            <summary>设置 WebGreaseContext.set_Cache(ICacheManager value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.CleanCacheLogManager">
            <summary>设置 WebGreaseContext.CleanCache(LogManager logManager) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.CleanDestination">
            <summary>设置 WebGreaseContext.CleanDestination() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.CleanDirectoryString">
            <summary>设置 WebGreaseContext.CleanDirectory(String directory) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.ComputeContentHashStringEncoding">
            <summary>设置 WebGreaseContext.ComputeContentHash(String content, Encoding encoding) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.ComputeFileHashString">
            <summary>设置 WebGreaseContext.ComputeFileHash(String filePath) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.ConfigurationGet">
            <summary>设置 WebGreaseContext.get_Configuration() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.ConfigurationSetWebGreaseConfiguration">
            <summary>设置 WebGreaseContext.set_Configuration(WebGreaseConfiguration value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.ConstructorIWebGreaseContextFileInfo">
            <summary>设置 WebGreaseContext.WebGreaseContext(IWebGreaseContext parentContext, FileInfo configFile) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.ConstructorWebGreaseConfigurationActionOfStringMessageImportanceActionOfStringLogExtendedErrorActionOfStringLogErrorLogExtendedError">
            <summary>设置 WebGreaseContext.WebGreaseContext(WebGreaseConfiguration configuration, Action`2&lt;String,MessageImportance&gt; logInformation, Action`1&lt;String&gt; logWarning, LogExtendedError logExtendedWarning, Action`1&lt;String&gt; logErrorMessage, LogError logError, LogExtendedError logExtendedError) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.ConstructorWebGreaseConfigurationLogManager">
            <summary>设置 WebGreaseContext.WebGreaseContext(WebGreaseConfiguration configuration, LogManager logManager) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.EnsureErrorFileOnDiskStringContentItem">
            <summary>设置 WebGreaseContext.EnsureErrorFileOnDisk(String sourceFile, ContentItem sourceContentItem) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.GetAvailableFilesStringIEnumerableOfStringIEnumerableOfStringFileTypes">
            <summary>设置 WebGreaseContext.GetAvailableFiles(String rootDirectory, IEnumerable`1&lt;String&gt; directories, IEnumerable`1&lt;String&gt; extensions, FileTypes fileType) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.GetContentItemHashContentItem">
            <summary>设置 WebGreaseContext.GetContentItemHash(ContentItem contentItem) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.GetFileHashString">
            <summary>设置 WebGreaseContext.GetFileHash(String filePath) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.GetValueHashString">
            <summary>设置 WebGreaseContext.GetValueHash(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.GetWorkingSourceDirectoryString">
            <summary>设置 WebGreaseContext.GetWorkingSourceDirectory(String relativePath) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.InitializeWebGreaseConfigurationLogManagerICacheManagerPreprocessingManagerDateTimeOffsetITimeMeasure">
            <summary>设置 WebGreaseContext.Initialize(WebGreaseConfiguration configuration, LogManager logManager, ICacheManager cacheManager, PreprocessingManager preprocessingManager, DateTimeOffset runStartTime, ITimeMeasure timeMeasure) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.LogGet">
            <summary>设置 WebGreaseContext.get_Log() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.LogSetLogManager">
            <summary>设置 WebGreaseContext.set_Log(LogManager value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.MakeRelativeToApplicationRootString">
            <summary>设置 WebGreaseContext.MakeRelativeToApplicationRoot(String absolutePath) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.MeasureGet">
            <summary>设置 WebGreaseContext.get_Measure() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.MeasureSetITimeMeasure">
            <summary>设置 WebGreaseContext.set_Measure(ITimeMeasure value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.PreprocessingGet">
            <summary>设置 WebGreaseContext.get_Preprocessing() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.PreprocessingSetPreprocessingManager">
            <summary>设置 WebGreaseContext.set_Preprocessing(PreprocessingManager value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.SectionedActionGroupStringArray">
            <summary>设置 WebGreaseContext.SectionedActionGroup(String[] idParts) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.SectionedActionStringArray">
            <summary>设置 WebGreaseContext.SectionedAction(String[] idParts) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.SessionStartTimeGet">
            <summary>设置 WebGreaseContext.get_SessionStartTime() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.SessionStartTimeSetDateTimeOffset">
            <summary>设置 WebGreaseContext.set_SessionStartTime(DateTimeOffset value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.StaticConstructor">
            <summary>设置 WebGreaseContext.WebGreaseContext() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.TemporaryIgnoreContentPivot">
            <summary>设置 WebGreaseContext.TemporaryIgnore(ContentPivot contentPivot) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.TemporaryIgnoreIFileSetContentItem">
            <summary>设置 WebGreaseContext.TemporaryIgnore(IFileSet fileSet, ContentItem contentItem) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.ToIdPartsString">
            <summary>设置 WebGreaseContext.ToIdParts(String id) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.ToStringIdIEnumerableOfString">
            <summary>设置 WebGreaseContext.ToStringId(IEnumerable`1&lt;String&gt; idParts) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.TouchString">
            <summary>设置 WebGreaseContext.Touch(String filePath) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext._GetAvailableFilesb__0String">
            <summary>设置 WebGreaseContext.&lt;GetAvailableFiles&gt;b__0(String f) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext._GetAvailableFilesb__2String">
            <summary>设置 WebGreaseContext.&lt;GetAvailableFiles&gt;b__2(String f) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext._cctorb__10">
            <summary>设置 WebGreaseContext.&lt;.cctor&gt;b__10() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext._cctorb__f">
            <summary>设置 WebGreaseContext.&lt;.cctor&gt;b__f() 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimWebGreaseContext.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.AllInstances.CacheGet">
            <summary>设置 WebGreaseContext.get_Cache() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.AllInstances.CacheSetICacheManager">
            <summary>设置 WebGreaseContext.set_Cache(ICacheManager value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.AllInstances.CleanCacheLogManager">
            <summary>设置 WebGreaseContext.CleanCache(LogManager logManager) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.AllInstances.CleanDestination">
            <summary>设置 WebGreaseContext.CleanDestination() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.AllInstances.CleanDirectoryString">
            <summary>设置 WebGreaseContext.CleanDirectory(String directory) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.AllInstances.ConfigurationGet">
            <summary>设置 WebGreaseContext.get_Configuration() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.AllInstances.ConfigurationSetWebGreaseConfiguration">
            <summary>设置 WebGreaseContext.set_Configuration(WebGreaseConfiguration value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.AllInstances.EnsureErrorFileOnDiskStringContentItem">
            <summary>设置 WebGreaseContext.EnsureErrorFileOnDisk(String sourceFile, ContentItem sourceContentItem) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.AllInstances.GetAvailableFilesStringIEnumerableOfStringIEnumerableOfStringFileTypes">
            <summary>设置 WebGreaseContext.GetAvailableFiles(String rootDirectory, IEnumerable`1&lt;String&gt; directories, IEnumerable`1&lt;String&gt; extensions, FileTypes fileType) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.AllInstances.GetContentItemHashContentItem">
            <summary>设置 WebGreaseContext.GetContentItemHash(ContentItem contentItem) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.AllInstances.GetFileHashString">
            <summary>设置 WebGreaseContext.GetFileHash(String filePath) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.AllInstances.GetValueHashString">
            <summary>设置 WebGreaseContext.GetValueHash(String value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.AllInstances.GetWorkingSourceDirectoryString">
            <summary>设置 WebGreaseContext.GetWorkingSourceDirectory(String relativePath) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.AllInstances.InitializeWebGreaseConfigurationLogManagerICacheManagerPreprocessingManagerDateTimeOffsetITimeMeasure">
            <summary>设置 WebGreaseContext.Initialize(WebGreaseConfiguration configuration, LogManager logManager, ICacheManager cacheManager, PreprocessingManager preprocessingManager, DateTimeOffset runStartTime, ITimeMeasure timeMeasure) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.AllInstances.LogGet">
            <summary>设置 WebGreaseContext.get_Log() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.AllInstances.LogSetLogManager">
            <summary>设置 WebGreaseContext.set_Log(LogManager value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.AllInstances.MakeRelativeToApplicationRootString">
            <summary>设置 WebGreaseContext.MakeRelativeToApplicationRoot(String absolutePath) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.AllInstances.MeasureGet">
            <summary>设置 WebGreaseContext.get_Measure() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.AllInstances.MeasureSetITimeMeasure">
            <summary>设置 WebGreaseContext.set_Measure(ITimeMeasure value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.AllInstances.PreprocessingGet">
            <summary>设置 WebGreaseContext.get_Preprocessing() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.AllInstances.PreprocessingSetPreprocessingManager">
            <summary>设置 WebGreaseContext.set_Preprocessing(PreprocessingManager value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.AllInstances.SectionedActionGroupStringArray">
            <summary>设置 WebGreaseContext.SectionedActionGroup(String[] idParts) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.AllInstances.SectionedActionStringArray">
            <summary>设置 WebGreaseContext.SectionedAction(String[] idParts) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.AllInstances.SessionStartTimeGet">
            <summary>设置 WebGreaseContext.get_SessionStartTime() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.AllInstances.SessionStartTimeSetDateTimeOffset">
            <summary>设置 WebGreaseContext.set_SessionStartTime(DateTimeOffset value) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.AllInstances.TemporaryIgnoreContentPivot">
            <summary>设置 WebGreaseContext.TemporaryIgnore(ContentPivot contentPivot) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.AllInstances.TemporaryIgnoreIFileSetContentItem">
            <summary>设置 WebGreaseContext.TemporaryIgnore(IFileSet fileSet, ContentItem contentItem) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseContext.AllInstances.TouchString">
            <summary>设置 WebGreaseContext.Touch(String filePath) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimWebGreaseSection">
            <summary>WebGrease.WebGreaseSection 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimWebGreaseSection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimWebGreaseSection.#ctor(WebGrease.WebGreaseSection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimWebGreaseSection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimWebGreaseSection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimWebGreaseSection.Bind(WebGrease.ICachableWebGreaseSection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimWebGreaseSection.Bind(WebGrease.IWebGreaseSection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimWebGreaseSection.ExecuteOf1FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{``0},``0})">
            <summary>设置 WebGreaseSection.Execute(Func`1&lt;!!0&gt; action) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseSection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseSection.ConstructorIWebGreaseContextStringArrayBoolean">
            <summary>设置 WebGreaseSection.WebGreaseSection(IWebGreaseContext context, String[] idParts, Boolean isGroup) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseSection.CreateIWebGreaseContextStringArrayBoolean">
            <summary>设置 WebGreaseSection.Create(IWebGreaseContext context, String[] idParts, Boolean isGroup) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseSection.ExecuteAction">
            <summary>设置 WebGreaseSection.Execute(Action action) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseSection.ExecuteFuncOfICacheSectionBoolean">
            <summary>设置 WebGreaseSection.Execute(Func`2&lt;ICacheSection,Boolean&gt; cachableSectionAction) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseSection.MakeCachableContentItemObjectBoolean">
            <summary>设置 WebGreaseSection.MakeCachable(ContentItem varByContentItem, Object varBySettings, Boolean isSkipable) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseSection.MakeCachableIFileSetObjectBoolean">
            <summary>设置 WebGreaseSection.MakeCachable(IFileSet varByFileSet, Object varBySettings, Boolean isSkipable) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseSection.MakeCachableObjectBoolean">
            <summary>设置 WebGreaseSection.MakeCachable(Object varBySettings, Boolean isSkipable) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseSection.RestoreFromCacheActionFuncOfICacheSectionBoolean">
            <summary>设置 WebGreaseSection.RestoreFromCacheAction(Func`2&lt;ICacheSection,Boolean&gt; action) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseSection.WhenSkippedActionOfICacheSection">
            <summary>设置 WebGreaseSection.WhenSkipped(Action`1&lt;ICacheSection&gt; action) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimWebGreaseSection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimWebGreaseSection.AllInstances.ExecuteOf1FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{WebGrease.WebGreaseSection,System.Func{``0},``0})">
            <summary>设置 WebGreaseSection.Execute(Func`1&lt;!!0&gt; action) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseSection.AllInstances.ExecuteAction">
            <summary>设置 WebGreaseSection.Execute(Action action) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseSection.AllInstances.ExecuteFuncOfICacheSectionBoolean">
            <summary>设置 WebGreaseSection.Execute(Func`2&lt;ICacheSection,Boolean&gt; cachableSectionAction) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseSection.AllInstances.MakeCachableContentItemObjectBoolean">
            <summary>设置 WebGreaseSection.MakeCachable(ContentItem varByContentItem, Object varBySettings, Boolean isSkipable) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseSection.AllInstances.MakeCachableIFileSetObjectBoolean">
            <summary>设置 WebGreaseSection.MakeCachable(IFileSet varByFileSet, Object varBySettings, Boolean isSkipable) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseSection.AllInstances.MakeCachableObjectBoolean">
            <summary>设置 WebGreaseSection.MakeCachable(Object varBySettings, Boolean isSkipable) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseSection.AllInstances.RestoreFromCacheActionFuncOfICacheSectionBoolean">
            <summary>设置 WebGreaseSection.RestoreFromCacheAction(Func`2&lt;ICacheSection,Boolean&gt; action) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWebGreaseSection.AllInstances.WhenSkippedActionOfICacheSection">
            <summary>设置 WebGreaseSection.WhenSkipped(Action`1&lt;ICacheSection&gt; action) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimWorkflowException">
            <summary>WebGrease.WorkflowException 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimWorkflowException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimWorkflowException.#ctor(WebGrease.WorkflowException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimWorkflowException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimWorkflowException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:WebGrease.Fakes.ShimWorkflowException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWorkflowException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWorkflowException.Constructor">
            <summary>设置 WorkflowException.WorkflowException() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWorkflowException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 WorkflowException.WorkflowException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWorkflowException.ConstructorString">
            <summary>设置 WorkflowException.WorkflowException(String message) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Fakes.ShimWorkflowException.ConstructorStringException">
            <summary>设置 WorkflowException.WorkflowException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.ShimWorkflowException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:WebGrease.Fakes.StubCacheManager">
            <summary>WebGrease.CacheManager 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubCacheManager.#ctor(WebGrease.Configuration.WebGreaseConfiguration,WebGrease.LogManager)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubCacheManager.InitializeStub">
            <summary>初始化 type StubCacheManager 的新实例</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubCacheManager.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubCacheManager.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubCacheManager.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WebGrease.Fakes.StubCacheSourceDependency">
            <summary>WebGrease.CacheSourceDependency 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubCacheSourceDependency.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubCacheSourceDependency.InitializeStub">
            <summary>初始化 type StubCacheSourceDependency 的新实例</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubCacheSourceDependency.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubCacheSourceDependency.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubCacheSourceDependency.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WebGrease.Fakes.StubContentPivot">
            <summary>WebGrease.ContentPivot 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubContentPivot.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubContentPivot.InitializeStub">
            <summary>初始化 type StubContentPivot 的新实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubContentPivot.ToString">
            <summary>设置 ContentPivot.ToString() 的 存根</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubContentPivot.ToString01">
            <summary>设置 ContentPivot.ToString() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubContentPivot.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubContentPivot.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubContentPivot.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WebGrease.Fakes.StubCssMinifier">
            <summary>WebGrease.CssMinifier 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubCssMinifier.#ctor(WebGrease.IWebGreaseContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubCssMinifier.InitializeStub">
            <summary>初始化 type StubCssMinifier 的新实例</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubCssMinifier.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubCssMinifier.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubCssMinifier.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WebGrease.Fakes.StubICachableWebGreaseSection">
            <summary>WebGrease.ICachableWebGreaseSection 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubICachableWebGreaseSection.#ctor">
            <summary>初始化 type StubICachableWebGreaseSection 的新实例</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubICachableWebGreaseSection.ExecuteFuncOfICacheSectionBoolean">
            <summary>设置 ICachableWebGreaseSection.Execute(Func`2&lt;ICacheSection,Boolean&gt; cachableSectionAction) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubICachableWebGreaseSection.RestoreFromCacheActionFuncOfICacheSectionBoolean">
            <summary>设置 ICachableWebGreaseSection.RestoreFromCacheAction(Func`2&lt;ICacheSection,Boolean&gt; action) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubICachableWebGreaseSection.wg::WebGrease#ICachableWebGreaseSection#Execute(System.Func{WebGrease.ICacheSection,System.Boolean})">
            <summary>设置 ICachableWebGreaseSection.Execute(Func`2&lt;ICacheSection,Boolean&gt; cachableSectionAction) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubICachableWebGreaseSection.wg::WebGrease#ICachableWebGreaseSection#RestoreFromCacheAction(System.Func{WebGrease.ICacheSection,System.Boolean})">
            <summary>设置 ICachableWebGreaseSection.RestoreFromCacheAction(Func`2&lt;ICacheSection,Boolean&gt; action) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubICachableWebGreaseSection.wg::WebGrease#ICachableWebGreaseSection#WhenSkipped(System.Action{WebGrease.ICacheSection})">
            <summary>设置 ICachableWebGreaseSection.WhenSkipped(Action`1&lt;ICacheSection&gt; action) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubICachableWebGreaseSection.WhenSkippedActionOfICacheSection">
            <summary>设置 ICachableWebGreaseSection.WhenSkipped(Action`1&lt;ICacheSection&gt; action) 的 stub</summary>
        </member>
        <member name="T:WebGrease.Fakes.StubICacheManager">
            <summary>WebGrease.ICacheManager 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubICacheManager.#ctor">
            <summary>初始化 type StubICacheManager 的新实例</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubICacheManager.BeginSectionStringContentItemObjectIFileSet">
            <summary>设置 ICacheManager.BeginSection(String category, ContentItem contentItem, Object settings, IFileSet cacheVaryByFileSet) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubICacheManager.CleanUp">
            <summary>设置 ICacheManager.CleanUp() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubICacheManager.CurrentCacheSectionGet">
            <summary>设置 ICacheManager.get_CurrentCacheSection() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubICacheManager.EndSectionICacheSection">
            <summary>设置 ICacheManager.EndSection(ICacheSection cacheSection) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubICacheManager.GetAbsoluteCacheFilePathStringString">
            <summary>设置 ICacheManager.GetAbsoluteCacheFilePath(String category, String fileName) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubICacheManager.LoadedCacheSectionsGet">
            <summary>设置 ICacheManager.get_LoadedCacheSections() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubICacheManager.RootPathGet">
            <summary>设置 ICacheManager.get_RootPath() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubICacheManager.SetContextIWebGreaseContext">
            <summary>设置 ICacheManager.SetContext(IWebGreaseContext newContext) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubICacheManager.StoreInCacheStringContentItem">
            <summary>设置 ICacheManager.StoreInCache(String cacheCategory, ContentItem contentItem) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubICacheManager.wg::WebGrease#ICacheManager#BeginSection(System.String,WebGrease.ContentItem,System.Object,WebGrease.Configuration.IFileSet)">
            <summary>设置 ICacheManager.BeginSection(String category, ContentItem contentItem, Object settings, IFileSet cacheVaryByFileSet) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubICacheManager.wg::WebGrease#ICacheManager#CleanUp">
            <summary>设置 ICacheManager.CleanUp() 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubICacheManager.wg::WebGrease#ICacheManager#EndSection(WebGrease.ICacheSection)">
            <summary>设置 ICacheManager.EndSection(ICacheSection cacheSection) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubICacheManager.wg::WebGrease#ICacheManager#GetAbsoluteCacheFilePath(System.String,System.String)">
            <summary>设置 ICacheManager.GetAbsoluteCacheFilePath(String category, String fileName) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubICacheManager.wg::WebGrease#ICacheManager#SetContext(WebGrease.IWebGreaseContext)">
            <summary>设置 ICacheManager.SetContext(IWebGreaseContext newContext) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubICacheManager.wg::WebGrease#ICacheManager#StoreInCache(System.String,WebGrease.ContentItem)">
            <summary>设置 ICacheManager.StoreInCache(String cacheCategory, ContentItem contentItem) 的 存根</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubICacheManager.wg::WebGrease#ICacheManager#CurrentCacheSection">
            <summary>设置 ICacheManager.get_CurrentCacheSection() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubICacheManager.wg::WebGrease#ICacheManager#LoadedCacheSections">
            <summary>设置 ICacheManager.get_LoadedCacheSections() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubICacheManager.wg::WebGrease#ICacheManager#RootPath">
            <summary>设置 ICacheManager.get_RootPath() 的 stub</summary>
        </member>
        <member name="T:WebGrease.Fakes.StubICacheSection">
            <summary>WebGrease.ICacheSection 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubICacheSection.#ctor">
            <summary>初始化 type StubICacheSection 的新实例</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubICacheSection.AddResultContentItemStringBoolean">
            <summary>设置 ICacheSection.AddResult(ContentItem contentItem, String id, Boolean isEndResult) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubICacheSection.AddSourceDependencyInputSpec">
            <summary>设置 ICacheSection.AddSourceDependency(InputSpec inputSpec) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubICacheSection.AddSourceDependencyString">
            <summary>设置 ICacheSection.AddSourceDependency(String file) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubICacheSection.AddSourceDependencyStringStringSearchOption">
            <summary>设置 ICacheSection.AddSourceDependency(String directory, String searchPattern, SearchOption searchOption) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubICacheSection.CanBeRestoredFromCache">
            <summary>设置 ICacheSection.CanBeRestoredFromCache() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubICacheSection.CanBeSkipped">
            <summary>设置 ICacheSection.CanBeSkipped() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubICacheSection.EndSection">
            <summary>设置 ICacheSection.EndSection() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubICacheSection.GetCacheDataOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>设置 GetCacheData(String id) 的存根</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubICacheSection.GetCachedContentItemString">
            <summary>设置 ICacheSection.GetCachedContentItem(String fileCategory) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubICacheSection.GetCachedContentItemStringStringStringIEnumerableOfContentPivot">
            <summary>设置 ICacheSection.GetCachedContentItem(String fileCategory, String relativeDestinationFile, String relativeHashedDestinationFile, IEnumerable`1&lt;ContentPivot&gt; contentPivots) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubICacheSection.GetCachedContentItemsStringBoolean">
            <summary>设置 ICacheSection.GetCachedContentItems(String fileCategory, Boolean endResultOnly) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubICacheSection.ParentGet">
            <summary>设置 ICacheSection.get_Parent() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubICacheSection.Save">
            <summary>设置 ICacheSection.Save() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubICacheSection.SetCacheDataOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,``0})">
            <summary>设置 SetCacheData(String id, !!0 obj) 的存根</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubICacheSection.UniqueKeyGet">
            <summary>设置 ICacheSection.get_UniqueKey() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubICacheSection.VaryByContentItemContentItem">
            <summary>设置 ICacheSection.VaryByContentItem(ContentItem contentItem) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubICacheSection.VaryBySettingsObjectBoolean">
            <summary>设置 ICacheSection.VaryBySettings(Object settings, Boolean nonpublic) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubICacheSection.wg::WebGrease#ICacheSection#AddResult(WebGrease.ContentItem,System.String,System.Boolean)">
            <summary>设置 ICacheSection.AddResult(ContentItem contentItem, String id, Boolean isEndResult) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubICacheSection.wg::WebGrease#ICacheSection#AddSourceDependency(WebGrease.Configuration.InputSpec)">
            <summary>设置 ICacheSection.AddSourceDependency(InputSpec inputSpec) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubICacheSection.wg::WebGrease#ICacheSection#AddSourceDependency(System.String)">
            <summary>设置 ICacheSection.AddSourceDependency(String file) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubICacheSection.wg::WebGrease#ICacheSection#AddSourceDependency(System.String,System.String,System.IO.SearchOption)">
            <summary>设置 ICacheSection.AddSourceDependency(String directory, String searchPattern, SearchOption searchOption) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubICacheSection.wg::WebGrease#ICacheSection#CanBeRestoredFromCache">
            <summary>设置 ICacheSection.CanBeRestoredFromCache() 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubICacheSection.wg::WebGrease#ICacheSection#CanBeSkipped">
            <summary>设置 ICacheSection.CanBeSkipped() 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubICacheSection.wg::WebGrease#ICacheSection#EndSection">
            <summary>设置 ICacheSection.EndSection() 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubICacheSection.wg::WebGrease#ICacheSection#GetCacheData``1(System.String)">
            <summary>设置 ICacheSection.GetCacheData(String id) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubICacheSection.wg::WebGrease#ICacheSection#GetCachedContentItem(System.String)">
            <summary>设置 ICacheSection.GetCachedContentItem(String fileCategory) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubICacheSection.wg::WebGrease#ICacheSection#GetCachedContentItem(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{WebGrease.ContentPivot})">
            <summary>设置 ICacheSection.GetCachedContentItem(String fileCategory, String relativeDestinationFile, String relativeHashedDestinationFile, IEnumerable`1&lt;ContentPivot&gt; contentPivots) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubICacheSection.wg::WebGrease#ICacheSection#GetCachedContentItems(System.String,System.Boolean)">
            <summary>设置 ICacheSection.GetCachedContentItems(String fileCategory, Boolean endResultOnly) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubICacheSection.wg::WebGrease#ICacheSection#Save">
            <summary>设置 ICacheSection.Save() 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubICacheSection.wg::WebGrease#ICacheSection#SetCacheData``1(System.String,``0)">
            <summary>设置 ICacheSection.SetCacheData(String id, !!0 obj) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubICacheSection.wg::WebGrease#ICacheSection#VaryByContentItem(WebGrease.ContentItem)">
            <summary>设置 ICacheSection.VaryByContentItem(ContentItem contentItem) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubICacheSection.wg::WebGrease#ICacheSection#VaryBySettings(System.Object,System.Boolean)">
            <summary>设置 ICacheSection.VaryBySettings(Object settings, Boolean nonpublic) 的 存根</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubICacheSection.wg::WebGrease#ICacheSection#Parent">
            <summary>设置 ICacheSection.get_Parent() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubICacheSection.wg::WebGrease#ICacheSection#UniqueKey">
            <summary>设置 ICacheSection.get_UniqueKey() 的 stub</summary>
        </member>
        <member name="T:WebGrease.Fakes.StubITimeMeasure">
            <summary>WebGrease.ITimeMeasure 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubITimeMeasure.#ctor">
            <summary>初始化 type StubITimeMeasure 的新实例</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubITimeMeasure.EndBooleanStringArray">
            <summary>设置 ITimeMeasure.End(Boolean isGroup, String[] idParts) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubITimeMeasure.GetResults">
            <summary>设置 ITimeMeasure.GetResults() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubITimeMeasure.StartBooleanStringArray">
            <summary>设置 ITimeMeasure.Start(Boolean isGroup, String[] idParts) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubITimeMeasure.wg::WebGrease#ITimeMeasure#End(System.Boolean,System.String[])">
            <summary>设置 ITimeMeasure.End(Boolean isGroup, String[] idParts) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubITimeMeasure.wg::WebGrease#ITimeMeasure#GetResults">
            <summary>设置 ITimeMeasure.GetResults() 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubITimeMeasure.wg::WebGrease#ITimeMeasure#Start(System.Boolean,System.String[])">
            <summary>设置 ITimeMeasure.Start(Boolean isGroup, String[] idParts) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubITimeMeasure.wg::WebGrease#ITimeMeasure#WriteResults(System.String,System.String,System.DateTimeOffset)">
            <summary>设置 ITimeMeasure.WriteResults(String filePathWithoutExtension, String title, DateTimeOffset utcStart) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubITimeMeasure.WriteResultsStringStringDateTimeOffset">
            <summary>设置 ITimeMeasure.WriteResults(String filePathWithoutExtension, String title, DateTimeOffset utcStart) 的 stub</summary>
        </member>
        <member name="T:WebGrease.Fakes.StubIWebGreaseContext">
            <summary>WebGrease.IWebGreaseContext 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubIWebGreaseContext.#ctor">
            <summary>初始化 type StubIWebGreaseContext 的新实例</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubIWebGreaseContext.CacheGet">
            <summary>设置 IWebGreaseContext.get_Cache() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubIWebGreaseContext.CleanCacheLogManager">
            <summary>设置 IWebGreaseContext.CleanCache(LogManager logManager) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubIWebGreaseContext.CleanDestination">
            <summary>设置 IWebGreaseContext.CleanDestination() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubIWebGreaseContext.ConfigurationGet">
            <summary>设置 IWebGreaseContext.get_Configuration() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubIWebGreaseContext.EnsureErrorFileOnDiskStringContentItem">
            <summary>设置 IWebGreaseContext.EnsureErrorFileOnDisk(String sourceFile, ContentItem sourceContentItem) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubIWebGreaseContext.GetAvailableFilesStringIEnumerableOfStringIEnumerableOfStringFileTypes">
            <summary>设置 IWebGreaseContext.GetAvailableFiles(String rootDirectory, IEnumerable`1&lt;String&gt; directories, IEnumerable`1&lt;String&gt; extensions, FileTypes fileType) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubIWebGreaseContext.GetContentItemHashContentItem">
            <summary>设置 IWebGreaseContext.GetContentItemHash(ContentItem contentItem) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubIWebGreaseContext.GetFileHashString">
            <summary>设置 IWebGreaseContext.GetFileHash(String filePath) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubIWebGreaseContext.GetValueHashString">
            <summary>设置 IWebGreaseContext.GetValueHash(String value) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubIWebGreaseContext.GetWorkingSourceDirectoryString">
            <summary>设置 IWebGreaseContext.GetWorkingSourceDirectory(String relativePath) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubIWebGreaseContext.LogGet">
            <summary>设置 IWebGreaseContext.get_Log() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubIWebGreaseContext.MakeRelativeToApplicationRootString">
            <summary>设置 IWebGreaseContext.MakeRelativeToApplicationRoot(String absolutePath) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubIWebGreaseContext.MeasureGet">
            <summary>设置 IWebGreaseContext.get_Measure() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubIWebGreaseContext.PreprocessingGet">
            <summary>设置 IWebGreaseContext.get_Preprocessing() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubIWebGreaseContext.SectionedActionGroupStringArray">
            <summary>设置 IWebGreaseContext.SectionedActionGroup(String[] idParts) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubIWebGreaseContext.SectionedActionStringArray">
            <summary>设置 IWebGreaseContext.SectionedAction(String[] idParts) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubIWebGreaseContext.SessionStartTimeGet">
            <summary>设置 IWebGreaseContext.get_SessionStartTime() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubIWebGreaseContext.TemporaryIgnoreContentPivot">
            <summary>设置 IWebGreaseContext.TemporaryIgnore(ContentPivot contentPivot) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubIWebGreaseContext.TemporaryIgnoreIFileSetContentItem">
            <summary>设置 IWebGreaseContext.TemporaryIgnore(IFileSet fileSet, ContentItem contentItem) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubIWebGreaseContext.TouchString">
            <summary>设置 IWebGreaseContext.Touch(String filePath) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubIWebGreaseContext.wg::WebGrease#IWebGreaseContext#CleanCache(WebGrease.LogManager)">
            <summary>设置 IWebGreaseContext.CleanCache(LogManager logManager) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubIWebGreaseContext.wg::WebGrease#IWebGreaseContext#CleanDestination">
            <summary>设置 IWebGreaseContext.CleanDestination() 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubIWebGreaseContext.wg::WebGrease#IWebGreaseContext#EnsureErrorFileOnDisk(System.String,WebGrease.ContentItem)">
            <summary>设置 IWebGreaseContext.EnsureErrorFileOnDisk(String sourceFile, ContentItem sourceContentItem) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubIWebGreaseContext.wg::WebGrease#IWebGreaseContext#GetAvailableFiles(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},WebGrease.Activities.FileTypes)">
            <summary>设置 IWebGreaseContext.GetAvailableFiles(String rootDirectory, IEnumerable`1&lt;String&gt; directories, IEnumerable`1&lt;String&gt; extensions, FileTypes fileType) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubIWebGreaseContext.wg::WebGrease#IWebGreaseContext#GetContentItemHash(WebGrease.ContentItem)">
            <summary>设置 IWebGreaseContext.GetContentItemHash(ContentItem contentItem) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubIWebGreaseContext.wg::WebGrease#IWebGreaseContext#GetFileHash(System.String)">
            <summary>设置 IWebGreaseContext.GetFileHash(String filePath) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubIWebGreaseContext.wg::WebGrease#IWebGreaseContext#GetValueHash(System.String)">
            <summary>设置 IWebGreaseContext.GetValueHash(String value) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubIWebGreaseContext.wg::WebGrease#IWebGreaseContext#GetWorkingSourceDirectory(System.String)">
            <summary>设置 IWebGreaseContext.GetWorkingSourceDirectory(String relativePath) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubIWebGreaseContext.wg::WebGrease#IWebGreaseContext#MakeRelativeToApplicationRoot(System.String)">
            <summary>设置 IWebGreaseContext.MakeRelativeToApplicationRoot(String absolutePath) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubIWebGreaseContext.wg::WebGrease#IWebGreaseContext#SectionedAction(System.String[])">
            <summary>设置 IWebGreaseContext.SectionedAction(String[] idParts) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubIWebGreaseContext.wg::WebGrease#IWebGreaseContext#SectionedActionGroup(System.String[])">
            <summary>设置 IWebGreaseContext.SectionedActionGroup(String[] idParts) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubIWebGreaseContext.wg::WebGrease#IWebGreaseContext#TemporaryIgnore(WebGrease.ContentPivot)">
            <summary>设置 IWebGreaseContext.TemporaryIgnore(ContentPivot contentPivot) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubIWebGreaseContext.wg::WebGrease#IWebGreaseContext#TemporaryIgnore(WebGrease.Configuration.IFileSet,WebGrease.ContentItem)">
            <summary>设置 IWebGreaseContext.TemporaryIgnore(IFileSet fileSet, ContentItem contentItem) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubIWebGreaseContext.wg::WebGrease#IWebGreaseContext#Touch(System.String)">
            <summary>设置 IWebGreaseContext.Touch(String filePath) 的 存根</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubIWebGreaseContext.wg::WebGrease#IWebGreaseContext#Cache">
            <summary>设置 IWebGreaseContext.get_Cache() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubIWebGreaseContext.wg::WebGrease#IWebGreaseContext#Configuration">
            <summary>设置 IWebGreaseContext.get_Configuration() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubIWebGreaseContext.wg::WebGrease#IWebGreaseContext#Log">
            <summary>设置 IWebGreaseContext.get_Log() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubIWebGreaseContext.wg::WebGrease#IWebGreaseContext#Measure">
            <summary>设置 IWebGreaseContext.get_Measure() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubIWebGreaseContext.wg::WebGrease#IWebGreaseContext#Preprocessing">
            <summary>设置 IWebGreaseContext.get_Preprocessing() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubIWebGreaseContext.wg::WebGrease#IWebGreaseContext#SessionStartTime">
            <summary>设置 IWebGreaseContext.get_SessionStartTime() 的 stub</summary>
        </member>
        <member name="T:WebGrease.Fakes.StubIWebGreaseSection">
            <summary>WebGrease.IWebGreaseSection 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubIWebGreaseSection.#ctor">
            <summary>初始化 type StubIWebGreaseSection 的新实例</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubIWebGreaseSection.ExecuteAction">
            <summary>设置 IWebGreaseSection.Execute(Action action) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubIWebGreaseSection.ExecuteOf1FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{``0},``0})">
            <summary>设置 Execute(Func`1&lt;!!0&gt; action) 的存根</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubIWebGreaseSection.MakeCachableContentItemObjectBoolean">
            <summary>设置 IWebGreaseSection.MakeCachable(ContentItem varByContentItem, Object varBySettings, Boolean isSkipable) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubIWebGreaseSection.MakeCachableIFileSetObjectBoolean">
            <summary>设置 IWebGreaseSection.MakeCachable(IFileSet varByFileSet, Object varBySettings, Boolean isSkipable) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubIWebGreaseSection.MakeCachableObjectBoolean">
            <summary>设置 IWebGreaseSection.MakeCachable(Object varBySettings, Boolean isSkipable) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubIWebGreaseSection.wg::WebGrease#IWebGreaseSection#Execute``1(System.Func{``0})">
            <summary>设置 IWebGreaseSection.Execute(Func`1&lt;!!0&gt; action) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubIWebGreaseSection.wg::WebGrease#IWebGreaseSection#Execute(System.Action)">
            <summary>设置 IWebGreaseSection.Execute(Action action) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubIWebGreaseSection.wg::WebGrease#IWebGreaseSection#MakeCachable(System.Object,System.Boolean)">
            <summary>设置 IWebGreaseSection.MakeCachable(Object varBySettings, Boolean isSkipable) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubIWebGreaseSection.wg::WebGrease#IWebGreaseSection#MakeCachable(WebGrease.ContentItem,System.Object,System.Boolean)">
            <summary>设置 IWebGreaseSection.MakeCachable(ContentItem varByContentItem, Object varBySettings, Boolean isSkipable) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubIWebGreaseSection.wg::WebGrease#IWebGreaseSection#MakeCachable(WebGrease.Configuration.IFileSet,System.Object,System.Boolean)">
            <summary>设置 IWebGreaseSection.MakeCachable(IFileSet varByFileSet, Object varBySettings, Boolean isSkipable) 的 存根</summary>
        </member>
        <member name="T:WebGrease.Fakes.StubLogManager">
            <summary>WebGrease.LogManager 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubLogManager.#ctor(System.Action{System.String,WebGrease.MessageImportance},System.Action{System.String},WebGrease.Activities.LogExtendedError,System.Action{System.String},WebGrease.Activities.LogError,WebGrease.Activities.LogExtendedError,System.Nullable{System.Boolean})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubLogManager.InitializeStub">
            <summary>初始化 type StubLogManager 的新实例</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubLogManager.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubLogManager.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubLogManager.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WebGrease.Fakes.StubNullCacheSection">
            <summary>WebGrease.NullCacheSection 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubNullCacheSection.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubNullCacheSection.InitializeStub">
            <summary>初始化 type StubNullCacheSection 的新实例</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubNullCacheSection.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubNullCacheSection.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubNullCacheSection.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WebGrease.Fakes.StubTemporaryOverrides">
            <summary>WebGrease.TemporaryOverrides 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubTemporaryOverrides.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubTemporaryOverrides.InitializeStub">
            <summary>初始化 type StubTemporaryOverrides 的新实例</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubTemporaryOverrides.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubTemporaryOverrides.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubTemporaryOverrides.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WebGrease.Fakes.StubTimeMeasure">
            <summary>WebGrease.TimeMeasure 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubTimeMeasure.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubTimeMeasure.InitializeStub">
            <summary>初始化 type StubTimeMeasure 的新实例</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubTimeMeasure.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubTimeMeasure.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubTimeMeasure.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WebGrease.Fakes.StubTimeMeasureItem">
            <summary>WebGrease.TimeMeasureItem 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubTimeMeasureItem.#ctor(System.String,System.DateTime)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubTimeMeasureItem.InitializeStub">
            <summary>初始化 type StubTimeMeasureItem 的新实例</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubTimeMeasureItem.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubTimeMeasureItem.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubTimeMeasureItem.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WebGrease.Fakes.StubTimeMeasureResult">
            <summary>WebGrease.TimeMeasureResult 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubTimeMeasureResult.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubTimeMeasureResult.InitializeStub">
            <summary>初始化 type StubTimeMeasureResult 的新实例</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubTimeMeasureResult.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubTimeMeasureResult.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubTimeMeasureResult.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WebGrease.Fakes.StubWebGreaseContext">
            <summary>WebGrease.WebGreaseContext 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubWebGreaseContext.#ctor(WebGrease.IWebGreaseContext,System.IO.FileInfo)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubWebGreaseContext.#ctor(WebGrease.Configuration.WebGreaseConfiguration,WebGrease.LogManager)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubWebGreaseContext.#ctor(WebGrease.Configuration.WebGreaseConfiguration,System.Action{System.String,WebGrease.MessageImportance},System.Action{System.String},WebGrease.Activities.LogExtendedError,System.Action{System.String},WebGrease.Activities.LogError,WebGrease.Activities.LogExtendedError)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubWebGreaseContext.InitializeStub">
            <summary>初始化 type StubWebGreaseContext 的新实例</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubWebGreaseContext.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubWebGreaseContext.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubWebGreaseContext.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WebGrease.Fakes.StubWorkflowException">
            <summary>WebGrease.WorkflowException 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubWorkflowException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubWorkflowException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubWorkflowException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubWorkflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubWorkflowException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubWorkflowException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubWorkflowException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubWorkflowException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubWorkflowException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubWorkflowException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubWorkflowException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubWorkflowException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubWorkflowException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubWorkflowException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubWorkflowException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubWorkflowException.InitializeStub">
            <summary>初始化 type StubWorkflowException 的新实例</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubWorkflowException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubWorkflowException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubWorkflowException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubWorkflowException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Fakes.StubWorkflowException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:WebGrease.Fakes.StubWorkflowException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubWorkflowException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubWorkflowException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubWorkflowException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubWorkflowException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubWorkflowException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubWorkflowException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubWorkflowException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Fakes.StubWorkflowException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:WebGrease.Preprocessing.Fakes.ShimPreprocessingException">
            <summary>WebGrease.Preprocessing.PreprocessingException 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Preprocessing.Fakes.ShimPreprocessingException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Preprocessing.Fakes.ShimPreprocessingException.#ctor(WebGrease.Preprocessing.PreprocessingException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Preprocessing.Fakes.ShimPreprocessingException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Preprocessing.Fakes.ShimPreprocessingException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:WebGrease.Preprocessing.Fakes.ShimPreprocessingException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WebGrease.Preprocessing.Fakes.ShimPreprocessingException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Preprocessing.Fakes.ShimPreprocessingException.Constructor">
            <summary>设置 PreprocessingException.PreprocessingException() 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Preprocessing.Fakes.ShimPreprocessingException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 PreprocessingException.PreprocessingException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Preprocessing.Fakes.ShimPreprocessingException.ConstructorString">
            <summary>设置 PreprocessingException.PreprocessingException(String message) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Preprocessing.Fakes.ShimPreprocessingException.ConstructorStringException">
            <summary>设置 PreprocessingException.PreprocessingException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Preprocessing.Fakes.ShimPreprocessingException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:WebGrease.Preprocessing.Fakes.ShimPreprocessingManager">
            <summary>WebGrease.Preprocessing.PreprocessingManager 的填充码类型</summary>
        </member>
        <member name="M:WebGrease.Preprocessing.Fakes.ShimPreprocessingManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WebGrease.Preprocessing.Fakes.ShimPreprocessingManager.#ctor(WebGrease.Preprocessing.PreprocessingManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WebGrease.Preprocessing.Fakes.ShimPreprocessingManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WebGrease.Preprocessing.Fakes.ShimPreprocessingManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WebGrease.Preprocessing.Fakes.ShimPreprocessingManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WebGrease.Preprocessing.Fakes.ShimPreprocessingManager.ConstructorWebGreaseConfigurationLogManagerITimeMeasure">
            <summary>设置 PreprocessingManager.PreprocessingManager(WebGreaseConfiguration webGreaseConfiguration, LogManager logManager, ITimeMeasure timeMeasure) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Preprocessing.Fakes.ShimPreprocessingManager.GetProcessorsContentItemPreprocessingConfig">
            <summary>设置 PreprocessingManager.GetProcessors(ContentItem contentItem, PreprocessingConfig preprocessConfig) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Preprocessing.Fakes.ShimPreprocessingManager.InitializeStringLogManagerITimeMeasure">
            <summary>设置 PreprocessingManager.Initialize(String pluginPath, LogManager logManager, ITimeMeasure timeMeasure) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Preprocessing.Fakes.ShimPreprocessingManager.ProcessContentItemPreprocessingConfigBoolean">
            <summary>设置 PreprocessingManager.Process(ContentItem contentItem, PreprocessingConfig preprocessConfig, Boolean minimalOutput) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Preprocessing.Fakes.ShimPreprocessingManager.SetContextWebGreaseContext">
            <summary>设置 PreprocessingManager.SetContext(WebGreaseContext webGreaseContext) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Preprocessing.Fakes.ShimPreprocessingManager._GetProcessorsb__6String">
            <summary>设置 PreprocessingManager.&lt;GetProcessors&gt;b__6(String ppe) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Preprocessing.Fakes.ShimPreprocessingManager._Processb__2IPreprocessingEngine">
            <summary>设置 PreprocessingManager.&lt;Process&gt;b__2(IPreprocessingEngine pptu) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Preprocessing.Fakes.ShimPreprocessingManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WebGrease.Preprocessing.Fakes.ShimPreprocessingManager.AllInstances.GetProcessorsContentItemPreprocessingConfig">
            <summary>设置 PreprocessingManager.GetProcessors(ContentItem contentItem, PreprocessingConfig preprocessConfig) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Preprocessing.Fakes.ShimPreprocessingManager.AllInstances.InitializeStringLogManagerITimeMeasure">
            <summary>设置 PreprocessingManager.Initialize(String pluginPath, LogManager logManager, ITimeMeasure timeMeasure) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Preprocessing.Fakes.ShimPreprocessingManager.AllInstances.ProcessContentItemPreprocessingConfigBoolean">
            <summary>设置 PreprocessingManager.Process(ContentItem contentItem, PreprocessingConfig preprocessConfig, Boolean minimalOutput) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Preprocessing.Fakes.ShimPreprocessingManager.AllInstances.SetContextWebGreaseContext">
            <summary>设置 PreprocessingManager.SetContext(WebGreaseContext webGreaseContext) 的 填充码</summary>
        </member>
        <member name="P:WebGrease.Preprocessing.Fakes.ShimPreprocessingManager.AllInstances._GetProcessorsb__6String">
            <summary>设置 PreprocessingManager.&lt;GetProcessors&gt;b__6(String ppe) 的 填充码</summary>
        </member>
        <member name="T:WebGrease.Preprocessing.Fakes.StubIPreprocessingEngine">
            <summary>WebGrease.Preprocessing.IPreprocessingEngine 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Preprocessing.Fakes.StubIPreprocessingEngine.#ctor">
            <summary>初始化 type StubIPreprocessingEngine 的新实例</summary>
        </member>
        <member name="F:WebGrease.Preprocessing.Fakes.StubIPreprocessingEngine.CanProcessContentItemPreprocessingConfig">
            <summary>设置 IPreprocessingEngine.CanProcess(ContentItem contentItem, PreprocessingConfig preprocessConfig) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Preprocessing.Fakes.StubIPreprocessingEngine.NameGet">
            <summary>设置 IPreprocessingEngine.get_Name() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Preprocessing.Fakes.StubIPreprocessingEngine.ProcessContentItemPreprocessingConfigBoolean">
            <summary>设置 IPreprocessingEngine.Process(ContentItem contentItem, PreprocessingConfig preprocessingConfig, Boolean minimalOutput) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Preprocessing.Fakes.StubIPreprocessingEngine.SetContextIWebGreaseContext">
            <summary>设置 IPreprocessingEngine.SetContext(IWebGreaseContext webGreaseContext) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Preprocessing.Fakes.StubIPreprocessingEngine.wg::WebGrease#Preprocessing#IPreprocessingEngine#CanProcess(WebGrease.ContentItem,WebGrease.Configuration.PreprocessingConfig)">
            <summary>设置 IPreprocessingEngine.CanProcess(ContentItem contentItem, PreprocessingConfig preprocessConfig) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Preprocessing.Fakes.StubIPreprocessingEngine.wg::WebGrease#Preprocessing#IPreprocessingEngine#Process(WebGrease.ContentItem,WebGrease.Configuration.PreprocessingConfig,System.Boolean)">
            <summary>设置 IPreprocessingEngine.Process(ContentItem contentItem, PreprocessingConfig preprocessingConfig, Boolean minimalOutput) 的 存根</summary>
        </member>
        <member name="M:WebGrease.Preprocessing.Fakes.StubIPreprocessingEngine.wg::WebGrease#Preprocessing#IPreprocessingEngine#SetContext(WebGrease.IWebGreaseContext)">
            <summary>设置 IPreprocessingEngine.SetContext(IWebGreaseContext webGreaseContext) 的 存根</summary>
        </member>
        <member name="P:WebGrease.Preprocessing.Fakes.StubIPreprocessingEngine.wg::WebGrease#Preprocessing#IPreprocessingEngine#Name">
            <summary>设置 IPreprocessingEngine.get_Name() 的 stub</summary>
        </member>
        <member name="T:WebGrease.Preprocessing.Fakes.StubPreprocessingException">
            <summary>WebGrease.Preprocessing.PreprocessingException 的存根类型</summary>
        </member>
        <member name="M:WebGrease.Preprocessing.Fakes.StubPreprocessingException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Preprocessing.Fakes.StubPreprocessingException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Preprocessing.Fakes.StubPreprocessingException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Preprocessing.Fakes.StubPreprocessingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WebGrease.Preprocessing.Fakes.StubPreprocessingException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubPreprocessingException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WebGrease.Preprocessing.Fakes.StubPreprocessingException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubPreprocessingException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:WebGrease.Preprocessing.Fakes.StubPreprocessingException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Preprocessing.Fakes.StubPreprocessingException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:WebGrease.Preprocessing.Fakes.StubPreprocessingException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Preprocessing.Fakes.StubPreprocessingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:WebGrease.Preprocessing.Fakes.StubPreprocessingException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Preprocessing.Fakes.StubPreprocessingException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Preprocessing.Fakes.StubPreprocessingException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:WebGrease.Preprocessing.Fakes.StubPreprocessingException.InitializeStub">
            <summary>初始化 type StubPreprocessingException 的新实例</summary>
        </member>
        <member name="F:WebGrease.Preprocessing.Fakes.StubPreprocessingException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Preprocessing.Fakes.StubPreprocessingException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:WebGrease.Preprocessing.Fakes.StubPreprocessingException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:WebGrease.Preprocessing.Fakes.StubPreprocessingException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:WebGrease.Preprocessing.Fakes.StubPreprocessingException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:WebGrease.Preprocessing.Fakes.StubPreprocessingException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Preprocessing.Fakes.StubPreprocessingException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:WebGrease.Preprocessing.Fakes.StubPreprocessingException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Preprocessing.Fakes.StubPreprocessingException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Preprocessing.Fakes.StubPreprocessingException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WebGrease.Preprocessing.Fakes.StubPreprocessingException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:WebGrease.Preprocessing.Fakes.StubPreprocessingException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Preprocessing.Fakes.StubPreprocessingException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:WebGrease.Preprocessing.Fakes.StubPreprocessingException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
    </members>
</doc>
